{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Computacional Thinking with Python","text":"python computacionalThinking.pyDone! <p>Ol\u00e1 pessoal, bem vindos!! </p> <p>Neste curso vamos abordar o pensamento computacional, logica de programa\u00e7\u00e3o e algoritmos computacionais. Para isso vamos nos apoiar na linguagem Python como ferramenta de trabalho. </p> <p>Nesta p\u00e1gina voc\u00ea ir\u00e1 encontrar os conte\u00fados ministrados em sala de aula assim como dicas, atividades, labor\u00f3rios e muito mais. </p> <ul> <li>Curso: Tecnologia de Desenvolvimento de Sistemas</li> <li>Disciplina: Computacional Thinking with Python</li> <li>Turmas 2024-2: 1TDSQ</li> <li>Reposit\u00f3rio com todos os arquivos est\u00e1 disponivel em: https://github.com/arnaldojr/computacionalThinking/</li> </ul> <p>Prof. Arnaldo Viana</p>"},{"location":"index.html#objetivos","title":"Objetivos","text":"<p>Ao final da disciplina o estudante ser\u00e1 capaz de:</p> <ul> <li>Entender o Pensamento Computacional;</li> <li>Dominar os Fundamentos do Python;</li> <li>Desenvolver Algoritmos;</li> <li>Implementar Simula\u00e7\u00f5es;</li> <li>Trabalhar com Dados;</li> <li>Colaborar e Comunicar Solu\u00e7\u00f5es;</li> <li>Explorar Aplica\u00e7\u00f5es Computacionais em Problemas Reais.</li> </ul>"},{"location":"index.html#o-que-preciso-saber-para-acompanhar-esse-curso","title":"O que preciso saber para acompanhar esse curso?","text":"<p>Mentalidade Aberta e Curiosidade</p> <pre><code>   - Estar disposto a aprender, experimentar e cometer erros. \n   - A programa\u00e7\u00e3o \u00e9 um processo iterativo e requer pr\u00e1tica e paci\u00eancia.\n</code></pre>"},{"location":"index.html#habilidades-e-conhecimentos-previos","title":"Habilidades e Conhecimentos Pr\u00e9vios:","text":"<ul> <li>L\u00f3gica B\u00e1sica;</li> <li>Habilidades B\u00e1sicas de Computador;</li> <li>Dedica\u00e7\u00e3o</li> </ul>"},{"location":"index.html#dinamica-das-aulas","title":"Din\u00e2mica das aulas:","text":"<p>O curso \u00e9 baseadas em desafios (Listas de exercicios, Desafios , Atividades em aula e extra classe, muita pesquisa e etc.) que abordam teoria e pr\u00e1tica.</p> <p>Ninguem aprende programa\u00e7\u00e3o ouvindo ou vendo, aprendemos programa\u00e7\u00e3o <code>PROGRAMANDO!!</code> </p> <p>Por essa raz\u00e3o as aulas est\u00e3o divididas em pequenos laborat\u00f3rios, cada laborat\u00f3rio possui os seus objetivos especificos. </p> <p></p>"},{"location":"index.html#quais-softwares-preciso-instalar-para-acompanhar-esse-curso","title":"Quais softwares preciso instalar para acompanhar esse curso?","text":"<p>Basicamente, vamos trabalhar com scripts em python e algumas bibliotecas que podem ser executados localmente ou em nuvem. </p> <p>Como sugest\u00e3o de instala\u00e7\u00e3o local:</p> <ul> <li>Python 3.x.</li> <li>Jupyter Notebook.</li> <li>Anaconda.</li> </ul> <p>Em nuvem:</p> <ul> <li>Google Colab.</li> <li>Kaggle.</li> <li>Codespaces.</li> </ul> <p>Vamos utilizar bastante uma ferramenta para desenvolvimento de software colaborativo chamada github. </p> <ul> <li>Github.</li> </ul>"},{"location":"index.html#turmas-passadas","title":"Turmas passadas","text":"<ul> <li>Turmas 2023-2: 1TDSPB</li> </ul>"},{"location":"agenda/agenda.html","title":"Agenda","text":""},{"location":"agenda/agenda.html#primeiro-semestre","title":"Primeiro Semestre","text":"Ter\u00e7a-feiraRemoto Sexta-feiraPresencial Conte\u00fado  20/08    23/08   Fiap First Week (FFW)   27/08 30/08 Aula Magna - Apresenta\u00e7\u00e3o do curso, din\u00e2mica das aulas, avalia\u00e7\u00f5es. Datas importantes (CP) 03/09 06/09 Prepara\u00e7\u00e3o infraestrutura, introdu\u00e7\u00e3o \u00e0 linguagem de programa\u00e7\u00e3o PythonVari\u00e1veis, tipos de dados, opera\u00e7\u00f5es l\u00f3gicas e matem\u00e1ticas (lista1) 10/09 13/09 Estruturas de decis\u00e3o + Erros (lista2) 17/09  20/09   CheckPoint 1 - Presencial, individual e sem consulta.  24/09 27/09 Estruturas de repeti\u00e7\u00e3o Mini-Projeto 1 01/10 04/10 Trabalhando com listas e tuplas (lista3) 08/10  11/10  CheckPoint 2 - Presencial, individual e sem consulta.  15/10 18/10 Trabalhando com dicion\u00e1rios e conjuntos (lista4) 22/10 25/10 Trabalhando com arquivos. Evento NEXT s\u00e1bado 26 29/10  01/11  Apresenta\u00e7\u00e3o do mini-projeto CP3  05/11 08/11 Introdu\u00e7\u00e3o \u00e0 Programa\u00e7\u00e3o Orientada a Objetos  12/11   15/11   Per\u00edodo de aplica\u00e7\u00e3o das Provas Semestrais   19/11   22/11   Per\u00edodo de aplica\u00e7\u00e3o das Provas Semestrais"},{"location":"aulas/checkpoint/index.html","title":"CHECKPOINTS","text":""},{"location":"aulas/checkpoint/index.html#etica-e-integridade-academica","title":"\u00c9tica e Integridade Acad\u00eamica","text":"<ul> <li><code>Honestidade Intelectual</code>: Mantenha a integridade de seu trabalho. Evite qualquer tipo de desonestidade intelectual.</li> <li><code>Autoavalia\u00e7\u00e3o</code>: A autoavalia\u00e7\u00e3o deve refletir com precis\u00e3o o conte\u00fado apresentado. Inconsist\u00eancias nesta avalia\u00e7\u00e3o podem ser consideradas como falta de integridade.</li> <li><code>Refer\u00eancias e Pl\u00e1gio</code>: Ao realizar pesquisas, \u00e9 enriquecedor citar outras fontes. No entanto, ao usar conte\u00fados que n\u00e3o s\u00e3o de sua autoria, como textos ou imagens, inclua sempre uma se\u00e7\u00e3o de \"refer\u00eancias\", indicando as fontes utilizadas.</li> <li><code>Interc\u00e2mbio de Trabalhos</code>: Cada aluno \u00e9 respons\u00e1vel por seu aprendizado e desenvolvimento. Evite copiar ou permitir que seu trabalho seja copiado por outros. Trabalhos duplicados ter\u00e3o suas notas anuladas.</li> </ul>"},{"location":"aulas/checkpoint/index.html#sobre-as-avaliacoes-checkpoints","title":"Sobre as Avalia\u00e7\u00f5es - Checkpoints","text":"<p>Leia com aten\u00e7\u00e3o as orienta\u00e7\u00f5es gerais sobre os checkponts</p>"},{"location":"aulas/checkpoint/index.html#o-que-e","title":"O que \u00e9:","text":"<p>Os Checkpoints consistem em <code>avalia\u00e7\u00f5es pr\u00e1ticas individuais</code> e <code>mini-projetos em grupos</code>, com objetivo de mensurar os conceitos adquiridos dos conte\u00fados ensinados.</p>"},{"location":"aulas/checkpoint/index.html#datas-e-formatos","title":"Datas e Formatos:","text":"<p>Os checkpoints s\u00e3o sempre divulgados/publicados com anteced\u00eancia tanto aqui no site da disciplina (ver agenda das aulas) como no portal do aluno da FIAP.</p> Data CheckPoint 20/09 CheckPoint 1 - Presencial, individual e sem consulta. 11/10 CheckPoint 2 - Presencial, individual e sem consulta. 01/11 CheckPoint 3 - Apresenta\u00e7\u00e3o do mini-projeto. <ul> <li>Caso seja necess\u00e1rio mudan\u00e7a de data de CP, o estudante sempre ser\u00e1 avisado com anteced\u00eancia. </li> </ul>"},{"location":"aulas/checkpoint/cp3.html","title":"CHECKPOINT3","text":"<p>O Checkpoint 3 \u00e9 baseado em um <code>mini-projeto em grupo</code>, com objetivo de refor\u00e7ar os conceitos adquiridos dos conte\u00fados ensinados, na pr\u00e1tica.</p>"},{"location":"aulas/checkpoint/cp3.html#datas-e-formatos","title":"Datas e Formatos:","text":"<p>A solu\u00e7\u00e3o ser\u00e1 apresentada em sala de aula, e cada grupo ter\u00e1 um tempo determinado para demonstrar o funcionamento do projeto, explicar o c\u00f3digo e responder a quaisquer perguntas. \u00c9 importante estar bem preparado para esta apresenta\u00e7\u00e3o, assegurando que todos os membros do grupo conhe\u00e7am bem o projeto e estejam aptos a participar da discuss\u00e3o.</p> Data CheckPoint 10/11 CheckPoint 3 - Apresenta\u00e7\u00e3o do mini-projeto."},{"location":"aulas/checkpoint/cp3.html#propostas-de-projetos","title":"Propostas de projetos","text":"<p>Os mini-projetos est\u00e3o categorizados em 2 grandes \u00e1reas:</p>"},{"location":"aulas/checkpoint/cp3.html#sistemas-de-gestao","title":"Sistemas de Gest\u00e3o","text":""},{"location":"aulas/checkpoint/cp3.html#sistema-de-reservas-para-eventos","title":"Sistema de Reservas para Eventos","text":"<p>Objetivo: Criar um programa para gerenciar reservas de ingressos para eventos.</p> <p>Funcionalidades:  - Adicionar eventos - Comprar ingressos - Cancelar reservas - Listar eventos dispon\u00edveis - Mostrar informa\u00e7\u00f5es sobre eventos</p> <p>Estruturas de Dados: Dicion\u00e1rios para armazenar eventos e listas para armazenar reservas.</p>"},{"location":"aulas/checkpoint/cp3.html#gerenciador-de-financas-pessoais","title":"Gerenciador de Finan\u00e7as Pessoais","text":"<p>Objetivo: Criar um programa para ajudar os usu\u00e1rios a gerenciar suas finan\u00e7as pessoais.</p> <p>Funcionalidades:  - Adicionar transa\u00e7\u00f5es (receitas e despesas) - Visualizar o saldo atual - Gerar um relat\u00f3rio de transa\u00e7\u00f5es - Categorizar transa\u00e7\u00f5es</p> <p>Estruturas de Dados: Utilize listas para armazenar as transa\u00e7\u00f5es, onde cada transa\u00e7\u00e3o \u00e9 um dicion\u00e1rio contendo tipo (receita ou despesa), valor, categoria, e data. Dicion\u00e1rios podem ser usados para categorizar as transa\u00e7\u00f5es e calcular totais por categoria.</p>"},{"location":"aulas/checkpoint/cp3.html#jogos-e-entretenimento","title":"Jogos e Entretenimento","text":""},{"location":"aulas/checkpoint/cp3.html#jogo-pedra-papel-ou-tesoura","title":"Jogo Pedra, Papel ou Tesoura","text":"<p>Objetivo: Criar um jogo simples de pedra, papel ou tesoura contra o computador.</p> <p>Funcionalidades:  - Escolha do usu\u00e1rio - Escolha aleat\u00f3ria do computador - Determinar o vencedor - Manter uma contagem de vit\u00f3rias/derrotas</p> <p>Estruturas de Dados: Vari\u00e1veis para armazenar escolhas e contadores para vit\u00f3rias/derrotas.</p>"},{"location":"aulas/checkpoint/cp3.html#jogo-da-velha","title":"Jogo da Velha","text":"<p>Objetivo: Desenvolver uma vers\u00e3o simples do jogo da velha para dois jogadores.</p> <p>Funcionalidades:  - Exibir o tabuleiro - Fazer uma jogada - Verificar se h\u00e1 um vencedor - Alternar entre os jogadores</p> <p>Estruturas de Dados: Utilize uma lista de listas para representar o tabuleiro, onde cada sub-lista representa uma linha do tabuleiro e cada elemento \u00e9 uma c\u00e9lula. Inicialize o tabuleiro com valores vazios e atualize \u00e0 medida que os jogadores fazem suas jogadas.</p>"},{"location":"aulas/checkpoint/cp3.html#outras-propostas","title":"Outras propostas","text":"<ul> <li>[outra op\u00e7\u00e3o] O grupo tem a liberdade de propor um tema diferente dos listados anteriormente. Converse com o professor para alinhar as funcionalidades e a estrutura de dados, para garantir n\u00edvel de dificuldade od projeto.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#criterios-de-avaliacao","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o","text":""},{"location":"aulas/checkpoint/cp3.html#1-uso-de-estruturas-de-dados-20-pontos","title":"1. Uso de Estruturas de Dados (20 pontos)","text":"<ul> <li>Iniciante (0-5 pontos): Uso limitado e incorreto de estruturas de dados.</li> <li>Intermedi\u00e1rio (6-10 pontos): Uso b\u00e1sico de listas e dicion\u00e1rios.</li> <li>Avan\u00e7ado (11-15 pontos): Uso eficiente de listas, dicion\u00e1rios e outras estruturas de dados. Estruturas de dados s\u00e3o utilizadas de forma apropriada para resolver o problema.</li> <li>Excelente (16-20 pontos): Demonstra\u00e7\u00e3o excepcional de conhecimento e habilidade no uso de estruturas de dados, incluindo a cria\u00e7\u00e3o de classes personalizadas quando necess\u00e1rio.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#2-funcoes-e-modularizacao-20-pontos","title":"2. Fun\u00e7\u00f5es e Modulariza\u00e7\u00e3o (20 pontos)","text":"<ul> <li>Iniciante (0-5 pontos): Uso limitado de fun\u00e7\u00f5es, c\u00f3digo repetitivo.</li> <li>Intermedi\u00e1rio (6-10 pontos): Fun\u00e7\u00f5es s\u00e3o utilizadas, mas ainda h\u00e1 repeti\u00e7\u00e3o de c\u00f3digo ou as fun\u00e7\u00f5es s\u00e3o muito longas.</li> <li>Avan\u00e7ado (11-15 pontos): Fun\u00e7\u00f5es s\u00e3o bem definidas, modularizadas e reutiliz\u00e1veis.</li> <li>Excelente (16-20 pontos): C\u00f3digo extremamente bem organizado, fun\u00e7\u00f5es s\u00e3o curtas, focadas e reutiliz\u00e1veis em diferentes partes do programa.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#3-manipulacao-de-arquivos-20-pontos","title":"3. Manipula\u00e7\u00e3o de Arquivos (20 pontos)","text":"<ul> <li>Iniciante (0-5 pontos): Erros frequentes ao ler/escrever em arquivos ou n\u00e3o implementa esta funcionalidade.</li> <li>Intermedi\u00e1rio (6-10 pontos): Consegue ler e escrever em arquivos, mas pode haver problemas de gerenciamento de arquivos (por exemplo, n\u00e3o fechar um arquivo).</li> <li>Avan\u00e7ado (11-15 pontos): Manipula\u00e7\u00e3o correta de arquivos, incluindo leitura, escrita e fechamento adequado de arquivos.</li> <li>Excelente (16-20 pontos): Uso avan\u00e7ado de manipula\u00e7\u00e3o de arquivos, incluindo tratamento de exce\u00e7\u00f5es e garantia de que os arquivos s\u00e3o sempre fechados corretamente, mesmo em caso de erro.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#4-controle-de-fluxo-e-estruturas-de-decisao-20-pontos","title":"4. Controle de Fluxo e Estruturas de Decis\u00e3o (20 pontos)","text":"<ul> <li>Iniciante (0-5 pontos): Uso limitado e incorreto de estruturas de decis\u00e3o.</li> <li>Intermedi\u00e1rio (6-10 pontos): Uso b\u00e1sico de estruturas de decis\u00e3o, mas o c\u00f3digo pode ser dif\u00edcil de seguir.</li> <li>Avan\u00e7ado (11-15 pontos): Estruturas de decis\u00e3o s\u00e3o utilizadas eficientemente para controlar o fluxo do programa.</li> <li>Excelente (16-20 pontos): Uso excepcional de estruturas de decis\u00e3o, tornando o c\u00f3digo limpo, f\u00e1cil de seguir e eficiente.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#5-tratamento-de-erros-e-validacao-de-dados-20-pontos","title":"5. Tratamento de Erros e Valida\u00e7\u00e3o de Dados (20 pontos)","text":"<ul> <li>Iniciante (0-5 pontos): Erros frequentes, sem valida\u00e7\u00e3o de dados ou tratamento de erros.</li> <li>Intermedi\u00e1rio (6-10 pontos): Alguma valida\u00e7\u00e3o de dados e tratamento de erros, mas n\u00e3o \u00e9 abrangente.</li> <li>Avan\u00e7ado (11-15 pontos): Boa valida\u00e7\u00e3o de dados e tratamento de erros, cobrindo a maioria dos casos de uso.</li> <li>Excelente (16-20 pontos): Excelente valida\u00e7\u00e3o de dados e tratamento de erros, proporcionando uma experi\u00eancia de usu\u00e1rio robusta e sem falhas.</li> </ul>"},{"location":"aulas/checkpoint/cp3.html#contato-e-suporte","title":"Contato e Suporte","text":"<p>N\u00e3o existem perguntas ruins, caso tenham d\u00favidas sobre o projeto, n\u00e3o hesitem em perguntar tanto em aula como fora de aula. O objetivo \u00e9 que que voc\u00ea tenha uma experi\u00eancia de aprendizado positiva, produtiva e divertida!</p>"},{"location":"aulas/checkpoint/cp3.html#checklist-de-submissao","title":"Checklist de Submiss\u00e3o","text":"<p>O projeto deve ser submetido em um reposit\u00f3rio github que o grupo ir\u00e1 criar. Aguns pontos relevantes para garantir que todos os requisitos foram atendidos:</p> <ul> <li> C\u00f3digo Fonte: Todo o c\u00f3digo fonte est\u00e1 bem comentado e formatado de acordo com as boas pr\u00e1ticas de programa\u00e7\u00e3o?</li> <li> Funcionalidades: Todas as funcionalidades requisitadas foram implementadas e est\u00e3o funcionando corretamente?</li> <li> Estruturas de Dados: As estruturas de dados escolhidas s\u00e3o adequadas para as tarefas propostas?</li> <li> Testes: O c\u00f3digo foi testado e \u00e9 funcional?</li> <li> Apresenta\u00e7\u00e3o: O grupo est\u00e1 preparado para a apresenta\u00e7\u00e3o, com todos os membros conhecendo bem o projeto e aptos a responder perguntas?</li> <li> Documenta\u00e7\u00e3o: A documenta\u00e7\u00e3o do projeto est\u00e1 completa?</li> </ul>"},{"location":"aulas/checkpoint/cp4.html","title":"Cp4","text":""},{"location":"aulas/checkpoint/cp4.html#checkpoint4","title":"CHECKPOINT4","text":""},{"location":"aulas/checkpoint/cp4.html#objetivo","title":"Objetivo","text":"<p>A proposta \u00e9 focada no <code>estudo pr\u00e1tico de algoritmos de busca e ordena\u00e7\u00e3o aplicados a cen\u00e1rios reais</code>. Para isso, voc\u00eas dever\u00e3o desenvolver uma biblioteca customizada em Python que incorpore as t\u00e9cnicas de <code>ordena\u00e7\u00e3o</code> e <code>busca</code> estudadas, al\u00e9m de seguir as boas pr\u00e1ticas de <code>programa\u00e7\u00e3o orientada a objetos</code> (POO).</p>"},{"location":"aulas/checkpoint/cp4.html#desenvolvimento-da-infraestrutura","title":"Desenvolvimento da infraestrutura:","text":"<ul> <li> <p>Desenvolvimento da Biblioteca:</p> <ul> <li> <p>Crie um <code>pacote</code> chamado <code>algoritmos</code>, que servir\u00e1 como a biblioteca customizada. Dentro do pacote, crie m\u00f3dulos separados para as t\u00e9cnicas de ordena\u00e7\u00e3o e busca.</p> <ul> <li> <p>Crie um m\u00f3dulo <code>ordenacao.py</code> que contenha uma <code>classe Ordenacao</code> com m\u00e9todos est\u00e1ticos para os algoritmos de <code>ordena\u00e7\u00e3o</code> estudados.</p> </li> <li> <p>Crie um m\u00f3dulo <code>busca.py</code> que contenha uma <code>classe Busca</code> com m\u00e9todos est\u00e1ticos para os algoritmos de <code>busca</code> estudados.</p> </li> </ul> </li> <li> <p>Crie um <code>pacote</code> chamado <code>testes</code>, que conter\u00e1 testes para validar que sua biblioteca est\u00e1 funcionando corretamente. Os testes devem cobrir diferentes tamanhos de entrada e condi\u00e7\u00f5es (ordenadas e desordenadas).</p> <ul> <li>Dentro do pacote testes, crie os <code>m\u00f3dulos</code> <code>test_ordenacao.py</code> e <code>test_busca.py</code> para testar os m\u00e9todos de ordena\u00e7\u00e3o e busca, respectivamente.</li> </ul> </li> <li> <p>Voc\u00eas devem utilizar a biblioteca customizada como um <code>m\u00f3dulo</code> em sua aplica\u00e7\u00e3o principal <code>main.py</code>.</p> </li> <li> <p>A estrutura de pastas e arquivos para a biblioteca customizada pode ser organizada da seguinte forma:</p> </li> </ul> <pre><code>projeto/\n\u2502\n\u251c\u2500\u2500 algoritmos/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 ordenacao.py\n\u2502   \u2514\u2500\u2500 busca.py\n\u2502\n\u251c\u2500\u2500 testes/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 test_ordenacao.py\n\u2502   \u2514\u2500\u2500 test_busca.py\n\u2502\n\u2514\u2500\u2500 main.py\n</code></pre> </li> </ul>"},{"location":"aulas/checkpoint/cp4.html#implementacoes","title":"Implementa\u00e7\u00f5es:","text":"<ul> <li> <p>Para o pacore <code>algoritmos</code>, implemente todos os algoritmos de ordena\u00e7\u00e3o e de busca estudados em aula.</p> </li> <li> <p>Para o pacote <code>testes</code> considere realizar os seguinte testes:</p> <ul> <li> <p>Testes de Ordena\u00e7\u00e3o:</p> <ol> <li>vetor ordenado crescente: [3, 7, 33, 59, 71]</li> <li>vetor n\u00e3o ordenado: [71, 7, 3, 9, 7]</li> <li>vetor ordenado descrescente: [71, 59, 33, 7, 3]</li> <li>Vetor vazio: []</li> <li>Vetor com um \u00fanico elemento: [42]</li> <li>Vetor com elementos repetidos: [3, 7, 3, 9, 7]</li> <li>Vetor com elementos negativos: [-5, -3, -9, -1]</li> </ol> </li> <li> <p>Testes de Busca:</p> <ol> <li>Busca por um elemento que est\u00e1 presente no vetor.</li> <li>Busca por um elemento que n\u00e3o est\u00e1 presente no vetor.</li> <li>Busca em um vetor vazio.</li> <li>Busca em um vetor com um \u00fanico elemento.</li> </ol> </li> </ul> </li> <li> <p>Para o programa principal <code>main.py</code> realize <code>An\u00e1lise de Desempenho</code> e <code>Relat\u00f3rios de Teste</code>:</p> <ul> <li>Vamos realizar uma an\u00e1lise impirica para determinar a performance dos algoritmos, essa an\u00e1lise computa o tempo de execu\u00e7\u00e3o de cada algortimo para executar. Por exemplo:</li> </ul> <pre><code>def medir_tempo_execucao(algoritmo, lista):\ninicio = time.time() ### define o tempo inicial\nalgoritmo(lista)     ### algoritmo sendo executado\nfim = time.time()    ### tempo final\nreturn fim - inicio  ### calcula o tempo total de execu\u00e7\u00e3o   \n</code></pre> <ul> <li> <p>Para realizar a <code>an\u00e1lise de desempenho</code>, voc\u00eas podem seguir os seguintes passos:</p> <ol> <li><code>Importar M\u00f3dulos Necess\u00e1rios</code>: Importe os m\u00f3dulos de ordena\u00e7\u00e3o e busca da sua biblioteca e modulos adicionais como <code>import time</code>, <code>import random</code> e <code>import matplotlib.pyplot as plt</code>.</li> <li><code>Gerar Dados de Teste</code>: - Crie listas de diferentes tamanhos para testar os algoritmos de ordena\u00e7\u00e3o e busca. Teste <code>ao menos</code> listas com <code>100</code>, <code>1.000</code> e <code>10.000</code> elementos, etc.</li> <li><code>Medir Tempo de Execu\u00e7\u00e3o</code>: Para cada lista de teste, me\u00e7a o tempo de execu\u00e7\u00e3o de cada algoritmo de ordena\u00e7\u00e3o e busca. Crie uma fun\u00e7\u00e3o que realize esse teste automaticamente. Use a fun\u00e7\u00e3o <code>time.time()</code> para obter o tempo antes e depois da execu\u00e7\u00e3o do algoritmo e calcule a diferen\u00e7a de tempo.</li> </ol> </li> <li> <p>Para realizar o <code>relat\u00f3rio</code>, voc\u00eas podem seguir os seguintes passos:</p> <ol> <li><code>Armazenar Resultados</code>: Armazene os resultados dos tempos de execu\u00e7\u00e3o em um dicion\u00e1rio, onde as chaves s\u00e3o os nomes dos algoritmos e os valores s\u00e3o listas dos tempos de execu\u00e7\u00e3o correspondentes a cada tamanho de lista de teste.</li> <li><code>Gerar Gr\u00e1fico</code>: Use o <code>matplotlib.pyplot</code> para gerar um gr\u00e1fico que compare o tempo de execu\u00e7\u00e3o dos algoritmos em fun\u00e7\u00e3o do tamanho da lista de teste.</li> <li><code>Salvar o Gr\u00e1fico</code>: Salve o gr\u00e1fico como uma imagem (plt.savefig(\"relatorio_grafico.png\")).</li> <li><code>Identificar o Algoritmo Campe\u00e3o</code>: Analise o gr\u00e1fico para determinar qual algoritmo teve o melhor desempenho em termos de tempo de execu\u00e7\u00e3o para os diferentes tamanhos de lista.</li> </ol> </li> </ul> </li> </ul>"},{"location":"aulas/checkpoint/cp4.html#datas-e-formatos","title":"Datas e Formatos:","text":"<p>A solu\u00e7\u00e3o ser\u00e1 apresentada em aula remota, e cada grupo ter\u00e1 at\u00e9 <code>8 min</code> para demonstrar o funcionamento do projeto, explicar o c\u00f3digo e responder a quaisquer perguntas. \u00c9 importante estar bem preparado para esta apresenta\u00e7\u00e3o, assegurando que todos os membros do grupo conhe\u00e7am bem o projeto e estejam aptos a participar da discuss\u00e3o.</p> Data CheckPoint 26/03 CheckPoint 4 - Apresenta\u00e7\u00e3o do CP4."},{"location":"aulas/checkpoint/cp4.html#criterios-de-avaliacao","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o","text":"<ul> <li> <p><code>Implementa\u00e7\u00e3o dos Algoritmos (20%)</code>: Cria\u00e7\u00e3o correta do pacote Algoritmos com as implementa\u00e7\u00f5es dos algoritmos de ordena\u00e7\u00e3o e busca estudados (10%). Estrutura e Organiza\u00e7\u00e3o do C\u00f3digo (10%).</p> </li> <li> <p><code>Implementa\u00e7ao dos Testes (30%)</code>: Cria\u00e7\u00e3o correta do pacote testes incluindo heran\u00e7a e diferentes casos e condi\u00e7\u00f5es (10%). Casos de testes implementados corretamente (20%).</p> </li> <li> <p><code>An\u00e1lise de Desempenho (30%)</code>: Implementa\u00e7\u00e3o correta dos testes de desempenho para diferentes tamanhos de listas.</p> </li> <li> <p><code>Relat\u00f3rios de Teste (20%)</code>: An\u00e1lise completa dos resultados, incluindo a apresenta\u00e7\u00e3o de gr\u00e1ficos e a identifica\u00e7\u00e3o do algoritmo campe\u00e3o (20%).</p> </li> <li> <p><code>Documenta\u00e7\u00e3o e apresenta\u00e7\u00e3o (B\u00f4nus at\u00e9 10%)</code>: Documenta\u00e7\u00e3o do c\u00f3digo completa e organizada no reposit\u00f3rio, incluindo docstrings e coment\u00e1rios explicativos. Apresenta\u00e7\u00e3o coerente, de forma t\u00e9cnica.</p> </li> </ul>"},{"location":"aulas/checkpoint/cp4.html#contato-e-suporte","title":"Contato e Suporte","text":"<p>N\u00e3o existem perguntas ruins, caso tenham d\u00favidas sobre o projeto, n\u00e3o hesitem em perguntar tanto em aula como fora de aula. O objetivo \u00e9 que que voc\u00eas tenham uma experi\u00eancia de aprendizado positiva, produtiva e divertida!</p>"},{"location":"aulas/checkpoint/cp4.html#checklist-de-submissao","title":"Checklist de Submiss\u00e3o","text":"<p>O projeto deve ser submetido em um reposit\u00f3rio github que o grupo ir\u00e1 criar. Aguns pontos relevantes para garantir que todos os requisitos foram atendidos:</p> <ul> <li> C\u00f3digo Fonte: Todo o c\u00f3digo fonte est\u00e1 bem comentado e formatado de acordo com as boas pr\u00e1ticas de programa\u00e7\u00e3o?</li> <li> Funcionalidades: Todas as funcionalidades requisitadas foram implementadas e est\u00e3o funcionando corretamente?</li> <li> Estruturas de Dados: As estruturas de dados escolhidas s\u00e3o adequadas para as tarefas propostas?</li> <li> Testes: O c\u00f3digo foi testado e \u00e9 funcional?</li> <li> Apresenta\u00e7\u00e3o: O grupo est\u00e1 preparado para a apresenta\u00e7\u00e3o, com todos os membros conhecendo bem o projeto e aptos a responder perguntas?</li> <li> Documenta\u00e7\u00e3o: A documenta\u00e7\u00e3o do projeto est\u00e1 completa?</li> </ul>"},{"location":"aulas/checkpoint/cp5.html","title":"Cp5","text":""},{"location":"aulas/checkpoint/cp5.html#checkpoint-5","title":"CheckPoint 5","text":"<p>Mini Projeto de Web aplicado com python.</p>"},{"location":"aulas/checkpoint/cp5.html#objetivo-do-projeto","title":"Objetivo do Projeto:","text":"<p>Cada grupo deve escolher um tema especifico de atua\u00e7\u00e3o e propor uma solu\u00e7\u00e3o por meio do desenvolvimento deste projeto.</p> <p>O grupo deve criar uma aplica\u00e7\u00e3o web que basicamente consuma dados de API`s externas e/ou colete os dados por meio de raspagem de dados e os armazene em um banco de dados de sua prefer\u00eancia. </p> <p>Al\u00e9m disso, a aplica\u00e7\u00e3o deve realizar o tratamento coerente das informa\u00e7\u00f5es coletadas e dispoinibiliza-las para acesso por meio de uma API REST e/ou conter uma interface Web na qual os usu\u00e1rios possam visualizar e interagir com as informa\u00e7\u00f5es.</p>"},{"location":"aulas/checkpoint/cp5.html#requisitos","title":"Requisitos:","text":"<ul> <li> <p>A solu\u00e7\u00e3o deve ser <code>original e n\u00e3o trivial</code>, demonstrando um entendimento profundo e uma aplica\u00e7\u00e3o criativa das t\u00e9cnicas aprendidas em aula.</p> </li> <li> <p>Implementa\u00e7\u00e3o do back-end em Python com seus frameworks: Flask, FastAPI, Requests e Beautiful Soup, SQLite, MySql, Pandas...etc.</p> </li> <li> <p>A escolha do front-end e banco de dados \u00e9 aberta para cada grupo escolher a melhor solu\u00e7\u00e3o.</p> </li> <li> <p>Espera-se que os grupos:</p> <ul> <li>Desenvolvam uma <code>abordagem \u00fanica</code> para o problema escolhido, n\u00e3o pode ser c\u00f3pia direta de solu\u00e7\u00f5es existentes.</li> <li>Mostrem capacidade de integrar e adaptar conceitos aprendidos em aula para atender \u00e0s necessidades espec\u00edficas do projeto.</li> <li>Mostrem habilidade em inovar e pensar criticamente, buscando desenvolver maneiras eficazes de resolver problemas.</li> </ul> </li> <li> <p><code>Importante</code>: N\u00e3o ser\u00e1 aceita a simples replica\u00e7\u00e3o de projetos prontos de outros reposit\u00f3rios, assim como o uso de prompts de GPT e outras intelig\u00eancias artificiais generativas sem adapta\u00e7\u00e3o significativa e contribui\u00e7\u00e3o pr\u00f3pria. </p> </li> </ul>"},{"location":"aulas/checkpoint/cp5.html#criterios-de-avaliacao","title":"Crit\u00e9rios de Avalia\u00e7\u00e3o:","text":"<ul> <li>Inova\u00e7\u00e3o e criatividade na escolha e abordagem do problema.</li> <li>Argui\u00e7\u00e3o t\u00e9cnica de cada aluno sobre o projeto.</li> <li>Qualidade t\u00e9cnica de documenta\u00e7\u00e3o e c\u00f3digo e funcionalidade do projeto.</li> <li>Apresenta\u00e7\u00e3o e comunica\u00e7\u00e3o das ideias e resultados.</li> </ul>"},{"location":"aulas/checkpoint/cp5.html#dinamicas-das-proximas-aulas","title":"Dinamicas das pr\u00f3ximas aulas:","text":"<p>Cada aula seja online ou presencial ser\u00e3o dividas em 2 momentos:</p> <ul> <li> <p><code>1a parte</code>: <code>Aula expositiva</code> e/ou <code>handson</code> com a introdu\u00e7\u00e3o de novos conceitos chaves para o projeto.</p> <ul> <li>Ser\u00e1 uma intro\u00e7\u00e3o sobre o tema e uma demonstra\u00e7\u00e3o pr\u00e1tica de uso. </li> </ul> </li> <li> <p><code>2a parte</code>: <code>Aula est\u00fadio</code> para desenvolvimento e <code>acompanhamento do projeto</code>.</p> <ul> <li>Entregas de acompanhamento semanal com <code>feedback cont\u00ednuo</code> do projeto, via github.</li> </ul> </li> </ul>"},{"location":"aulas/checkpoint/cp5.html#feedback-continuo","title":"Feedback Cont\u00ednuo:","text":"<p>Os grupos receber\u00e3o feedback ap\u00f3s cada atualiza\u00e7\u00e3o por meio de <code>issues</code> no reposit\u00f3rio do projeto, e que valer\u00e3o parte da nota final a cada semana, para garantir que estejam no caminho certo e para ajudar na resolu\u00e7\u00e3o de quaisquer problemas t\u00e9cnicos ou conceituais.</p>"},{"location":"aulas/checkpoint/cp5.html#acompanhamento-semanal","title":"Acompanhamento semanal","text":"Data Atividade Nota parcial 12/04 Reposit\u00f3rio GitHub: Inclui README claro, defini\u00e7\u00e3o de projeto bem articulada e desafiadora. --- 16/04 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>20%</code>. 0 - 1 pontos 23/04 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>40%</code>. 0 - 2 pontos 30/05 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>60%</code>. 0 - 2 pontos 07/05 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>80%</code>. 0 - 2 pontos 14/05 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>90%</code>. 0 - 1 pontos 17/05 Atualiza\u00e7\u00f5es do GitHub: Progresso documentado e c\u00f3digo atualizado, mostrando implementa\u00e7\u00e3o aproximada de <code>100%</code>. 0 - 2 pontos 21/05 AVALIA\u00c7\u00c3O CP3 para o grupo que <code>N\u00c3O</code> participar do do acompanhamento semanal --- 24/05 APRESENTA\u00c7\u00c3O DO PROJETO ---"},{"location":"aulas/checkpoint/cp5.html#composicao-da-nota-final","title":"Composi\u00e7\u00e3o da nota final","text":"Data Crit\u00e9rio Nota 24/05 Apresenta\u00e7\u00e3o e argui\u00e7\u00e3o do projeto 0 - 5 pontos 24/05 Avalia\u00e7\u00e3o da Documenta\u00e7\u00e3o t\u00e9cnica do projeto 0 - 5 pontos De 12/04 at\u00e9 17/05 Acompanhamento semanal (para os grupos que participarem) 0 - 10 pontos <ul> <li> <p>CP2:</p> <ul> <li>Dia 24/05, composta de <code>Apresenta\u00e7\u00e3o e argui\u00e7\u00e3o do projeto</code> + <code>valia\u00e7\u00e3o da Documenta\u00e7\u00e3o t\u00e9cnica do projeto</code>.</li> </ul> </li> <li> <p>CP3:</p> <ul> <li>Os grupos que realizarem o acompanhamento semanal ter\u00e1 a somat\u00f3ria do <code>acompanhamento semanal</code> convertida nota de CP3.</li> <li>Os grupos que <code>n\u00e3o participarem</code> do acompanhamento semanal <code>n\u00e3o ganham nota</code> e podem fazer o CP3 dia 21/05. O <code>CP3 Ser\u00e1 uma avalia\u00e7\u00e3o individual e presencial durante o periodo da aula</code>.  </li> </ul> </li> </ul>"},{"location":"aulas/checkpoint/simulado.html","title":"Simulados","text":""},{"location":"aulas/checkpoint/simulado.html#simulados","title":"Simulados","text":"<p>Links dos simulados de anos anteriores:</p> <ul> <li>CP1: Checkpoint1 2023https://classroom.github.com/a/6twBjf8Z</li> <li>CP1: Checkpoint1 2024https://classroom.github.com/a/47ogBm9-</li> <li>CP2: Checkpoint2 2023https://classroom.github.com/a/389z7HNx</li> </ul>"},{"location":"aulas/ctp/algorithms/big-o-notation.html","title":"Nota\u00e7\u00e3o Big O","text":""},{"location":"aulas/ctp/algorithms/big-o-notation.html#bntroducao-a-notacao-big-o","title":"bntrodu\u00e7\u00e3o \u00e0 Nota\u00e7\u00e3o Big O","text":"<p>A nota\u00e7\u00e3o Big O \u00e9 uma maneira de expressar a efici\u00eancia de um algoritmo em termos de seu tempo de execu\u00e7\u00e3o ou espa\u00e7o utilizado, em fun\u00e7\u00e3o do tamanho da entrada. \u00c9 uma ferramenta fundamental na an\u00e1lise de algoritmos, pois permite comparar a efici\u00eancia de diferentes abordagens sem se preocupar com as diferen\u00e7as espec\u00edficas de hardware ou linguagem de programa\u00e7\u00e3o.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#intuicao-por-tras-da-notacao-big-o","title":"Intui\u00e7\u00e3o por tr\u00e1s da Nota\u00e7\u00e3o Big O","text":"<p>Imagine que voc\u00ea tenha uma biblioteca com milhares de livros e precise encontrar um livro espec\u00edfico. Se os livros estiverem desorganizados, voc\u00ea ter\u00e1 que olhar cada livro um por um at\u00e9 encontrar o que procura. Esse processo \u00e9 ineficiente e o tempo que leva para encontrar o livro aumenta \u00e0 medida que o n\u00famero de livros aumenta. Agora, imagine que os livros est\u00e3o organizados alfabeticamente. Nesse caso, voc\u00ea pode usar uma busca bin\u00e1ria para encontrar o livro, o que \u00e9 muito mais r\u00e1pido. A nota\u00e7\u00e3o Big O nos ajuda a quantificar essa diferen\u00e7a de efici\u00eancia.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#definicao-formal","title":"Defini\u00e7\u00e3o Formal","text":"<p>A nota\u00e7\u00e3o Big O descreve o limite superior do tempo de execu\u00e7\u00e3o de um algoritmo em termos do tamanho da entrada. Por exemplo, um algoritmo com tempo de execu\u00e7\u00e3o O(n) significa que o tempo para executar o algoritmo aumenta linearmente com o tamanho da entrada n. Da mesma forma, um algoritmo O(n\u00b2) significa que o tempo de execu\u00e7\u00e3o aumenta proporcionalmente ao quadrado do tamanho da entrada.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#exemplos-comuns-de-notacao-big-o","title":"Exemplos Comuns de Nota\u00e7\u00e3o Big O","text":"<ul> <li><code>O(1)</code>: Tempo constante - O tempo de execu\u00e7\u00e3o n\u00e3o depende do tamanho da entrada.</li> <li><code>O(log n)</code>: Tempo logar\u00edtmico - O tempo de execu\u00e7\u00e3o aumenta logaritmicamente com o tamanho da entrada.</li> <li><code>O(n)</code>: Tempo linear - O tempo de execu\u00e7\u00e3o aumenta linearmente com o tamanho da entrada.</li> <li><code>O(n log n)</code>: Tempo log-linear - Comum em algoritmos de ordena\u00e7\u00e3o eficientes como o quicksort.</li> <li><code>O(n\u00b2)</code>: Tempo quadr\u00e1tico - O tempo de execu\u00e7\u00e3o aumenta proporcionalmente ao quadrado do tamanho da entrada. Comum em algoritmos de ordena\u00e7\u00e3o menos eficientes, como o bubble sort.</li> </ul>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#exemplos-de-complexidades-de-tempo","title":"Exemplos de Complexidades de Tempo","text":"<ul> <li><code>O(1)</code>: Tempo constante</li> </ul> <p>Exemplo: Acessar um elemento em um array.</p> <p><pre><code>def acessar_elemento(array, indice):\n    return array[indice]\n</code></pre> Explica\u00e7\u00e3o: O tempo de execu\u00e7\u00e3o n\u00e3o muda, independentemente do tamanho do array, pois estamos acessando diretamente um elemento espec\u00edfico.</p> <ul> <li><code>O(log n)</code>: Tempo logar\u00edtmico</li> </ul> <p>Exemplo: Busca bin\u00e1ria em um array ordenado.</p> <pre><code>def busca_binaria(array, elemento):\n    inicio = 0\n    fim = len(array) - 1\n    while inicio &lt;= fim:\n        meio = (inicio + fim) // 2\n        if array[meio] == elemento:\n            return meio\n        elif array[meio] &lt; elemento:\n            inicio = meio + 1\n        else:\n            fim = meio - 1\n    return -1\n</code></pre> <p>Explica\u00e7\u00e3o: A cada itera\u00e7\u00e3o, o algoritmo divide o espa\u00e7o de busca pela metade, resultando em um tempo de execu\u00e7\u00e3o logar\u00edtmico.</p> <ul> <li><code>O(n)</code>: Tempo linear</li> </ul> <p>Exemplo: Encontrar o valor m\u00e1ximo em um array.</p> <pre><code>def encontrar_maximo(array):\n    maximo = array[0]\n    for elemento in array:\n        if elemento &gt; maximo:\n            maximo = elemento\n    return maximo\n</code></pre> <p>Explica\u00e7\u00e3o: O algoritmo percorre cada elemento do array uma vez para encontrar o m\u00e1ximo, portanto, o tempo de execu\u00e7\u00e3o aumenta linearmente com o tamanho do array.</p> <ul> <li><code>O(n log n)</code>: Tempo log-linear</li> </ul> <p>Exemplo: Algoritmo de ordena\u00e7\u00e3o Merge Sort.</p> <pre><code>def merge_sort_iterativo(array):\n    if len(array) &gt; 1:\n        meio = len(array) // 2\n        esquerda = array[:meio]\n        direita = array[meio:]\n        merge_sort(esquerda)\n        merge_sort(direita)\n        i = j = k = 0\n        while i &lt; len(esquerda) and j &lt; len(direita):\n            if esquerda[i] &lt; direita[j]:\n                array[k] = esquerda[i]\n                i += 1\n            else:\n                array[k] = direita[j]\n                j += 1\n            k += 1\n        while i &lt; len(esquerda):\n            array[k] = esquerda[i]\n            i += 1\n            k += 1\n        while j &lt; len(direita):\n            array[k] = direita[j]\n            j += 1\n            k += 1\n</code></pre> <p>Explica\u00e7\u00e3o: O Merge Sort divide o array pela metade em cada n\u00edvel de recurs\u00e3o (log n) e depois combina os elementos ordenadamente (n), resultando em um tempo de execu\u00e7\u00e3o O(n log n).</p> <ul> <li><code>O(n\u00b2)</code>: Tempo quadr\u00e1tico</li> </ul> <p>Exemplo: Algoritmo de ordena\u00e7\u00e3o Bubble Sort.</p> <pre><code>def bubble_sort(array):\n    n = len(array)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if array[j] &gt; array[j+1]:\n                array[j], array[j+1] = array[j+1], array[j]\n</code></pre> <p>Explica\u00e7\u00e3o: O Bubble Sort compara cada par de elementos adjacentes e os troca se estiverem na ordem errada, repetindo esse processo para cada elemento do array, resultando em um tempo de execu\u00e7\u00e3o que aumenta proporcionalmente ao quadrado do tamanho do array.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#regras-para-analise-de-complexidade","title":"Regras para An\u00e1lise de Complexidade","text":"<p>Uma forma simples de determinar a complexidade \u00e9 pela soma das complexidades de todos os fragmentos de c\u00f3digo que o comp\u00f5em. Para analisar a complexidade de um algoritmo, precisamos entender a complexidade de cada bloco de c\u00f3digo individual e depois combin\u00e1-las para obter a complexidade total. Abaixo, apresentamos exemplos de complexidades de trechos de c\u00f3digo simples e mostramos como elas s\u00e3o utilizadas para calcular a complexidade de uma fun\u00e7\u00e3o completa.</p> <ul> <li><code>Senten\u00e7as Simples</code>: Essas senten\u00e7as t\u00eam complexidade constante, ou seja, O(1).</li> </ul> <pre><code># Exemplo de senten\u00e7as simples\ns = \"Brasil\"\ni = 42\ni += 1\n</code></pre> <ul> <li><code>La\u00e7os Simples</code>: La\u00e7os que percorrem a entrada uma vez t\u00eam complexidade linear em rela\u00e7\u00e3o ao tamanho da entrada, ou seja, O(n), onde n \u00e9 o tamanho da entrada.</li> </ul> <p><pre><code># Exemplo de la\u00e7o simples\nfor i in range(n):\n    # Senten\u00e7as simples\n</code></pre> - <code>La\u00e7os Aninhados</code>: La\u00e7os aninhados resultam em uma complexidade quadr\u00e1tica em rela\u00e7\u00e3o ao tamanho da entrada, ou seja, O(n\u00b2), onde n \u00e9 o tamanho da entrada.</p> <pre><code># Exemplo de la\u00e7os aninhados\nfor i in range(n):\n    for j in range(n):\n        # Senten\u00e7as simples\n</code></pre>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#comparacao-visual-das-complexidades-de-tempo","title":"Compara\u00e7\u00e3o Visual das Complexidades de Tempo","text":"<p>A imagem abaixo mostra uma compara\u00e7\u00e3o gr\u00e1fica das diferentes complexidades de tempo discutidas. Ela ilustra como o tempo de execu\u00e7\u00e3o cresce com o aumento do tamanho da entrada (n) para cada complexidade.</p> <p></p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#importancia-na-analise-de-algoritmos","title":"Import\u00e2ncia na An\u00e1lise de Algoritmos","text":"<p>Entender a nota\u00e7\u00e3o Big O \u00e9 crucial para avaliar a efici\u00eancia de um algoritmo. Isso ajuda a identificar gargalos e a escolher o algoritmo mais adequado para um determinado problema, especialmente \u00e0 medida que o tamanho da entrada aumenta. Na pr\u00e1tica, isso pode significar a diferen\u00e7a entre um programa que executa em segundos e um que leva horas.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#exercicios","title":"Exercicios","text":"<p>Exercise</p> <p>An\u00e1lise de Algoritmos: Dado o seguinte algoritmo, determine sua complexidade de tempo usando a nota\u00e7\u00e3o Big O.</p> <pre><code>def soma_elementos(lista):\n    soma = 0\n    for elemento in lista:\n        soma += elemento\n    return soma\n</code></pre> <p>Answer</p> <p>Complexidade O(n). Isso ocorre porque o algoritmo percorre cada elemento da lista uma vez para som\u00e1-los.    </p> <p>Exercise</p> <p>Compara\u00e7\u00e3o de Algoritmos: Considere dois algoritmos de ordena\u00e7\u00e3o, um com complexidade O(n log n) e outro com O(n\u00b2). Como o tempo de execu\u00e7\u00e3o de cada algoritmo cresce com o aumento do tamanho da entrada?</p> <p>Answer</p> <p>Para um algoritmo de ordena\u00e7\u00e3o com complexidade O(n log n), o tempo de execu\u00e7\u00e3o aumenta de forma log-linear com o tamanho da entrada. Isso significa que, para entradas grandes, o tempo de execu\u00e7\u00e3o cresce mais devagar do que para um algoritmo com complexidade O(n\u00b2), onde o tempo de execu\u00e7\u00e3o aumenta proporcionalmente ao quadrado do tamanho da entrada. Portanto, para entradas grandes, o algoritmo O(n log n) ser\u00e1 geralmente mais r\u00e1pido que o algoritmo O(n\u00b2).</p> <p>Exercise</p> <p>Aplica\u00e7\u00e3o Pr\u00e1tica: Dada uma lista de n\u00fameros desordenada, qual algoritmo de ordena\u00e7\u00e3o voc\u00ea escolheria para orden\u00e1-la? Justifique sua escolha com base na nota\u00e7\u00e3o Big O.</p> <p>Answer</p> <p>Para ordenar uma lista de n\u00fameros desordenada, seria prefer\u00edvel escolher um algoritmo de ordena\u00e7\u00e3o com complexidade O(n log n), como o quicksort ou o mergesort, em vez de um algoritmo com complexidade O(n\u00b2), como o bubble sort ou o insertion sort. Isso se deve ao fato de que, para listas grandes, algoritmos O(n log n) tendem a ser mais r\u00e1pidos e eficientes.</p>"},{"location":"aulas/ctp/algorithms/big-o-notation.html#referencias","title":"referencias","text":"<ul> <li>https://pt.wikipedia.org/wiki/Grande-O</li> <li>https://algoritmosempython.com.br/cursos/algoritmos-python/analise-complexidade/modelo-custos/</li> <li>https://www.freecodecamp.org/portuguese/news/o-que-e-a-notacao-big-o-complexidade-de-tempo-e-de-espaco/</li> <li>https://www.alura.com.br/artigos/como-classificar-algoritmos-big-o-notation</li> </ul>"},{"location":"aulas/ctp/algorithms/binary-search.html","title":"Busca Bin\u00e1ria","text":"<p>Vamos brincar do jogo de adivinha\u00e7\u00e3o. Nesse jogo, o objetivo \u00e9 descobrir qual n\u00famero foi sorteado pelo computador dentro de um intervalo bem definido. O computador vai selecionar aleatoriamente um n\u00famero inteiro de 1 a 15. Voc\u00ea vai tentar adivinhar o n\u00famero at\u00e9 encontrar aquele que foi selecionado pelo computador, e o computador lhe dir\u00e1 a cada vez se seu palpite foi muito alto ou muito baixo:</p> <p>Agora, reflita sobre como voc\u00ea encontrou o n\u00famero sorteado. Foi um chute aleat\u00f3rio ou voc\u00ea seguiu algum m\u00e9todo? </p> <p>Chutar n\u00fameros aleatoriamente n\u00e3o \u00e9 a melhor estrat\u00e9gia. Em vez disso, voc\u00ea pode ter usado uma abordagem mais sistem\u00e1tica. </p> <p>Podemos utilizar o algoritmo de busca sequencial, para isso basta passar em sequencia por todos os valores da lista, 1,2,3...</p> <p>Foi facil n\u00e9, afinal, a lista \u00e9 pequena. Vamos complicar um pouco aumentando a lista para 300 posi\u00e7\u00f5es.</p> <p>Utilizando uma busca linear vamos ter no pior caso que fazer 300 chutes at\u00e9 encontrar o valor correto. Neste caso uma forma efici\u00eante \u00e9 escolher o numero no meio do intervalo de op\u00e7\u00f5es. </p> <p>Por exemplo, se o intervalo \u00e9 de 1 a 300, voc\u00ea come\u00e7a adivinhando o n\u00famero 150 (que \u00e9 o meio do intervalo). Se o computador disser que seu palpite \u00e9 muito alto, voc\u00ea sabe que o n\u00famero sorteado est\u00e1 entre 1 e 149. Se o computador disser que seu palpite \u00e9 muito baixo, voc\u00ea sabe que o n\u00famero sorteado est\u00e1 entre 151 e 300.</p> <p>Agora, voc\u00ea repete esse processo, escolhendo sempre o n\u00famero no meio do novo intervalo, at\u00e9 encontrar o n\u00famero sorteado. Esse m\u00e9todo \u00e9 conhecido como busca bin\u00e1ria, porque em cada etapa voc\u00ea divide o intervalo de possibilidades pela metade (ou seja, em duas partes).</p> <p>Exercise</p> <p>Jogue o jogo da advinha\u00e7\u00e3o algumas vezes aplicando a estrat\u00e9gia da busca bin\u00e1ria. Fa\u00e7a com aten\u00e7\u00e3o e responda:</p> <p>De quantas tentativas voc\u00ea precisou para encontrar o n\u00famero correto? </p> <p>Exercise</p> <p>Compare a quantidades de tentativas neces\u00e1rias para encontrar o valor correto no vetor de 15 posi\u00e7\u00f5es com o vetor de 300 posi\u00e7\u00f5es. Qual a rela\u00e7\u00e3o entre o tamanho do vetor e a quantidade de tentativas necess\u00e1rias no pior caso para encontrar o valor correto? </p> <p>Exercise</p> <p>Quantas tentativas (pior caso) s\u00e3o necess\u00e1rias para encontrar o valor correto se o vetor conter 1000 posi\u00e7\u00f5es? E para o vetor de tamanhos 10.000 e 1.000.000, quantas tentativas s\u00e3o necess\u00e1rias?</p> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/algorithms/binary-search.html#pseudocodigo","title":"Pseudoc\u00f3digo","text":"<p>Vamos descrever uma forma de implementar a busca bin\u00e1ria. Para implementar a busca bin\u00e1ria, realizaremos a busca em um vetor de tamanho <code>n</code>.</p> <ol> <li>Inicialize min como 0 e max como n-1.</li> <li> <p>Enquanto max for maior ou igual a min:</p> <ul> <li>Calcule chute como a m\u00e9dia de min e max, arredondando para baixo.</li> <li>Se array[chute] for igual ao alvo, retorne chute (o alvo foi encontrado).</li> <li>Se array[chute] for menor que o alvo, defina min como chute + 1 (o alvo est\u00e1 \u00e0 direita).</li> <li>Se array[chute] for maior que o alvo, defina max como chute - 1 (o alvo est\u00e1 \u00e0 esquerda).</li> </ul> </li> <li> <p>Se max ficar menor que min, o alvo n\u00e3o est\u00e1 presente no vetor. Retorne -1.</p> </li> </ol>"},{"location":"aulas/ctp/algorithms/binary-search.html#desafio","title":"Desafio","text":"<p>Implemente o algoritmo de busca bin\u00e1ria.</p> <p>Refer\u00eancia: https://pt.khanacademy.org/computing/computer-science/algorithms/intro-to-algorithms/a/a-guessing-game </p>"},{"location":"aulas/ctp/algorithms/bubble-sort.html","title":"Bubble Sort","text":""},{"location":"aulas/ctp/algorithms/bubble-sort.html#bubble-sort","title":"bubble sort","text":"<p>Dentre os algoritmos de ordena\u00e7\u00e3o, o Bubble Sort \u00e9 sem d\u00favida um dos mais simples de implementar. Tamb\u00e9m conhecido como ordena\u00e7\u00e3o por trocas ou flutua\u00e7\u00e3o, sua simplicidade vem com um custo: uma efici\u00eancia geralmente inferior quando comparado a outros m\u00e9todos de ordena\u00e7\u00e3o. A complexidade de tempo do Bubble Sort \u00e9 O(n\u00b2), o que significa que para grandes conjuntos de dados, pode n\u00e3o ser a escolha mais eficiente.</p>"},{"location":"aulas/ctp/algorithms/bubble-sort.html#funcionamento-do-algoritmo","title":"Funcionamento do Algoritmo","text":"<p>O Bubble Sort trabalha repetidamente passando pela lista a ser ordenada, comparando cada par de elementos adjacentes e trocando-os de posi\u00e7\u00e3o se estiverem na ordem errada. Esse processo se repete at\u00e9 que nenhuma troca seja necess\u00e1ria, o que indica que a lista est\u00e1 ordenada. O algoritmo recebe esse nome porque os elementos maiores \"borbulham\" para o final da lista a cada passagem, enquanto os menores \"afundam\" para o in\u00edcio.</p> <p></p>"},{"location":"aulas/ctp/algorithms/bubble-sort.html#bubble-sort-em-acao","title":"Bubble Sort em a\u00e7\u00e3o","text":"<p>Para visualizar o algoritmo em a\u00e7\u00e3o utilize o link a seguir:</p> <p>https://visualgo.net/en/sorting?slide=10</p>"},{"location":"aulas/ctp/algorithms/bubble-sort.html#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o simples do Bubble Sort em Python:</p> <pre><code>def bubble_sort(lista):\n    n = len(lista)\n    for i in range(n):\n        for j in range(0, n-i-1):\n            if lista[j] &gt; lista[j+1]:\n                lista[j], lista[j+1] = lista[j+1], lista[j] ## troca de posi\u00e7\u00e3o\n    return lista\n</code></pre> <p>Neste caso, como exemplo:</p> <pre><code>lista = [64, 34, 25, 12, 22, 11, 90]\nlista_ordenada = bubble_sort(lista)\nprint(\"Lista Ordenada:\", lista_ordenada)\n</code></pre>"},{"location":"aulas/ctp/algorithms/bubble-sort.html#intuicao-da-analise-de-complexidade","title":"Intui\u00e7\u00e3o da An\u00e1lise de Complexidade","text":"<ul> <li> <p>Complexidade de Tempo: O Bubble Sort tem uma complexidade de tempo quadr\u00e1tica O(n\u00b2), onde n \u00e9 o n\u00famero de elementos na lista. Isso ocorre porque ele precisa fazer duas passagens aninhadas sobre a lista para garantir que ela esteja ordenada.</p> </li> <li> <p>Complexidade de Espa\u00e7o: A complexidade de espa\u00e7o \u00e9 O(1), pois requer apenas uma quantidade constante de espa\u00e7o de mem\u00f3ria adicional al\u00e9m da lista de entrada.</p> </li> </ul> <p>Exerc\u00edcio de Ordena\u00e7\u00e3o</p> <p>Suponha que voc\u00ea tenha a seguinte lista de n\u00fameros para ordenar: <code>[19, 1, 9, 7, 3, 10, 13, 15, 8, 12]</code> qual lista representa a lista parcialmente ordenada depois de tr\u00eas passagens completas do bubble sort?</p> <ul> <li> [1, 9, 19, 7, 3, 10, 13, 15, 8, 12]</li> <li> [1, 3, 7, 9, 10, 8, 12, 13, 15, 19]</li> <li> [1, 7, 3, 9, 10, 13, 8, 12, 15, 19]</li> <li> [1, 9, 19, 7, 3, 10, 13, 15, 8, 12]</li> </ul> <p>Answer</p> <p>A lista parcialmente ordenada depois de tr\u00eas passagens completas do bubble sort \u00e9 B. <code>[1, 3, 7, 9, 10, 8, 12, 13, 15, 19]</code>.</p> <p>Refer\u00eancia: https://panda.ime.usp.br/panda/static/pythonds_pt/05-OrdenacaoBusca/OBubbleSort.html</p>"},{"location":"aulas/ctp/algorithms/insertion-sort.html","title":"Insertion Sort","text":""},{"location":"aulas/ctp/algorithms/insertion-sort.html#insertion-sort","title":"Insertion sort","text":"<p>O Insertion Sort \u00e9 um algoritmo de ordena\u00e7\u00e3o simples que constr\u00f3i a lista ordenada um elemento de cada vez. Ele \u00e9 muito semelhante ao modo como as pessoas ordenam cartas em suas m\u00e3os durante um jogo de cartas, inserindo cada carta na posi\u00e7\u00e3o correta entre as cartas j\u00e1 ordenadas.</p>"},{"location":"aulas/ctp/algorithms/insertion-sort.html#funcionamento-do-algoritmo","title":"Funcionamento do Algoritmo","text":"<p>O algoritmo divide a lista de entrada em duas partes: a sublista de itens j\u00e1 ordenados, que \u00e9 constru\u00edda da esquerda para a direita na frente da lista, e a sublista de itens restantes a serem ordenados que ocupam o resto da lista. O algoritmo funciona repetidamente pegando cada elemento da parte n\u00e3o ordenada e inserindo-o na posi\u00e7\u00e3o correta na parte ordenada.</p> <p></p>"},{"location":"aulas/ctp/algorithms/insertion-sort.html#insertion-sort-em-acao","title":"Insertion Sort em a\u00e7\u00e3o","text":"<p>Para visualizar o algoritmo em a\u00e7\u00e3o utilize o link a seguir:</p> <p>https://visualgo.net/en/sorting</p>"},{"location":"aulas/ctp/algorithms/insertion-sort.html#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o simples do Selection Sort em Python:</p> <pre><code>def insertion_sort(lista):\n    n = len(lista)\n    # Percorre a lista.\n    for j in range(1, n):\n        chave = lista[j]\n        i = j - 1\n        # Insere o elemento lista[j] na posi\u00e7\u00e3o correta.\n        while i &gt;= 0 and lista[i] &gt; chave:\n            lista[i + 1] = lista[i]\n            i = i - 1\n        lista[i + 1] = chave\n\n    return lista\n</code></pre> <p>Neste caso, como exemplo:</p> <pre><code>lista = [12, 11, 13, 5, 6]\nlista_ordenada = insertion_sort(lista)\nprint(\"Lista Ordenada:\", lista_ordenada)\n</code></pre>"},{"location":"aulas/ctp/algorithms/insertion-sort.html#intuicao-da-analise-de-complexidade","title":"Intui\u00e7\u00e3o da An\u00e1lise de Complexidade","text":"<ul> <li> <p>Complexidade de Tempo: O Insertion Sort tem uma complexidade de tempo quadr\u00e1tica O(n\u00b2), onde n \u00e9 o n\u00famero de elementos na lista. No entanto, para listas pequenas ou parcialmente ordenadas, o algoritmo pode ser muito eficiente.</p> </li> <li> <p>Complexidade de Espa\u00e7o: A complexidade de espa\u00e7o \u00e9 O(1), pois requer apenas uma quantidade constante de espa\u00e7o de mem\u00f3ria adicional al\u00e9m da lista de entrada.</p> </li> </ul> <p>Exerc\u00edcio de Ordena\u00e7\u00e3o</p> <p>Suponha que voc\u00ea tenha a seguinte lista de n\u00fameros para ordenar: <code>[15, 5, 4, 18, 12, 19, 14, 10, 8, 20]</code> qual lista representa a lista parcialmente ordenada depois tr\u00eas passagens completas da ordena\u00e7\u00e3o por inser\u00e7\u00e3o?</p> <ul> <li> [4, 5, 12, 15, 14, 10, 8, 18, 19, 20]</li> <li> [15, 5, 4, 10, 12, 8, 14, 18, 19, 20]</li> <li> [4, 5, 15, 18, 12, 19, 14, 10, 8, 20]</li> <li> [15, 5, 4, 18, 12, 19, 14, 8, 10, 20]</li> </ul> <p>Answer</p> <p>A lista parcialmente ordenada depois de tr\u00eas passagens insers\u00e3o. <code>[4, 5, 12, 15, 14, 10, 8, 18, 19, 20]</code>.</p> <p>Refer\u00eancia: https://panda.ime.usp.br/panda/static/pythonds_pt/05-OrdenacaoBusca/AOrdenacaoPorInsercao.html</p>"},{"location":"aulas/ctp/algorithms/merge-sort.html","title":"Merge Sort","text":""},{"location":"aulas/ctp/algorithms/merge-sort.html#merge-sort","title":"Merge Sort","text":"<p>Agora que j\u00e1 entendemos um pouco sobre recurs\u00e3o, podemos avan\u00e7ar nossos estudos em algoritmos de ordena\u00e7\u00e3o mais complexos. O <code>Merge Sort</code> \u00e9 um algoritmo de ordena\u00e7\u00e3o baseado na <code>t\u00e9cnica de divis\u00e3o e conquista</code>. </p> <p>Ele divide o conjunto de dados em metades menores, ordena essas metades e, em seguida, mescla as metades ordenadas para formar um conjunto ordenado. \u00c9 conhecido por sua efici\u00eancia e estabilidade, sendo uma boa escolha para grandes conjuntos de dados. A complexidade de tempo do Merge Sort \u00e9 O(n log n), onde n \u00e9 o n\u00famero de elementos na lista.</p>"},{"location":"aulas/ctp/algorithms/merge-sort.html#funcionamento-do-algoritmo","title":"Funcionamento do Algoritmo","text":"<ul> <li><code>Divis\u00e3o</code>: Divide a lista em duas metades aproximadamente iguais.</li> <li><code>Conquista</code>: Ordena recursivamente as duas metades.</li> <li><code>Combina\u00e7\u00e3o</code>: Mescla as duas metades ordenadas para formar uma \u00fanica lista ordenada.</li> </ul>"},{"location":"aulas/ctp/algorithms/merge-sort.html#merge-sort-em-acao","title":"Merge Sort em a\u00e7\u00e3o","text":"<p>Para visualizar o algoritmo em a\u00e7\u00e3o, utilize o link a seguir:</p> <p>https://visualgo.net/en/sorting?slide=7</p>"},{"location":"aulas/ctp/algorithms/merge-sort.html#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o simples do Merge Sort em Python:</p> <pre><code>def mergeSort(alist):\n    mergesort(alist, [0] * len(alist), 0, len(alist) - 1)\n\n\ndef merge(A, aux, esquerda, meio, direita):\n    \"\"\"\n    Combina dois vetores ordenados em um \u00fanico vetor (tamb\u00e9m ordenado).\n    \"\"\"\n    for k in range(esquerda, direita + 1):\n        aux[k] = A[k]\n    i = esquerda\n    j = meio + 1\n    for k in range(esquerda, direita + 1):\n        if i &gt; meio:\n            A[k] = aux[j]\n            j += 1\n        elif j &gt; direita:\n            A[k] = aux[i]\n            i += 1\n        elif aux[j] &lt; aux[i]:\n            A[k] = aux[j]\n            j += 1\n        else:\n            A[k] = aux[i]\n            i += 1\n\n\ndef mergesort(A, aux, esquerda, direita):\n    if direita &lt;= esquerda:\n        return\n    meio = (esquerda + direita) // 2\n\n    # Ordena a primeira metade do arranjo.\n    mergesort(A, aux, esquerda, meio)\n\n    # Ordena a segunda metade do arranjo.\n    mergesort(A, aux, meio + 1, direita)\n\n    # Combina as duas metades ordenadas anteriormente.\n    merge(A, aux, esquerda, meio, direita)\n</code></pre> <p>Neste caso, como exemplo:</p> <pre><code># Testa o algoritmo.\nlista = [13, 30, 17, -1, -2, 27, 3]\nmergeSort(lista)\nprint(\"Lista ordenada:\", lista)\n</code></pre>"},{"location":"aulas/ctp/algorithms/merge-sort.html#intuicao-da-analise-de-complexidade","title":"Intui\u00e7\u00e3o da An\u00e1lise de Complexidade","text":"<ul> <li> <p>Complexidade de Tempo: O Merge Sort tem uma complexidade de tempo O(n log n), que \u00e9 mais eficiente que o Bubble Sort, especialmente para listas grandes.</p> </li> <li> <p>Complexidade de Espa\u00e7o: A complexidade de espa\u00e7o \u00e9 O(n), pois requer espa\u00e7o adicional para armazenar as sublistas tempor\u00e1rias durante a ordena\u00e7\u00e3o.</p> </li> </ul> <p>Exerc\u00edcio de Ordena\u00e7\u00e3o</p> <p>Suponha que voc\u00ea tenha a seguinte lista de n\u00fameros para ordenar: [29, 10, 14, 37, 13]. Qual lista representa a lista parcialmente ordenada depois da primeira divis\u00e3o e conquista do merge sort?</p> <ul> <li> [29, 10, 14, 37, 13]</li> <li> [10, 29, 14, 13, 37]</li> <li> [14, 29, 10, 13, 37]</li> <li> [29, 14, 10, 37, 13]</li> </ul> <p>Answer</p> <p>A lista parcialmente ordenada depois da primeira divis\u00e3o e conquista do merge sort \u00e9 B. <code>[10, 29, 14, 13, 37]</code>.</p> <p>Exercise</p> <p>Rode o c\u00f3digo merge-sort utilizando o python tutor. (https://pythontutor.com/)[https://pythontutor.com/]. Execute o c\u00f3digo passo a passo compare a complexidade de espa\u00e7o de mem\u00f3ria com o bubble-sort. Ele ocupa mais ou menos espa\u00e7o de memoria?</p> <p>Exercise</p> <p>Escreva uma fun\u00e7\u00e3o recursiva baseada no m\u00e9todo do merge-sort que ordene de forma decrescente um vetor aleat\u00f3rio de 15 posi\u00e7\u00f5es. </p> <p>ref: https://panda.ime.usp.br/algoritmos/static/algoritmos/20-divisao-e-conquista.html#dividir-para-conquistar</p> <p>https://algoritmosempython.com.br/cursos/algoritmos-python/pesquisa-ordenacao/mergesort/</p> <p>https://algs4.cs.princeton.edu/22mergesort/</p>"},{"location":"aulas/ctp/algorithms/problem-search.html","title":"O problema da busca","text":"<p>\"Mas afinal, de que serve guardar alguma coisa se, no momento que precisamos, demoramos muito para encontrar ou, no pior caso, n\u00e3o conseguimos encontrar?\"</p> <p>Essa pergunta pode parecer simples, mas ela resume um dos dilemas mais comuns que enfrentamos no nosso dia a dia: <code>o problema da busca</code>. Seja procurando as chaves de casa em uma gaveta bagun\u00e7ada, tentando encontrar um contato no celular ou mesmo buscando um livro espec\u00edfico em uma biblioteca, estamos constantemente realizando buscas em diferentes contextos.</p> <p>Tip</p> <p>O problema da busca \u00e9 uma das quest\u00f5es fundamentais da Computa\u00e7\u00e3o e tem uma ampla gama de aplica\u00e7\u00f5es pr\u00e1ticas.</p>"},{"location":"aulas/ctp/algorithms/problem-search.html#a-importancia-dos-algoritmos","title":"A Import\u00e2ncia dos Algoritmos","text":"<p>Algoritmos s\u00e3o o cora\u00e7\u00e3o da computa\u00e7\u00e3o. Eles s\u00e3o conjuntos de instru\u00e7\u00f5es passo a passo que definem como realizar uma tarefa. No contexto do problema da busca, algoritmos nos ajudam a encontrar eficientemente o que estamos procurando em meio a grandes volumes de dados.</p> <p>O desenvolvimento de algoritmos eficazes \u00e9 essencial para:</p> <ul> <li>Aumentar a velocidade e a efici\u00eancia na resolu\u00e7\u00e3o de problemas.</li> <li>Reduzir o consumo de recursos computacionais, como mem\u00f3ria e processamento.</li> <li>Melhorar a experi\u00eancia do usu\u00e1rio em sistemas e aplica\u00e7\u00f5es que dependem de buscas r\u00e1pidas e precisas.</li> </ul> <p>Tip</p> <p>Algoritmo \u00e9 um dos pilares do pensamento computacional, fornece uma estrutura l\u00f3gica para resolver problemas de maneira sistem\u00e1tica e eficiente. Ao decompor problemas complexos em passos sequenciais e claros, os algoritmos permitem que tanto humanos quanto m\u00e1quinas processem informa\u00e7\u00f5es e tomem decis\u00f5es de forma racional e precisa. Eles s\u00e3o a base para a constru\u00e7\u00e3o de programas e aplica\u00e7\u00f5es em diversas \u00e1reas da computa\u00e7\u00e3o, desde a <code>busca</code> e <code>ordena\u00e7\u00e3o</code> de informa\u00e7\u00f5es at\u00e9 a intelig\u00eancia artificial e o desenvolvimento de softwares complexos.</p>"},{"location":"aulas/ctp/algorithms/problem-search.html#o-problema-da-busca","title":"O Problema da Busca","text":"<p>O problema da busca pode ser descrito como o desafio de localizar um item em uma cole\u00e7\u00e3o de dados. Isso pode variar desde encontrar um nome em uma lista telef\u00f4nica, at\u00e9 procurar um registro espec\u00edfico em um banco de dados.</p> <p>Tentar resolver o problema da busca nos permite:</p> <ul> <li>Acessar dados de forma r\u00e1pida e eficiente.</li> <li>Melhorar o desempenho de sistemas que dependem da recupera\u00e7\u00e3o de informa\u00e7\u00f5es, como motores de busca e bancos de dados.</li> <li>Facilitar a organiza\u00e7\u00e3o e gerenciamento de grandes conjuntos de dados.</li> </ul>"},{"location":"aulas/ctp/algorithms/problem-search.html#aplicacoes-no-dia-a-dia","title":"Aplica\u00e7\u00f5es no dia a dia","text":"<p>O problema da busca \u00e9 aplicado em v\u00e1rias situa\u00e7\u00f5es cotidianas, incluindo:</p> <ul> <li>Pesquisas na Internet: Encontrar informa\u00e7\u00f5es relevantes em meio a bilh\u00f5es de p\u00e1ginas web.</li> <li>Sistemas de Navega\u00e7\u00e3o: Localizar endere\u00e7os e tra\u00e7ar rotas em aplicativos de mapas.</li> <li>Compras Online: Procurar produtos em sites de e-commerce.</li> <li>M\u00eddias Sociais: Buscar perfis, publica\u00e7\u00f5es ou grupos em plataformas como Facebook, Twitter e Instagram.</li> </ul> <p>Exercise</p> <p>Imagine que voc\u00ea combinou de encontrar um amigo no shopping, mas esqueceu de combinar o ponto de encontro exato. O shopping \u00e9 grande, cheio de lojas, restaurantes e pessoas. Como voc\u00ea faria para encontr\u00e1-lo?</p> <p>Quest\u00e3o 1</p> <p>Qual \u00e9 o objetivo principal do problema da busca em computa\u00e7\u00e3o?</p> <ul> <li> Ordenar uma lista de elementos.</li> <li> Encontrar a posi\u00e7\u00e3o de um elemento espec\u00edfico em uma lista.</li> <li> Calcular a soma dos elementos de uma lista.</li> <li> Dividir uma lista em partes menores.</li> </ul> <p>Answer</p> <p>O objetivo principal do problema da busca \u00e9 encontrar a posi\u00e7\u00e3o de um elemento espec\u00edfico em uma lista, seja ela ordenada ou n\u00e3o.</p> <p>Progress</p> <p>continuar...</p> <p>\"Depois de explorarmos o problema da busca em situa\u00e7\u00f5es cotidianas, vamos agora pensar em um contexto mais computacional.</p> <p>Exercise</p> <p>Defini\u00e7\u00e3o do Problema</p> <p>Dada uma chave de busca e uma cole\u00e7\u00e3o de elementos, onde cada elemento possui um identificador \u00fanico, desejamos encontrar o elemento da cole\u00e7\u00e3o que possui o identificador igual ao da chave de busca ou verificar que n\u00e3o existe nenhum elemento na cole\u00e7\u00e3o com a chave fornecida.</p> <p>Answer</p> <p>Para entender melhor, imagine uma lista de n\u00fameros, onde cada n\u00famero \u00e9 \u00fanico, e queremos verificar se um determinado n\u00famero est\u00e1 presente na lista. Nesse caso, o n\u00famero que estamos procurando \u00e9 a nossa <code>chave de busca</code>, e a lista de n\u00fameros \u00e9 a nossa <code>cole\u00e7\u00e3o de elementos</code>.</p>"},{"location":"aulas/ctp/algorithms/quick-sort.html","title":"Quick Sort","text":""},{"location":"aulas/ctp/algorithms/quick-sort.html#quick-sort","title":"Quick Sort","text":"<p>O Quick Sort \u00e9 um algoritmo de ordena\u00e7\u00e3o eficiente, <code>r\u00e1pido</code> baseado na <code>t\u00e9cnica de divis\u00e3o e conquista</code>.</p> <p>\u00c9 conhecido por sua capacidade de ordenar rapidamente grandes conjuntos de dados. </p> <p>A complexidade de tempo m\u00e9dia do Quick Sort \u00e9 O(n log n), onde n \u00e9 o n\u00famero de elementos na lista. No </p>"},{"location":"aulas/ctp/algorithms/quick-sort.html#funcionamento-do-algoritmo","title":"Funcionamento do Algoritmo","text":"<ul> <li><code>Escolha do Piv\u00f4</code>: Selecione um elemento da lista para ser o piv\u00f4. A escolha do piv\u00f4 pode afetar significativamente o desempenho do algoritmo.</li> <li><code>Parti\u00e7\u00e3o</code>: Reorganize a lista de forma que todos os elementos menores que o piv\u00f4 fiquem \u00e0 esquerda dele, e todos os elementos maiores fiquem \u00e0 direita.</li> <li><code>Recurs\u00e3o</code>: Aplique o Quick Sort recursivamente \u00e0s duas sublistas divididas pelo piv\u00f4.</li> </ul>"},{"location":"aulas/ctp/algorithms/quick-sort.html#quick-sort-em-acao","title":"Quick Sort em a\u00e7\u00e3o","text":"<p>Para visualizar o algoritmo em a\u00e7\u00e3o, utilize o link a seguir:</p> <p>https://visualgo.net/en/sorting?slide=9</p>"},{"location":"aulas/ctp/algorithms/quick-sort.html#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o simples do Merge Sort em Python:</p> <pre><code>def quickSort(alist):\n    quicksort(alist, 0, len(alist) - 1)\n\ndef quicksort(lista, inicio, fim):\n    if inicio &lt; fim:\n        pivo = dividir(lista, inicio, fim)\n        quicksort(lista, inicio, pivo - 1)\n        quicksort(lista, pivo + 1, fim)\n\ndef dividir(lista, inicio, fim):\n    pivo = lista[fim]\n    posicao_pivo = inicio\n    for i in range(inicio, fim):\n        if lista[i] &lt; pivo:\n            lista[i], lista[posicao_pivo] = lista[posicao_pivo], lista[i]\n            posicao_pivo += 1\n    lista[posicao_pivo], lista[fim] = lista[fim], lista[posicao_pivo]\n    return posicao_pivo\n</code></pre> <p>Neste caso, como exemplo:</p> <pre><code># Testa o algoritmo.\nlista = [13, 30, 17, -1, -2, 27, 3]\nquickSort(lista)\nprint(\"Lista ordenada:\", lista)\n</code></pre>"},{"location":"aulas/ctp/algorithms/quick-sort.html#intuicao-da-analise-de-complexidade","title":"Intui\u00e7\u00e3o da An\u00e1lise de Complexidade","text":"<ul> <li> <p>Complexidade de Tempo: A complexidade de tempo m\u00e9dia do Quick Sort \u00e9 O(n log n), tornando-o eficiente para grandes listas. No entanto, no pior caso, pode ser O(n\u00b2), especialmente se o piv\u00f4 for escolhido de forma inadequada.</p> </li> <li> <p>Complexidade de Espa\u00e7o: A complexidade de espa\u00e7o \u00e9 O(log n) devido \u00e0 pilha de chamadas de recurs\u00e3o.</p> </li> </ul> <p>Exercise</p> <p>Rode o c\u00f3digo quick-sort utilizando o python tutor. (https://pythontutor.com/)[https://pythontutor.com/]. Execute o c\u00f3digo passo a passo compare a complexidade de espa\u00e7o de mem\u00f3ria com o bubble-sort. Ele ocupa mais ou menos espa\u00e7o de memoria?</p> <p>Exercise</p> <p>Escreva uma fun\u00e7\u00e3o recursiva baseada no m\u00e9todo do quick-sort que ordene de forma decrescente um vetor aleat\u00f3rio de 15 posi\u00e7\u00f5es. </p> <p>Progress</p> <p>continuar...</p> <p>Algumas refer\u00eancias: </p> <pre><code>- https://panda.ime.usp.br/algoritmos/static/algoritmos/20-divisao-e-conquista.html#dividir-para-conquistar\n\n- https://algoritmosempython.com.br/cursos/algoritmos-python/pesquisa-ordenacao/mergesort/\n\n- https://algs4.cs.princeton.edu/22mergesort/\n</code></pre>"},{"location":"aulas/ctp/algorithms/recursion.html","title":"Recursividade","text":""},{"location":"aulas/ctp/algorithms/recursion.html#recursao","title":"Recurs\u00e3o","text":"<p>Na aula de hoje, vamos dar uma pausa nos algoritmos de busca e ordena\u00e7\u00e3o que estamos estudando para falar de <code>Recurs\u00e3o</code> que \u00e9 um conceito fundamental em Ci\u00eancia da Computa\u00e7\u00e3o. A intui\u00e7\u00e3o \u00e9 de que uma fun\u00e7\u00e3o chama a si pr\u00f3pria diretamente ou indiretamente, permitindo que problemas sejam resolvidos de forma elegante e muitas vezes eficiente. Em outras palavras, a ideia central da recurs\u00e3o \u00e9 <code>dividir um problema grande e complexo em problemas menores e mais gerenci\u00e1veis</code>, que s\u00e3o mais f\u00e1ceis de resolver, o famoso <code>dividir para conquistar</code>.</p> <p></p> <p>Tip</p> <p><code>To understand recursion, you must first understand recursion.</code> A chave entender recurs\u00e3o \u00e9 identificar o \"caso base\" (ou condi\u00e7\u00e3o de parada), que \u00e9 uma condi\u00e7\u00e3o sob a qual a recurs\u00e3o termina, evitando assim um loop infinito, e o \"caso recursivo\", que \u00e9 onde a fun\u00e7\u00e3o faz uma chamada a si mesma com um conjunto de par\u00e2metros que se aproxima do caso base. Calma,vamos entender direitinho...</p> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/algorithms/recursion.html#estrutura-basica-de-uma-funcao-recursiva","title":"Estrutura B\u00e1sica de uma Fun\u00e7\u00e3o Recursiva","text":"<p>Vamos estudar um exemplo simples. Queremos escrever um algoritmo que exiba um contador que reproduz a seguinte sa\u00edda:</p> <pre><code>5\n4\n3\n2\n1\nfim!\n</code></pre> <p>Facil!! Podemos utilizar uma estrutura de repeti\u00e7\u00e3o <code>while</code> ou <code>for</code> para fazer essa tarefa, por exemplo:</p> <pre><code>def contador_for(numero):\n    for i in range(numero,0,-1):\n        print(i)\n    print('fim!')\n\n# para testar\ncontador_for(5)\n</code></pre> <p>ou </p> <pre><code>def contador_while(numero):\n    while numero &gt; 0:\n        print(numero)\n        numero -= 1\n    print('fim!')\n\n# para testar    \ncontador_while(5)\n</code></pre> <p>E se quisermos usar apenas 'if'? \u00c9 poss\u00edvel implementar um algoritmo com essa sa\u00edda usando apenas if? A resposta \u00e9 'sim', e \u00e9 aqui que a 'recurs\u00e3o' entra em jogo.</p> <p>Vamos utilizar uma fun\u00e7\u00e3o recursiva para resolver esse problema:</p> <pre><code>def contador_if(numero):\n    if numero == 0:\n        return print('fim!')\n    else:\n        print(numero)\n        return contador_if(numero -1)\n\n# para testar\ncontador_if(5)\n</code></pre> <p>Neste exemplo, a fun\u00e7\u00e3o 'contador_if' chama a si mesma com um par\u00e2metro que \u00e9 decrementado a cada chamada, at\u00e9 que o caso base (numero == 0) seja atingido. Quando isso acontece, a fun\u00e7\u00e3o imprime 'fim!' e a recurs\u00e3o termina.</p> <p>Uma fun\u00e7\u00e3o recursiva t\u00edpica em Python tem a seguinte estrutura:</p> <pre><code>def funcao_recursiva(parametros):\n    if caso_base:\n        # bloco de c\u00f3digo ...\n        return valor_base\n    else:\n        # bloco de c\u00f3digo ...\n        return funcao_recursiva(parametros_modificados)\n</code></pre> <p>Exercise</p> <p>Com base no exemplo 'contador_if', altere a fun\u00e7\u00e3o para dar prints extras que nos ajude a entender como o programa funciona. Nesta vers\u00e3o \u00e9 exibido 'Entrando em contador_if ( n )' para indicar que entrou na fun\u00e7\u00e3o com o valor 'n' da chamada. e 'Saindo de contador_if(n)' para indicar o retorno da recurs\u00e3o.</p> <pre><code>Entrando em contador_if( 5 )\n5\nEntrando em contador_if( 4 )\n4\nEntrando em contador_if( 3 )\n3\nEntrando em contador_if( 2 )\n2\nEntrando em contador_if( 1 )\n1\nEntrando em contador_if( 0 )\nfim!\nSaindo de contador_if( 0 )\nSaindo de contador_if( 1 )\nSaindo de contador_if( 2 )\nSaindo de contador_if( 3 )\nSaindo de contador_if( 4 )\nSaindo de contador_if( 5 )\n</code></pre> <p>Exercice</p> <p>O GCD (Greatest Common Divisor), ou MDC (Maior Divisor Comum) em portugu\u00eas, \u00e9 o maior n\u00famero que divide dois ou mais n\u00fameros inteiros sem deixar resto. Em outras palavras, \u00e9 o maior n\u00famero pelo qual dois ou mais n\u00fameros inteiros podem ser divididos igualmente.</p> <p>Por exemplo, o GCD de 12 e 18 \u00e9 6, pois 6 \u00e9 o maior n\u00famero que divide ambos 12 e 18 sem deixar resto. Outro exemplo \u00e9 o GCD de 48, 72 e 120, que \u00e9 24.</p> <p>O GCD \u00e9 uma ferramenta importante em matem\u00e1tica, especialmente em teoria dos n\u00fameros, e \u00e9 frequentemente usado para simplificar fra\u00e7\u00f5es, resolver equa\u00e7\u00f5es diofantinas e em muitos outros contextos. Existem v\u00e1rios m\u00e9todos para calcular o GCD, sendo o algoritmo de Euclides um dos mais eficientes.</p> <p>ref: https://www.freecodecamp.org/news/euclidian-gcd-algorithm-greatest-common-divisor/</p> <pre><code>def gcd(a, b):\n    if b == 0: return a\n    return gcd(b, a % b)\n\nprint(gcd(20, 12))\n</code></pre> <p>Qual a saida esperada deste c\u00f3digo?</p> <p>Answer</p> <p>Neste caso, a sa\u00edda esperada \u00e9 '4', pois esse \u00e9 o valor do m\u00e1ximo divisor comum entre 20 e 12.</p> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/algorithms/recursion.html#o-problema-da-recursao-infinita","title":"O problema da recurs\u00e3o infinita","text":"<p>Um dos riscos ao utilizar a recurs\u00e3o \u00e9 a possibilidade de cair em uma recurs\u00e3o infinita. Isso ocorre quando as chamadas recursivas nunca atingem o caso base, fazendo com que a fun\u00e7\u00e3o chame a si mesma indefinidamente. Esse problema pode levar a um 'estouro da pilha' de chamadas (stack overflow), resultando em um erro de execu\u00e7\u00e3o.</p> <p>Warning</p> <p>Todo problema recursivo deve ter pelo menos um caso base, que \u00e9 a condi\u00e7\u00e3o sob a qual a recurs\u00e3o termina, e um ou mais casos recursivos, que s\u00e3o as chamadas \u00e0 pr\u00f3pria fun\u00e7\u00e3o.</p> <p>\u00c9 crucial que cada chamada recursiva aproxime o problema do caso base, evitando assim uma recurs\u00e3o infinita. A estrutura l\u00f3gica deve garantir que o problema seja reduzido a cada chamada.</p> <p>Vamos ver o exemplo a seguir: </p> <pre><code>def contador(n):\n  if n == 0:\n    print('fim')\n  else:\n    print(n)\n    contador(n - 2)\n\ncontador(4)\n</code></pre> <p>Neste exemplo, a fun\u00e7\u00e3o contador realiza uma chamada recursiva a si mesma com 'n - 2'. Se n for um n\u00famero par, a fun\u00e7\u00e3o se aproxima do caso base (n == 0) e termina corretamente. No entanto, se n for \u00edmpar, a fun\u00e7\u00e3o nunca alcan\u00e7a o caso base, resultando em uma recurs\u00e3o infinita.</p> <p>Exercise</p> <p>Execute a fun\u00e7\u00e3o contador com n = 5 e observe o comportamento. Proponha uma forma de corrigir o problema do loop infinito ajustando o caso base.</p>"},{"location":"aulas/ctp/algorithms/recursion.html#como-identificar-e-evitar-a-recursao-infinita","title":"Como Identificar e Evitar a Recurs\u00e3o Infinita","text":"<ul> <li> <p>Caso Base Claro: Certifique-se de que sua fun\u00e7\u00e3o recursiva tenha um caso base bem definido e que seja poss\u00edvel alcan\u00e7\u00e1-lo. O caso base \u00e9 a condi\u00e7\u00e3o sob a qual a recurs\u00e3o termina, e deve ser verificado no in\u00edcio da fun\u00e7\u00e3o.</p> </li> <li> <p>Progress\u00e3o em Dire\u00e7\u00e3o ao Caso Base: Em cada chamada recursiva, os argumentos devem se aproximar do caso base. Isso significa que, para problemas num\u00e9ricos, os valores devem aumentar ou diminuir em dire\u00e7\u00e3o ao valor do caso base. Para problemas estruturais, como na travessia de uma \u00e1rvore, deve haver uma progress\u00e3o em dire\u00e7\u00e3o a uma estrutura menor ou a um elemento terminal.</p> </li> <li> <p>Teste e Depura\u00e7\u00e3o: Teste sua fun\u00e7\u00e3o com v\u00e1rios casos de entrada para garantir que ela se comporta conforme esperado e alcan\u00e7a o caso base. Ferramentas de depura\u00e7\u00e3o podem ajudar a rastrear o fluxo de execu\u00e7\u00e3o e identificar onde a fun\u00e7\u00e3o pode estar entrando em um loop infinito.</p> </li> </ul> <p>Progress</p> <p>continuar...</p> <p>Vamos conhecer alguns exemplos cl\u00e1ssicos de recurs\u00e3o que podem aparecer em uma entrevista t\u00e9cnica. </p>"},{"location":"aulas/ctp/algorithms/recursion.html#exemplo-fatorial","title":"Exemplo Fatorial","text":"<p>Um exemplo cl\u00e1ssico de aplica\u00e7\u00e3o da recurs\u00e3o \u00e9 o c\u00e1lculo do fatorial de um n\u00famero 'n!', que \u00e9 o produto de todos os n\u00fameros inteiros positivos de 1 at\u00e9 n.</p> <pre><code>def fatorial(n):\n    if n == 0 or n == 1:\n        return 1\n    else:\n        return n * fatorial(n-1)\n</code></pre> <p>A fun\u00e7\u00e3o fatorial segue esta l\u00f3gica:</p> <ul> <li>'Caso base': Se n for 0 ou 1, o fatorial \u00e9 1. Esse \u00e9 o caso base que impede que a fun\u00e7\u00e3o chame a si mesma infinitamente.</li> <li>Passo recursivo: Se n for maior que 1, a fun\u00e7\u00e3o retorna 'n' multiplicado pelo fatorial de 'n-1'. Isso quebra o problema em um problema menor at\u00e9 que ele atinja o caso base.</li> </ul> <p>Aulas passadas realizamos a implementa\u00e7\u00e3o do fatorial sem recurs\u00e3o, era alguma coisa parecida com:</p> <pre><code>def fatorialIterativo(n):\n    fatorial = 1\n    for i in range(1, n + 1):\n      fatorial *= i\n    return fatorial\n</code></pre> <p>Neste caso definimos uma varialvel 'fatorial' para acumular o valor do fatorial al\u00e9m de definir um range de 1 at\u00e9 'n+1' para o loop for.</p>"},{"location":"aulas/ctp/algorithms/recursion.html#beneficios-e-desvantagens-da-recursao","title":"Benef\u00edcios e Desvantagens da Recurs\u00e3o","text":"<ul> <li> <p>Benef\u00edcios:</p> <ul> <li>Simplicidade: A recurs\u00e3o pode tornar o c\u00f3digo mais limpo e mais f\u00e1cil de entender, especialmente para problemas que t\u00eam uma defini\u00e7\u00e3o naturalmente recursiva, como travessia de \u00e1rvores.</li> <li>Redu\u00e7\u00e3o de c\u00f3digo: Muitas vezes, a recurs\u00e3o permite reduzir a quantidade de c\u00f3digo necess\u00e1rio para resolver um problema.</li> </ul> </li> <li> <p>Desvantagens:</p> <ul> <li>Desempenho: Fun\u00e7\u00f5es recursivas podem ser menos eficientes em termos de tempo de execu\u00e7\u00e3o e uso de mem\u00f3ria devido \u00e0s m\u00faltiplas chamadas de fun\u00e7\u00e3o e ao aumento da pilha de chamadas.</li> <li>'Risco de estouro de pilha': Chamadas recursivas profundas podem levar a um \"stack overflow\" se o caso base n\u00e3o for atingido ou se o n\u00famero de chamadas recursivas for muito grande.</li> </ul> </li> <li> <p>T\u00e9cnicas de Otimiza\u00e7\u00e3o da Recurs\u00e3o</p> <ul> <li>Memoiza\u00e7\u00e3o: Armazenar os resultados de chamadas de fun\u00e7\u00e3o em uma estrutura de dados (por exemplo, um dicion\u00e1rio) para evitar c\u00e1lculos repetidos. Isso \u00e9 especialmente \u00fatil em problemas de otimiza\u00e7\u00e3o e programa\u00e7\u00e3o din\u00e2mica.</li> </ul> </li> </ul>"},{"location":"aulas/ctp/algorithms/recursion.html#exemplo-fibonacci","title":"Exemplo Fibonacci","text":"<p>Outro exemplo cl\u00e1ssico \u00e9 a 'Sequ\u00eancia de Fibonacci' que \u00e9 a sequ\u00eancia num\u00e9rica proposta pelo matem\u00e1tico Leonardo Pisa, mais conhecido como Fibonacci: 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89.....</p> <p>Para entender o que \u00e9 assista o video do Pato Donald </p> <p>Video</p> <p></p> <p>A fun\u00e7\u00e3o 'fibonacciSimples' calcula o n-\u00e9simo termo da sequ\u00eancia de Fibonacci. Para 'n' igual a 0 ou 1, a fun\u00e7\u00e3o retorna 'n' diretamente. Para outros valores de n, a fun\u00e7\u00e3o chama a si mesma 'duas vezes', uma vez para 'n-2' e outra vez para 'n-1', e soma os resultados.</p> <pre><code>def fibonacciSimples(n):\n    if n == 0 or n == 1: return n\n    return fibonacciSimples(n - 2) + fibonacciSimples(n - 1)\n\n# para testar\nfibonacciSimples(5)    \n</code></pre> <p>Essa abordagem tem uma efici\u00eancia ruim para valores grandes de 'n' devido ao grande n\u00famero de chamadas recursivas repetidas. Para valores maiores, \u00e9 recomend\u00e1vel usar t\u00e9cnicas de otimiza\u00e7\u00e3o como a memoiza\u00e7\u00e3o ou abordagens iterativas.</p> <pre><code>def fibonacci(n, memo={}):\n    if n in memo:\n        return memo[n]\n    if n &lt;= 2:\n        return 1\n    memo[n] = fibonacci(n - 1, memo) + fibonacci(n - 2, memo)\n    return memo[n]\n\n# para testar\nprint(fibonacci(10))\n</code></pre> <p>Neste exemplo, a fun\u00e7\u00e3o fibonacci utiliza um dicion\u00e1rio memo para armazenar os resultados das chamadas anteriores, evitando assim c\u00e1lculos redundantes.</p> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/algorithms/recursion.html#exercicios","title":"Exercicios","text":"<p>Para aprender recurs\u00e3o, primeiro voc\u00ea tem aprender recurs\u00e3o. Ent\u00e3o vamos praticar...</p> <p>Exercise</p> <p>Projetar uma fun\u00e7\u00e3o recursiva requer que voc\u00ea escolha cuidadosamente um caso base e certifique-se de que cada sequ\u00eancia de chamadas de fun\u00e7\u00e3o eventualmente atinja um caso base. Neste exercicio, o caso base foi programado para voc\u00ea, mas voc\u00ea escrever\u00e1 o restante da fun\u00e7\u00e3o recursiva.</p> <p>Escreva uma fun\u00e7\u00e3o recursiva somaDigital(n) que recebe um n\u00famero inteiro positivo n e retorna a soma de seus d\u00edgitos. Por exemplo, somaDigital(2024) deve retornar 8 porque 2+0+2+4=8.</p> <pre><code>def somaDigital(n):\n    if n &lt; 10:\n        return n\n    else:\n    # caso recursivo\n    # seu c\u00f3digo\n</code></pre> <p>Exercise</p> <p>Escreva uma fun\u00e7\u00e3o recursiva raizDigital(n) que retorna a raiz digital de n. Ou seja, A raiz digital de um n\u00famero inteiro n\u00e3o negativo n \u00e9 calculada da seguinte forma. Comece somando os d\u00edgitos de n. Os d\u00edgitos do n\u00famero resultante s\u00e3o ent\u00e3o somados e esse processo continua at\u00e9 que um n\u00famero de um \u00fanico d\u00edgito seja obtido. Por exemplo, a raiz digital de 2019 \u00e9 3 porque 2+0+1+9=12 e 1+2=3. Utilize a fun\u00e7\u00e3o somaDigital para resolver o problema.</p> <p>Exercise</p> <p>A sequ\u00eancia de hailstone come\u00e7ando em um n\u00famero inteiro positivo n \u00e9 gerada seguindo duas regras simples. Se n for par, o pr\u00f3ximo n\u00famero na sequ\u00eancia ser\u00e1 n/2. Se n for \u00edmpar, o pr\u00f3ximo n\u00famero na sequ\u00eancia ser\u00e1 3*n+1. Repetindo esse processo, geramos a sequ\u00eancia do hailstone. Escreva uma fun\u00e7\u00e3o recursiva hailstone(n) que imprime a sequ\u00eancia de granizo come\u00e7ando em n. Pare quando a sequ\u00eancia atingir o n\u00famero 1 (caso contr\u00e1rio, far\u00edamos um loop eterno de 1, 4, 2, 1, 4, 2, ...) Por exemplo, quando n=5, seu programa dever\u00e1 gerar a seguinte sequ\u00eancia:</p> <pre><code>5\n16\n8\n4\n2\n1\n</code></pre>"},{"location":"aulas/ctp/algorithms/recursion.html#e-agora-o-que-vem-pela-frente","title":"E agora o que vem pela frente?","text":"<p>Agora que entendemos o que \u00e9 recurs\u00e3o, podemos aplicar essa t\u00e9cnca em alguns problemas que j\u00e1 conhecemos tais como a 'busca bin\u00e1ria' que \u00e9 um algoritmo eficiente para encontrar um elemento em uma lista ordenada e algoritmos de oedena\u00e7\u00e3o r\u00e1pida.</p> <pre><code>def busca_binaria_recursiva(lista, elemento, inicio=0, fim=None):\n    if fim is None:\n        fim = len(lista) - 1\n    if inicio &gt; fim:\n        return -1  # Elemento n\u00e3o encontrado\n    meio = (inicio + fim) // 2\n    if lista[meio] == elemento:\n        return meio\n    elif lista[meio] &gt; elemento:\n        return busca_binaria_recursiva(lista, elemento, inicio, meio - 1)\n    else:\n        return busca_binaria_recursiva(lista, elemento, meio + 1, fim)\n\n# para testar\nlista_ordenada = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(busca_binaria_recursiva(lista_ordenada, 5))  # Sa\u00edda: 4\n</code></pre>"},{"location":"aulas/ctp/algorithms/recursion.html#recursao-vs-iteracao","title":"Recurs\u00e3o vs. Itera\u00e7\u00e3o","text":"<p>Embora muitos problemas possam ser resolvidos tanto com recurs\u00e3o quanto com itera\u00e7\u00e3o, h\u00e1 situa\u00e7\u00f5es em que um m\u00e9todo pode ser mais adequado que o outro. A recurs\u00e3o \u00e9 frequentemente mais intuitiva e direta para problemas que t\u00eam uma natureza recursiva, como a travessia de estruturas de dados hier\u00e1rquicas (\u00e1rvores, por exemplo). No entanto, a itera\u00e7\u00e3o pode ser mais eficiente em termos de uso de mem\u00f3ria e tempo de execu\u00e7\u00e3o, especialmente para problemas que n\u00e3o exigem a divis\u00e3o em subproblemas menores.</p> <p>Progress</p> <p>continuar...</p> <p>Algumas refer\u00eancias: </p> <pre><code>- https://acervolima.com/recursao-em-python/\n\n- https://cscircles.cemc.uwaterloo.ca/16-recursion/\n\n- https://panda.ime.usp.br/algoritmos/static/algoritmos/20-divisao-e-conquista.html\n</code></pre>"},{"location":"aulas/ctp/algorithms/selection-sort.html","title":"Selection Sort","text":"<p>O Selection Sort \u00e9 uma  melhoria  do  Bubblesort, \u00e9 um algoritmo de ordena\u00e7\u00e3o simples que divide a lista de entrada em duas partes: a sublista de itens j\u00e1 ordenados, que \u00e9 constru\u00edda da esquerda para a direita na frente (ou no topo) da lista, e a sublista de itens restantes a serem ordenados que ocupam o resto da lista. Inicialmente, a sublista ordenada est\u00e1 vazia e a sublista n\u00e3o ordenada \u00e9 a lista inteira.</p>"},{"location":"aulas/ctp/algorithms/selection-sort.html#funcionamento-do-algoritmo","title":"Funcionamento do Algoritmo","text":"<p>O algoritmo funciona repetidamente encontrando o menor (ou maior, dependendo da ordem de ordena\u00e7\u00e3o) elemento na sublista n\u00e3o ordenada, trocando-o com o elemento n\u00e3o ordenado mais \u00e0 esquerda (ou seja, colocando-o na posi\u00e7\u00e3o correta na sublista ordenada) e movendo a fronteira da sublista ordenada um elemento para a direita.</p> <p></p>"},{"location":"aulas/ctp/algorithms/selection-sort.html#selection-sort-em-acao","title":"Selection Sort em a\u00e7\u00e3o","text":"<p>Para visualizar o algoritmo em a\u00e7\u00e3o utilize o link a seguir:</p> <p>ttps://visualgo.net/en/sorting</p>"},{"location":"aulas/ctp/algorithms/selection-sort.html#implementacao-em-python","title":"Implementa\u00e7\u00e3o em Python","text":"<p>Aqui est\u00e1 uma implementa\u00e7\u00e3o simples do Selection Sort em Python:</p> <pre><code>def selection_sort(lista):\n    n = len(lista)\n    # Percorre a lista.\n    for i in range(n):\n        # Encontra o elemento m\u00ednimo da lista.\n        minimo = i\n        for j in range(i + 1, n):\n            if lista[minimo] &gt; lista[j]:\n                minimo = j\n        # Coloca o elemento m\u00ednimo na posi\u00e7\u00e3o correta.\n        lista[i], lista[minimo] = lista[minimo], lista[i] ## troca de posi\u00e7\u00e3o\n</code></pre> <p>Uma varia\u00e7\u00e3o possivel \u00e9 modificar o algoritmo para ordenar colocando os maiores elementos no final, voc\u00ea precisaria procurar o maior elemento na sublista n\u00e3o ordenada em vez do menor. Isso pode ser feito alterando a condi\u00e7\u00e3o de compara\u00e7\u00e3o no loop interno para <code>if lista[idx] &lt; lista[j]:</code>. No entanto, na pr\u00e1tica, isso n\u00e3o muda a ess\u00eancia do algoritmo; apenas inverte a ordem de ordena\u00e7\u00e3o.</p> <pre><code>def selection_sort(lista):\n    n = len(lista)\n    # Percorre a lista.\n    for i in range(n):\n        # Encontra o elemento m\u00e1ximo da lista.\n        maximo = i\n        for j in range(i + 1, n):\n            if lista[maximo] &lt; lista[j]:\n                maximo = j\n        # Coloca o elemento m\u00e1ximo na posi\u00e7\u00e3o correta.\n        lista[i], lista[maximo] = lista[maximo], lista[i]\n    return lista\n</code></pre> <p>Neste caso, como exemplo:</p> <pre><code>lista = [64, 25, 12, 22, 11]\nlista_ordenada = selection_sort(lista)\nprint(\"Lista Ordenada:\", lista_ordenada)\n</code></pre>"},{"location":"aulas/ctp/algorithms/selection-sort.html#intuicao-da-analise-de-complexidade","title":"Intui\u00e7\u00e3o da An\u00e1lise de Complexidade","text":"<ul> <li> <p>Complexidade de Tempo: O Selection Sort tem uma complexidade de tempo quadr\u00e1tica O(n\u00b2), onde n \u00e9 o n\u00famero de elementos na lista. Isso ocorre porque ele precisa fazer duas passagens aninhadas sobre a lista para garantir que ela esteja ordenada.</p> </li> <li> <p>Complexidade de Espa\u00e7o: A complexidade de espa\u00e7o \u00e9 O(1), pois requer apenas uma quantidade constante de espa\u00e7o de mem\u00f3ria adicional al\u00e9m da lista de entrada.</p> </li> </ul> <p>Exerc\u00edcio de Ordena\u00e7\u00e3o</p> <p>Suponha que voc\u00ea tenha a seguinte lista de n\u00fameros para ordenar: <code>[11, 7, 12, 14, 19, 1, 6, 18, 8, 20]</code> qual lista representa a lista parcialmente ordenada depois de tr\u00eas passagens completas da ordena\u00e7\u00e3o por sele\u00e7\u00e3o,assumindo que vai buscar o maior elemento na sublista n\u00e3o ordenada em vez do menor?</p> <ul> <li> [7, 11, 12, 1, 6, 14, 8, 18, 19, 20]</li> <li> [7, 11, 12, 14, 19, 1, 6, 18, 8, 20]</li> <li> [11, 7, 12, 14, 1, 6, 8, 18, 19, 20]</li> <li> [11, 7, 12, 14, 8, 1, 6, 18, 19, 20]</li> </ul> <p>Answer</p> <p>A lista parcialmente ordenada depois de tr\u00eas passagens buscando o maior elemento na sublista n\u00e3o ordenada em vez do menor. <code>[11, 7, 12, 14, 8, 1, 6, 18, 19, 20]</code>.</p> <p>Refer\u00eancia: https://panda.ime.usp.br/panda/static/pythonds_pt/05-OrdenacaoBusca/AOrdenacaoPorSelecao.html</p>"},{"location":"aulas/ctp/algorithms/sequential-search.html","title":"Busca Sequencial","text":"<p>A <code>busca sequencial</code> ou como tambem \u00e9 conhecida <code>busca linear</code>, \u00e9 um m\u00e9todo simples para encontrar um valor espec\u00edfico em uma lista. Ele funciona iterando atrav\u00e9s de cada elemento da lista, um por um, at\u00e9 encontrar o valor desejado.</p> <p></p> <p>Simplicidade: Uma das principais vantagens da busca sequencial \u00e9 a sua simplicidade. Ela n\u00e3o requer que os dados estejam ordenados.</p> <p>Efici\u00eancia: N\u00e3o \u00e9 o m\u00e9todo mais eficiente para encontrar um elemento em uma lista. Ela tem uma complexidade de tempo de O(n), o que significa que, no pior caso, ela precisa percorrer todos os n elementos da lista para encontrar o elemento desejado. No entanto, para listas pequenas ou quando a distribui\u00e7\u00e3o dos dados \u00e9 desconhecida, a busca sequencial pode ser uma boa escolha.</p> <p>Uso de mem\u00f3ria: N\u00e3o requer mem\u00f3ria adicional, ao contr\u00e1rio de alguns outros algoritmos de busca e ordena\u00e7\u00e3o que precisam de espa\u00e7o extra para funcionar.</p> <p>Aplica\u00e7\u00f5es: A busca sequencial \u00e9 \u00fatil em aplica\u00e7\u00f5es onde os dados n\u00e3o est\u00e3o ordenados e a efici\u00eancia n\u00e3o \u00e9 uma preocupa\u00e7\u00e3o primordial. Ela tamb\u00e9m \u00e9 \u00fatil quando a lista \u00e9 atualizada frequentemente, pois outros m\u00e9todos de busca que requerem dados ordenados precisariam reordenar a lista cada vez que um elemento \u00e9 adicionado ou removido.</p>"},{"location":"aulas/ctp/algorithms/sequential-search.html#exemplo-de-implementacao-passo-a-passo-de-uma-busca-sequencial","title":"Exemplo de implementa\u00e7\u00e3o passo a passo de uma busca sequencial:","text":"<ol> <li>Defina a lista de valores e o valor que voc\u00ea est\u00e1 procurando.</li> </ol> <pre><code>lista = [1, 3, 5, 7, 9]\nvalor_procurado = 5\n</code></pre> <ol> <li>Crie uma fun\u00e7\u00e3o para realizar a busca sequencial. A fun\u00e7\u00e3o deve percorrer cada elemento da lista. Se o elemento atual for igual ao valor procurado, a fun\u00e7\u00e3o deve retornar o \u00edndice desse elemento. Se o valor n\u00e3o for encontrado, a fun\u00e7\u00e3o deve retornar -1.</li> </ol> <p>Podemos fazer de diversas formas, tais como: </p> <pre><code>def busca_sequencial(lista, valor_procurado):\n    indice = 0\n    for numero in lista:\n        if numero == valor_procurado:\n            return indice\n        indice = indice + 1\n    return -1\n</code></pre> <p>ou, foram alternativa:</p> <pre><code>def busca_sequencial(lista, valor_procurado):\n    for i in range(len(lista)):\n        if lista[i] == valor_procurado:\n            return i\n    return -1\n</code></pre> <p>ou, de uma forma mais <code>pythonica</code>:</p> <p><pre><code>def busca_sequencial(lista, valor_procurado):\n    for indice,numero in enumerate(lista):\n        if numero == valor_procurado:\n            return indice\n    return -1\n</code></pre> alternativa:</p> <pre><code>def busca_sequencial(lista, valor_procurado):\n    try:\n        return lista.index(valor_procurado)\n    except ValueError:\n        return -1\n</code></pre> <ol> <li>Chame a fun\u00e7\u00e3o de busca sequencial e imprima o resultado.</li> </ol> <pre><code>indice = busca_sequencial(lista, valor_procurado)\nif indice != -1:\n    print(f\"Valor encontrado no \u00edndice {indice}\")\nelse:\n    print(\"Valor n\u00e3o encontrado\")\n</code></pre> <p>Realizamos a busca linear de diversas formas, incluse com o recurso (try/except) na fun\u00e7\u00e3o de busca. Fizemos isso porque o m\u00e9todo index() retorna o \u00edndice em que o elemento aparece na lista de entrada (caso esse elemento esteja presente) e ValueError caso o elemento n\u00e3o esteja na lista</p> <p>Warning</p> <p>Uma pergunta natural a se fazer \u00e9: existe alguma forma de se pesquisar por um elemento em uma lista de modo mais eficiente?</p> <p>A resposta a essa pergunta depende da forma como os elementos est\u00e3o organizados no vetor. Se eles n\u00e3o estiverem em uma ordem espec\u00edfica, n\u00e3o h\u00e1 como fugir da pesquisa linear. Se os elementos estiverem ordenados de alguma forma, podemos usar <code>busca bin\u00e1ria</code>.</p> <p>Progress</p> <p>continuar ...</p>"},{"location":"aulas/ctp/algorithms/sequential-search.html#exercicos-para-compreensao","title":"Exercicos para compreens\u00e3o","text":"<p>Quest\u00e3o 1</p> <p>Qual das seguintes afirma\u00e7\u00f5es descreve corretamente a busca sequencial?</p> <ul> <li> A busca sequencial \u00e9 mais r\u00e1pida que a busca bin\u00e1ria.</li> <li> A busca sequencial verifica cada elemento da lista um por um at\u00e9 encontrar o elemento desejado.</li> <li> A busca sequencial requer que a lista esteja ordenada.</li> <li> A busca sequencial divide a lista em duas partes iguais a cada passo.</li> </ul> <p>Answer</p> <p>A busca sequencial verifica cada elemento da lista um por um at\u00e9 encontrar o elemento desejado. N\u00e3o requer que a lista esteja ordenada e \u00e9 geralmente mais lenta que a busca bin\u00e1ria em listas grandes.</p> <p>Quest\u00e3o 2</p> <p>Em uma lista de 100 elementos, qual \u00e9 o n\u00famero m\u00e1ximo de compara\u00e7\u00f5es que a busca sequencial pode fazer para encontrar um elemento?</p> <ul> <li> 50</li> <li> 99</li> <li> 100</li> <li> 101</li> </ul> <p>Answer</p> <p>No pior caso, a busca sequencial pode fazer at\u00e9 100 compara\u00e7\u00f5es para encontrar um elemento em uma lista de 100 elementos, se o elemento estiver na \u00faltima posi\u00e7\u00e3o ou n\u00e3o estiver na lista.</p> <p>Quest\u00e3o 3</p> <p>Qual das seguintes situa\u00e7\u00f5es \u00e9 mais adequada para usar a busca sequencial?</p> <ul> <li> Quando a lista est\u00e1 ordenada e tem muitos elementos.</li> <li> Quando a lista est\u00e1 ordenada e tem poucos elementos.</li> <li> Quando a lista n\u00e3o est\u00e1 ordenada e tem poucos elementos.</li> <li> Quando a efici\u00eancia n\u00e3o \u00e9 importante.</li> </ul> <p>Answer</p> <p>A busca sequencial \u00e9 mais adequada para listas n\u00e3o ordenadas com poucos elementos, pois nesse caso, a simplicidade do algoritmo pode compensar a falta de efici\u00eancia.</p> <p>Quest\u00e3o 4</p> <p>Qual \u00e9 a complexidade de tempo da busca sequencial em termos de nota\u00e7\u00e3o Big O?</p> <ul> <li> O(log n)</li> <li> O(n)</li> <li> O(n^2)</li> <li> O(1)</li> </ul> <p>Answer</p> <p>A complexidade de tempo da busca sequencial \u00e9 O(n), pois no pior caso, \u00e9 necess\u00e1rio verificar cada elemento da lista uma vez.</p> <p>Quest\u00e3o 5</p> <p>Se voc\u00ea estiver usando a busca sequencial para encontrar um elemento em uma lista, qual \u00e9 a melhor posi\u00e7\u00e3o para o elemento, se voc\u00ea deseja minimizar o n\u00famero de compara\u00e7\u00f5es?</p> <ul> <li> No in\u00edcio da lista.</li> <li> No meio da lista.</li> <li> No final da lista.</li> <li> A posi\u00e7\u00e3o do elemento n\u00e3o afeta o n\u00famero de compara\u00e7\u00f5es.</li> </ul> <p>Answer</p> <p>Se o elemento estiver no in\u00edcio da lista, a busca sequencial encontrar\u00e1 o elemento na primeira compara\u00e7\u00e3o, minimizando o n\u00famero de compara\u00e7\u00f5es necess\u00e1rias.</p>"},{"location":"aulas/ctp/algorithms/sorting-algorithms.html","title":"O caso da Ordena\u00e7\u00e3o","text":"<p>\"Mas afinal, de que serve ter uma cole\u00e7\u00e3o de itens se n\u00e3o conseguimos encontrar o que precisamos quando precisamos? Assim como o problema da busca, a 'ordena\u00e7\u00e3o' \u00e9 uma quest\u00e3o fundamental que enfrentamos constantemente, seja organizando livros em uma estante, as cartas em um jogo de baralho, arquivos em um computador ou at\u00e9 mesmo as fotos no nosso celular.\"</p>"},{"location":"aulas/ctp/algorithms/sorting-algorithms.html#a-importancia-da-ordenacao","title":"A Import\u00e2ncia da Ordena\u00e7\u00e3o","text":"<p>Ordenar dados \u00e9 uma opera\u00e7\u00e3o fundamental em Ci\u00eancia da Computa\u00e7\u00e3o, nada mais \u00e9 do que arrumar a casa, com implica\u00e7\u00f5es significativas em diversas \u00e1reas de aplica\u00e7\u00e3o. Vamos explorar em mais detalhes por que a ordena\u00e7\u00e3o \u00e9 t\u00e3o importante:</p> <ul> <li> <p>Facilitar a busca e o acesso a informa\u00e7\u00f5es.</p> <p>Quando os dados est\u00e3o ordenados, a busca por informa\u00e7\u00f5es espec\u00edficas se torna muito mais r\u00e1pida e eficiente. Por exemplo, se voc\u00ea tem uma lista telef\u00f4nica ordenada alfabeticamente, encontrar o n\u00famero de uma pessoa espec\u00edfica \u00e9 muito mais f\u00e1cil do que se os nomes estivessem em ordem aleat\u00f3ria. Da mesma forma, em um banco de dados, registros ordenados permitem consultas mais r\u00e1pidas e precisas.</p> </li> <li> <p>Melhorar a efici\u00eancia de algoritmos</p> <p>Muitos algoritmos de busca, como a busca bin\u00e1ria, exigem que os dados estejam ordenados para funcionar corretamente. A busca bin\u00e1ria, por exemplo, pode localizar um elemento em uma lista ordenada em tempo logar\u00edtmico (O(log n)), enquanto a busca sequencial em uma lista n\u00e3o ordenada requer tempo linear (O(n)). Portanto, ordenar os dados pode ser um passo crucial para garantir a efici\u00eancia de algoritmos subsequentes.</p> </li> <li> <p>Organizar e apresentar dados de maneira compreens\u00edvel</p> <p>Al\u00e9m dos benef\u00edcios t\u00e9cnicos, a ordena\u00e7\u00e3o ajuda a apresentar dados de maneira mais compreens\u00edvel e acess\u00edvel. Em relat\u00f3rios, tabelas ou gr\u00e1ficos, dados ordenados facilitam a identifica\u00e7\u00e3o de padr\u00f5es, tend\u00eancias e anomalias. Isso \u00e9 essencial n\u00e3o apenas para an\u00e1lise de dados, mas tamb\u00e9m para a tomada de decis\u00f5es baseada em informa\u00e7\u00f5es claras e organizadas.</p> </li> <li> <p>Otimiza\u00e7\u00e3o de Recursos</p> <p>A ordena\u00e7\u00e3o eficiente tamb\u00e9m pode contribuir para a otimiza\u00e7\u00e3o de recursos computacionais, como mem\u00f3ria e processamento. Algoritmos de ordena\u00e7\u00e3o otimizados minimizam o n\u00famero de opera\u00e7\u00f5es necess\u00e1rias, reduzindo o consumo de recursos e melhorando o desempenho geral do sistema.</p> </li> <li> <p>Aplica\u00e7\u00f5es em Diversos Campos</p> <p>A ordena\u00e7\u00e3o tem aplica\u00e7\u00f5es em diversos campos, desde sistemas de gerenciamento de banco de dados, engenharia de software e intelig\u00eancia artificial at\u00e9 \u00e1reas como bioinform\u00e1tica, onde a ordena\u00e7\u00e3o de sequ\u00eancias gen\u00e9ticas \u00e9 fundamental para an\u00e1lises comparativas e descobertas cient\u00edficas.</p> </li> </ul> <p>Em Python ou JavaScript tem um m\u00e9todo de classifica\u00e7\u00e3o nativo. Ele funciona em arrays de n\u00fameros ou at\u00e9 mesmo em arrays de strings:</p> <p>Em Python:</p> <p><pre><code>animals = [\"gnu\", \"zebra\", \"antelope\", \"aardvark\", \"yak\", \"iguana\"]\nanimals.sort()\nprint(animals)\n</code></pre> ou em JavaScript:</p> <pre><code>var animals = [\"gnu\", \"zebra\", \"antelope\", \"aardvark\", \"yak\", \"iguana\"];\nanimals.sort();\nprint(animals);\n</code></pre> <p>Mesmo que o JavaScript tenha um m\u00e9todo de classifica\u00e7\u00e3o nativo, classificar \u00e9 um \u00f3timo exemplo de como pode haver muitas maneiras de pensar um mesmo problema, algumas talvez melhores que outras. Compreender a classifica\u00e7\u00e3o \u00e9 um tradicional primeiro passo para o dom\u00ednio de algoritmos.</p> <p>Existem  diversos  tipos  de  algoritmos  para  a  tarefa  de  ordena\u00e7\u00e3o.  Suas complexidades  v\u00e3o de  O(nlogn)  at\u00e9  O(n2). </p> <p>Conhe\u00e7a alguns deles e avalie a sua complexidade neste site: </p> <ul> <li>https://www.toptal.com/developers/sorting-algorithms</li> </ul> <p>Assista o video com 15 formas de ordena\u00e7\u00e3o diferentes.</p> <ul> <li>https://youtu.be/kPRA0W1kECg?si=QGFoBM55yaHOB9HL</li> </ul> <p>Quest\u00e3o 1</p> <p>Qual \u00e9 a alternativa que descreve o conceito de ordena\u00e7\u00e3o na computa\u00e7\u00e3o?</p> <ul> <li> <p> Os resultados, assim, poder\u00e3o ser consolidados e analisados pelas inst\u00e2ncias de planejamento estrat\u00e9gico das institui\u00e7\u00f5es que implementam as tais pol\u00edticas p\u00fablicas.</p> </li> <li> <p> \u00c9 a opera\u00e7\u00e3o de rearranjar os dados dispon\u00edveis em uma determinada ordem.</p> </li> <li> <p> Todas as empresas t\u00eam a necessidade de classificar seus dados, muitas vezes em volumes maci\u00e7os.</p> </li> <li> <p> A efici\u00eancia no manuseio desses dados pode ser aumentada.</p> </li> <li> <p> Em diversas situa\u00e7\u00f5es cotidianas \u00e9 conveniente colocar uma lista em ordem para facilitar a busca de informa\u00e7\u00f5es nela contidas.</p> </li> </ul> <p>Answer</p> <p>Ordenar \u00e9 rearranjar os dados em uma ordem determinada</p> <p>Exercise</p> <p>Discuta com o seu colega uma forma de ordenar cartas de baralho que est\u00e3o em sua m\u00e3o. Por exemplo [5,13,47,17,53,2,7,29,41,11,23] A dupla deve escrever a forma que pensou em um pseudoc\u00f3digo. Agora Compare com os outros grupo se realizaram essa tarefa da mesma forma ou n\u00e3o. Quantos passos foram necess\u00e1rios? Qual a forma mais efici\u00eante de realizar essa tarefa?</p>"},{"location":"aulas/ctp/algorithms/sorting-algorithms.html#que-tal-pensar-nesse-problema-de-forma-visual","title":"Que tal pensar nesse problema de forma visual?","text":"<p>Voc\u00ea pode trocar qualquer par de cartas ao clicar em uma carta e depois na outra. Troque as cartas at\u00e9 que elas estejam ordenadas com a menor carta \u00e0 esquerda.</p> <p>\"Depois de explorarmos o problema da ordena\u00e7\u00e3o, vamos agora pensar em um contexto mais computacional.</p> <p>Exercise</p> <p>Defini\u00e7\u00e3o do Problema</p> <p>Dada uma cole\u00e7\u00e3o de elementos, com uma rela\u00e7\u00e3o de ordem entre eles, ordenar os elementos da cole\u00e7\u00e3o de forma crescente.</p> <p>Answer</p> <p>Para entender melhor, imagine uma lista de n\u00fameros, onde cada n\u00famero \u00e9 \u00fanico, e queremos que essa liste fique em ordem crescente, ou seja, do menor para o maior.</p>"},{"location":"aulas/ctp/bd/index.html","title":"SQL","text":""},{"location":"aulas/ctp/bd/index.html#operacoes-crud-com-python-em-um-banco-de-dados-oracle","title":"Opera\u00e7\u00f5es CRUD com Python em um Banco de Dados Oracle","text":"<p>Nesta aula vamos realizar o processo de conex\u00e3o a um banco de dados utilizando Python. Trata-se de um guia r\u00e1pido de consulta para opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete) com uma abordagem mais simples e direta.</p> <p></p> <p>Warning</p> <p>Apenas por compatibilidade com o que \u00e9 estudado no curso, vamos utilizar o banco de dados <code>ORACLE</code>, e no python a biblioteca <code>oracledb</code>, mas voc\u00ea ainda encontra bastante c\u00f3digo legado com a biblioteca <code>cx_Oracle</code>. </p> <p>\u00c9 poss\u00edvel realizar a conex\u00e3o de qualquer banco de dados com o Python, incluindo MySQL, SQLite, MongoDB, Oracle, e PostgreSQL. De forma geral, os mesmos passos b\u00e1sicos s\u00e3o seguidos para estabelecer uma conex\u00e3o e executar opera\u00e7\u00f5es CRUD (Create, Read, Update, Delete). No entanto, \u00e9 fundamental acessar a documenta\u00e7\u00e3o oficial de cada banco de dados e da biblioteca Python espec\u00edfica para entender as particularidades e o que \u00e9 necess\u00e1rio adaptar. </p> <p>Aqui est\u00e3o algumas considera\u00e7\u00f5es importantes para cada um dos principais sistemas de gerenciamento de banco de dados (SGBDs):</p> <ul> <li> <p><code>MySQL</code>: Para interagir com MySQL usando Python, a biblioteca mais comum \u00e9 o <code>mysql-connector-python</code>. Ap\u00f3s a instala\u00e7\u00e3o via pip, a conex\u00e3o pode ser estabelecida fornecendo os detalhes do host, usu\u00e1rio, senha e o banco de dados. \u00c9 importante verificar quest\u00f5es de seguran\u00e7a e desempenho, como o uso de conex\u00f5es pool.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://www.mysql.com/</li> </ul> </li> <li> <p><code>SQLite</code>: SQLite \u00e9 uma biblioteca que fornece um banco de dados SQL acess\u00edvel sem a necessidade de um processo de servidor separado. Python vem com suporte embutido para SQLite atrav\u00e9s do m\u00f3dulo <code>sqlite3</code>. Isso facilita a execu\u00e7\u00e3o de opera\u00e7\u00f5es de banco de dados sem configura\u00e7\u00e3o adicional e \u00e9 ideal para desenvolvimento e testes.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://www.sqlite.org/</li> </ul> </li> <li> <p><code>MongoDB</code>: MongoDB \u00e9 um <code>banco de dados NoSQL</code> que armazena dados em documentos semelhantes a <code>JSON</code>. Para us\u00e1-lo com Python, voc\u00ea deve instalar <code>pymongo</code>. A conex\u00e3o com MongoDB difere significativamente em compara\u00e7\u00e3o com os bancos de dados relacionais, focando mais na manipula\u00e7\u00e3o de documentos e cole\u00e7\u00f5es em vez de tabelas e linhas.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://www.mongodb.com/</li> </ul> </li> <li> <p><code>Oracledb</code> O oracleb, \u00e9 uma biblioteca poderosa que permite a conex\u00e3o entre Python e bancos de dados Oracle. \u00c9 essencial configurar os parametros de usu\u00e1rio, senha e DNS para uma conex\u00e3o bem-sucedida.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://oracle.github.io/python-oracledb/</li> </ul> </li> <li> <p><code>PostgreSQL</code>: Para conectar-se ao PostgreSQL, o <code>psycopg2</code> \u00e9 uma escolha popular. Esta biblioteca \u00e9 eficaz tanto para opera\u00e7\u00f5es simples quanto para uso em produ\u00e7\u00e3o, oferecendo suporte robusto para diferentes tipos de dados e conformidade com os padr\u00f5es SQL.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://www.postgresql.org/</li> </ul> </li> <li> <p><code>Microsoft SQL Server</code>: Trata-se tambem de um dos maiores bancos de dados mantido pela microsoft. H\u00e1 v\u00e1rios drivers SQL do Python dispon\u00edveis. No entanto, a Microsoft coloca esfor\u00e7os de teste e confian\u00e7a no driver <code>pyodbc</code> outro conhecido \u00e9 o <code>pymssql</code>.</p> <ul> <li>ACESSE A DOCUMETA\u00c7\u00c3O OFICIAL EM: https://mkleehammer.github.io/pyodbc/</li> </ul> </li> </ul> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/bd/index.html#pre-requisitos","title":"Pr\u00e9-requisitos","text":"<ul> <li>oracledb: Biblioteca Python para conectar ao Oracle. Instale via pip:</li> </ul> <p><pre><code>pip install oracledb\n</code></pre> - Oracle Developer: Instalado e configurado no seu sistema operacional. Este \u00e9 necess\u00e1rio para que funcione corretamente.</p>"},{"location":"aulas/ctp/bd/index.html#importando-a-biblioteca","title":"Importando a biblioteca","text":"<p>Comece seu script Python importando a <code>oracledb</code>:</p> <pre><code>import oracledb\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#configurando-a-string-de-conexao","title":"Configurando a String de Conex\u00e3o","text":"<p>Crie uma <code>Data Source Name</code> (DSN) utilizando as credenciais e o endere\u00e7o do seu banco de dados Oracle:</p> <pre><code>dsn = oracledb.makedsn('hostname', port, service_name='service_name')\nconnection = oracledb.connect(user='username', password='password', dsn=dsn, encoding=\"UTF-8\")\n</code></pre> <p>Tip</p> <p>Voc\u00ea j\u00e1 possui essas credenciais de acesso. abra o seu oracle developer e adicione as informa\u00e7\u00f5es \u00e9 esperado alguma coisa do tipo:</p> <pre><code># Conecta o servidor\ndsnStr = oracledb.makedsn(\"oracle.fiap.com.br\", 1521, \"ORCL\")\n# Efetua a conex\u00e3o com o Usu\u00e1rio\nconnection = oracledb.connect(user=USER, password=PASS, dsn=dsnStr)\n</code></pre> <p>Warning</p> <p>Cuidado!!!! para n\u00e3o vazar seus acessos e senhas na internet. NUNCA DE COMMIT dessas informa\u00e7\u00f5es. Crie um aruqivo separado com essas informa\u00e7\u00f5es ou utilize variaveis de ambiente. Como fazer? Leia este tutorial: protegendo credenciais de banco de dados em aplicacoes python</p> <p>Se tudo der certo, parab\u00e9ns! voc\u00ea j\u00e1 est\u00e1 conectado ao seu banco de dados. Agora podemos seguir com as opera\u00e7\u00f5es de CRUD.</p>"},{"location":"aulas/ctp/bd/index.html#schema","title":"Schema","text":"<p>No seu Oracle Developer, crie o seguinte <code>tabela</code>:</p> <pre><code>table: petshop\nschema:\n    id  -- PK number\n    tipo_pet -- varchar 30\n    nome_pet -- varchar 30\n    idade -- number\n</code></pre> <p>Vamos utilizar essa tabela como base do nosso exemplo.</p>"},{"location":"aulas/ctp/bd/index.html#uso-simples-apenas-para-entender-a-ideia-principal","title":"Uso simples (apenas para entender a ideia principal)","text":"<p>Depois de estabelecer uma conex\u00e3o com o banco de dados, voc\u00ea pode executar instru\u00e7\u00f5es SQL usando o <code>objeto cursor</code>. </p> <p>O objeto cursor permite executar instru\u00e7\u00f5es SQL e recuperar os resultados. Voc\u00ea pode criar um objeto cursor usando o seguinte c\u00f3digo:</p> <pre><code># Cria um cursor\ncursor = connection.cursor()\n</code></pre> <p>Para executar uma instru\u00e7\u00e3o SQL, voc\u00ea pode usar o m\u00e9todo <code>execute()</code> do objeto cursor. Por exemplo, para executar uma instru\u00e7\u00e3o <code>SELECT</code>, voc\u00ea pode usar o seguinte c\u00f3digo:</p> <pre><code># Executa uma instru\u00e7\u00e3o SELECT\ncursor.execute('SELECT * FROM nome_tabela')\n</code></pre> <p>Voc\u00ea tamb\u00e9m pode usar o m\u00e9todo execute() para executar outros tipos de instru\u00e7\u00f5es SQL, como INSERT, UPDATE e DELETE. Por exemplo, para inserir uma nova linha em uma tabela, voc\u00ea pode usar o seguinte c\u00f3digo:</p> <pre><code># Executa uma instru\u00e7\u00e3o INSERT\ncursor.execute(\"INSERT INTO nome_tabela (coluna1, coluna2) VALORES (valor1, valor2)\")\n\n# Confirme as altera\u00e7\u00f5es no banco de dados\nconnection.commit()\n</code></pre> <p>Warning</p> <p>\u00c9 importante lembrar de chamar o m\u00e9todo <code>commit()</code> ap\u00f3s executar qualquer instru\u00e7\u00e3o SQL que modifique o banco de dados. Isso garante que as altera\u00e7\u00f5es sejam salvas no banco de dados.</p> <p>Quando terminar de trabalhar com o banco de dados, voc\u00ea deve fechar a conex\u00e3o e os objetos cursor para liberar recursos. Voc\u00ea pode fazer isso usando o seguinte c\u00f3digo:</p> <pre><code>#fecha o cursor\ncursor.close()\n\n#Fecha a conex\u00e3o\nconnextion.close()\n</code></pre> <p>Com esse entendimento b\u00e1sico, podemos avan\u00e7ar para criar algumas fun\u00e7\u00f5es mais robustas.</p> <p>Progress</p> <p>continuar...</p>"},{"location":"aulas/ctp/bd/index.html#boas-praticas-de-acesso-a-banco-de-dados","title":"Boas Pr\u00e1ticas de Acesso a Banco de Dados","text":"<p>A seguran\u00e7a \u00e9 um dos pilares fundamentais no desenvolvimento de qualquer aplica\u00e7\u00e3o que interaja com bancos de dados. Um dos riscos mais comuns e perigosos em aplica\u00e7\u00f5es web \u00e9 o ataque de <code>SQL Injection</code>, onde um invasor consegue executar comandos SQL maliciosos atrav\u00e9s da interface da aplica\u00e7\u00e3o. Para mitigar esse risco, \u00e9 crucial adotar pr\u00e1ticas robustas de seguran\u00e7a no acesso a banco de dados.</p> <p>Vamos fazer o teste: </p> <ul> <li>https://www.codingame.com/playgrounds/154/sql-injection-demo/sql-injection</li> <li>https://www.hacksplaining.com/lessons/sql-injection</li> </ul>"},{"location":"aulas/ctp/bd/index.html#prevencao-de-sql-injection","title":"Preven\u00e7\u00e3o de SQL Injection","text":"<p>SQL Injection pode comprometer a seguran\u00e7a dos dados e at\u00e9 mesmo permitir o controle total de um banco de dados. Para prevenir esses ataques, uma das t\u00e9cnicas mais eficazes \u00e9 o uso de <code>consultas parametrizadas</code>. </p>"},{"location":"aulas/ctp/bd/index.html#consulta-parametrizada","title":"Consulta Parametrizada","text":"<p>Consultas parametrizadas ajudam a separar o c\u00f3digo SQL dos dados que ele manipula. Isso \u00e9 feito usando <code>placeholders</code> (como <code>:1, :2, :3</code>), que s\u00e3o substitu\u00eddos pelos valores reais no momento da execu\u00e7\u00e3o da consulta. Esses <code>placeholders garantem que os valores inseridos s\u00e3o tratados como dados e n\u00e3o como parte do c\u00f3digo SQL</code>.</p> <p>Vamos explorar como implementar essa t\u00e9cnica em Python, usando a biblioteca oracledb, com exemplos de uma fun\u00e7\u00f5es gen\u00e9rica para inserir dados de forma segura.</p>"},{"location":"aulas/ctp/bd/index.html#operacoes-crud","title":"Opera\u00e7\u00f5es CRUD","text":"<p>As opera\u00e7\u00f5es de CRUD (Create, Read, Update, Delete) s\u00e3o fundamentais para qualquer sistema que interaja com bancos de dados, servindo como a base para a maioria das aplica\u00e7\u00f5es que armazenam e recuperam informa\u00e7\u00f5es. No entanto, al\u00e9m dessas opera\u00e7\u00f5es b\u00e1sicas, existem outras a\u00e7\u00f5es e conceitos importantes em gerenciamento de banco de dados (<code>que n\u00e3o ser\u00e3o estudados neste momento</code>) que podem ampliar a efici\u00eancia e funcionalidade das suas aplica\u00e7\u00f5es, tais como: Procedimentos Armazenados (Stored Procedures), Gatilhos (Triggers), Transa\u00e7\u00f5es, Backup e Recupera\u00e7\u00e3o e muitos outros. </p>"},{"location":"aulas/ctp/bd/index.html#create-inserir-dados","title":"Create (Inserir Dados)","text":"<p>Utilize o m\u00e9todo <code>cursor</code> para interagir com o banco de dados. Aqui est\u00e1 como inserir um novo registro na tabela <code>petshop</code>:</p> <pre><code>cursor = connection.cursor()\ntry:\n    sql = \"INSERT INTO petshop (tipo_pet, nome_pet, idade) VALUES (:1, :2, :3)\"\n    cursor.execute(sql, ['Cachorro', 'Bolt', 2])\n    connection.commit()\nexcept oracledb.DatabaseError as e:\n    error, = e.args\n    print(f\"An error occurred: {error.code} - {error.message}\")\nfinally:\n    cursor.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#read-ler-dados","title":"Read (Ler Dados)","text":"<p>Para ler dados, voc\u00ea pode executar uma consulta SQL simples. O m\u00e9todo <code>fetchall()</code> \u00e9 usado para recuperar todos os registros retornados:</p> <pre><code>cursor = connection.cursor()\ntry:\n    cursor.execute(\"SELECT * FROM petshop\")\n    rows = cursor.fetchall()\n    for row in rows:\n        print(row)\nexcept oracledb.DatabaseError as e:\n    error, = e.args\n    print(f\"An error occurred: {error.code} - {error.message}\")\nfinally:\n    cursor.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#update-atualizar-dados","title":"Update (Atualizar Dados)","text":"<p>Atualize registros especificando condi\u00e7\u00f5es que correspondam aos registros desejados:</p> <pre><code>cursor = connection.cursor()\ntry:\n    sql = \"UPDATE petshop SET nome_pet = :1 WHERE id = :2\"\n    cursor.execute(sql, ['Loki', 1])\n    connection.commit()\nexcept oracledb.DatabaseError as e:\n    error, = e.args\n    print(f\"An error occurred: {error.code} - {error.message}\")\nfinally:\n    cursor.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#delete-deletar-dados","title":"Delete (Deletar Dados)","text":"<p>Para deletar registros:</p> <pre><code>cursor = connection.cursor()\ntry:\n    cursor.execute(\"DELETE FROM petshop WHERE id = :1\", [1])\n    connection.commit()\nexcept oracledb.DatabaseError as e:\n    error, = e.args\n    print(f\"An error occurred: {error.code} - {error.message}\")\nfinally:\n    cursor.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#criar-uma-tabela-caso-nao-exista","title":"Criar uma tabela (caso n\u00e3o exista)","text":"<p>Caso seja necess\u00e1rio, \u00e9 possivel criar uma tabela: </p> <pre><code>cursor = connection.cursor()\ntry:\n    # Verifica se a tabela j\u00e1 existe e cria a tabela se n\u00e3o existir\n    cursor.execute(\"\"\"\n        DECLARE\n            cnt NUMBER;\n        BEGIN\n            SELECT COUNT(*) INTO cnt FROM user_tables WHERE table_name = 'ALUNOS';\n            IF cnt = 0 THEN\n                EXECUTE IMMEDIATE 'CREATE TABLE alunos (\n                    id NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,\n                    nome VARCHAR2(100) NOT NULL,\n                    nota INTEGER NOT NULL\n                )';\n            END IF;\n        END;\n    \"\"\")\n    connection.commit()\nexcept oracledb.DatabaseError as e:\n    error, = e.args\n    print(f\"An error occurred: {error.code} - {error.message}\")\nfinally:\n    cursor.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#encerrando-a-conexao","title":"Encerrando a Conex\u00e3o","text":"<p>Sempre encerre o cursor e a conex\u00e3o para liberar recursos do banco de dados:</p> <pre><code>connection.close()\n</code></pre>"},{"location":"aulas/ctp/bd/index.html#dicas","title":"DICAS","text":""},{"location":"aulas/ctp/bd/index.html#tratamento-de-excecoes-e-fechar-conexoes","title":"Tratamento de exce\u00e7\u00f5es e fechar conex\u00f5es","text":"<p>Ao realizar essas opera\u00e7\u00f5es, \u00e9 crucial gerenciar exce\u00e7\u00f5es e fechar conex\u00f5es para manter a integridade e a seguran\u00e7a do banco de dados.</p>"},{"location":"aulas/ctp/bd/index.html#parametrizacao-das-consultas","title":"Parametriza\u00e7\u00e3o das Consultas","text":"<p>Parametriza\u00e7\u00e3o \u00e9 uma pr\u00e1tica importante para prevenir ataques de inje\u00e7\u00e3o de SQL (<code>SQL Injection</code>). A parametriza\u00e7\u00e3o assegura que os comandos enviados ao banco de dados s\u00e3o interpretados como dados, e n\u00e3o como c\u00f3digo execut\u00e1vel. Isso n\u00e3o s\u00f3 aumenta a seguran\u00e7a da aplica\u00e7\u00e3o, evitando que agentes maliciosos executem opera\u00e7\u00f5es indesejadas no banco de dados, como tamb\u00e9m ajuda a manter a integridade dos dados.</p> <p>Al\u00e9m de outros beneficios como:</p> <p><code>Melhora a Performance</code>: Muitos SGBDs otimizam o desempenho de consultas parametrizadas ao preparar o SQL uma vez e execut\u00e1-lo m\u00faltiplas vezes com diferentes par\u00e2metros.</p> <p><code>Aumenta a Portabilidade do C\u00f3digo</code>: Consultas parametrizadas ajudam a garantir que o c\u00f3digo funcione de maneira consistente em diferentes sistemas de banco de dados.</p>"},{"location":"aulas/ctp/bd/index.html#desafios","title":"Desafios","text":"<p>1) Fa\u00e7a a conex\u00e3o com o seu banco de dados e pra as opera\u00e7\u00f5es de CRUD. Crie uma nova tabela e popule com dados aleat\u00f3rios para pr\u00e1ticar. </p> <p>2) Otime o uso para aplica\u00e7\u00f5es mais gen\u00e9ricas, para isso crie um modulo python <code>bd.py</code> separando apenas as fun\u00e7\u00f5es de relacionadas ao banco de dados. Crie um c\u00f3digo principal <code>main.py</code> com um menu interativo de navaga\u00e7\u00e3o com as op\u00e7\u00f5es de CRUD e que importa bd.py.</p>"},{"location":"aulas/ctp/bd/sqlalq.html","title":"SQLAlchemy","text":"In\u00a0[\u00a0]: Copied! <pre># Instala\u00e7\u00e3o dos pacotes necess\u00e1rios\n!pip install sqlalchemy oracledb\n</pre> # Instala\u00e7\u00e3o dos pacotes necess\u00e1rios !pip install sqlalchemy oracledb In\u00a0[\u00a0]: Copied! <pre># Verifica\u00e7\u00e3o da vers\u00e3o dos pacotes instalados\nimport sqlalchemy\nimport oracledb\nprint(sqlalchemy.__version__)\nprint(oracledb.version)\n</pre> # Verifica\u00e7\u00e3o da vers\u00e3o dos pacotes instalados import sqlalchemy import oracledb print(sqlalchemy.__version__) print(oracledb.version) In\u00a0[9]: Copied! <pre># Importa\u00e7\u00e3o das nossas credenciais\nimport json\n\nwith open(\"credenciais.json\") as f:\n    credenciais = json.load(f)\n\nUSER = credenciais[\"user\"]\nPASS = credenciais[\"pass\"]\n\nHOST = \"oracle.fiap.com.br\"\nPORT = 1521\nSID = \"ORCL\"\n</pre> # Importa\u00e7\u00e3o das nossas credenciais import json  with open(\"credenciais.json\") as f:     credenciais = json.load(f)  USER = credenciais[\"user\"] PASS = credenciais[\"pass\"]  HOST = \"oracle.fiap.com.br\" PORT = 1521 SID = \"ORCL\"  In\u00a0[2]: Copied! <pre># Configura\u00e7\u00e3o da conex\u00e3o\nfrom sqlalchemy import create_engine\n\n# Substitua 'USER', 'PASS', 'HOST', 'PORT', e 'SID' pelos seus dados de conex\u00e3o\nconnection_string = f\"oracle+oracledb://{USER}:{PASS}@{HOST}:{PORT}/{SID}\"\n\n# Criar engine de conex\u00e3o\nengine = create_engine(connection_string)\n\n# Estabelecer conex\u00e3o\nconnection = engine.connect()\n</pre> # Configura\u00e7\u00e3o da conex\u00e3o from sqlalchemy import create_engine  # Substitua 'USER', 'PASS', 'HOST', 'PORT', e 'SID' pelos seus dados de conex\u00e3o connection_string = f\"oracle+oracledb://{USER}:{PASS}@{HOST}:{PORT}/{SID}\"  # Criar engine de conex\u00e3o engine = create_engine(connection_string)  # Estabelecer conex\u00e3o connection = engine.connect() In\u00a0[3]: Copied! <pre># Podemos fazer as consultas diretamente em SQL\n# O uso do text() informa ao SQLAlchemy que a string deve ser tratada como uma instru\u00e7\u00e3o SQL textual.\n\nfrom sqlalchemy import text\n\n# Executar uma consulta e imprimir o resultado\nresult = connection.execute(text(\"SELECT * FROM PETSHOP\"))\nfor row in result:\n    print(row)\n\n# Fechar conex\u00e3o\nconnection.close()\n</pre> # Podemos fazer as consultas diretamente em SQL # O uso do text() informa ao SQLAlchemy que a string deve ser tratada como uma instru\u00e7\u00e3o SQL textual.  from sqlalchemy import text  # Executar uma consulta e imprimir o resultado result = connection.execute(text(\"SELECT * FROM PETSHOP\")) for row in result:     print(row)  # Fechar conex\u00e3o connection.close() <pre>(63, 'Cachorro', 'Rex', 5)\n(64, 'Cachorro', 'toto', 15)\n(44, 'tigre', 'bengala', 12)\n(62, 'Cachorro', 'Rex', 5)\n(33, 'elefante', 'jurandir', 6)\n(34, 'elefante', 'jurandir', 2000)\n(35, 'elefante', 'jurandir', 2000)\n(36, 'elefante', 'jurandir', 2000)\n(37, 'elefante', 'jurandir', 2000)\n(38, 'elefante', 'jurandir', 2000)\n(39, 'leao', 'pedroca', 20)\n(40, 'leao', 'pedroca', 20)\n(41, 'leao', 'pedroca', 20)\n(42, 'leao', 'pedroca', 20)\n(43, 'leao', 'pedroca', 20)\n(5, 'cachoro', 'pituca', 3)\n(6, 'cachoro', 'pituca', 3)\n(7, 'cachoro', 'pituca', 3)\n(8, 'cachoro', 'pituca', 3)\n</pre> In\u00a0[\u00a0]: Copied! <pre># Definindo o Modelo de Dados\n# Primeiro, voc\u00ea define uma classe que mapeia para a tabela petshop no banco de dados. \n# Aten\u00e7\u00e3o: Cada atributo da classe corresponder\u00e1 a uma coluna na tabela.\n\nfrom sqlalchemy import create_engine, Column, Integer, String\nfrom sqlalchemy.orm import declarative_base\n\n\n# Base para os modelos de dados\nBase = declarative_base()\n\n# Defini\u00e7\u00e3o do modelo para a tabela petshop\nclass Petshop(Base):\n    __tablename__ = 'petshop'\n    id = Column(Integer, primary_key=True)\n    tipo_pet = Column(String(30))\n    nome_pet = Column(String(30))\n    idade = Column(Integer)\n</pre> # Definindo o Modelo de Dados # Primeiro, voc\u00ea define uma classe que mapeia para a tabela petshop no banco de dados.  # Aten\u00e7\u00e3o: Cada atributo da classe corresponder\u00e1 a uma coluna na tabela.  from sqlalchemy import create_engine, Column, Integer, String from sqlalchemy.orm import declarative_base   # Base para os modelos de dados Base = declarative_base()  # Defini\u00e7\u00e3o do modelo para a tabela petshop class Petshop(Base):     __tablename__ = 'petshop'     id = Column(Integer, primary_key=True)     tipo_pet = Column(String(30))     nome_pet = Column(String(30))     idade = Column(Integer) <ul> <li><code>Base</code>: \u00c9 uma classe base do SQLAlchemy de onde todos os modelos herdam, usada para definir a estrutura do banco de dados em termos de objetos Python.</li> <li><code>__tablename__</code> define o nome da tabela no banco de dados.</li> <li><code>Column</code> define uma coluna na tabela. O primeiro argumento \u00e9 o tipo de dado da coluna, e os argumentos nomeados s\u00e3o configura\u00e7\u00f5es adicionais como <code>primary_key</code>.</li> </ul> <ul> <li><code>Session</code>: Usado para criar uma inst\u00e2ncia de sess\u00e3o que permite voc\u00ea fazer queries e outras transa\u00e7\u00f5es no banco de dados.</li> </ul> In\u00a0[\u00a0]: Copied! <pre>from sqlalchemy.orm import sessionmaker\nfrom sqlalchemy import create_engine\n\n# Configura\u00e7\u00e3o da conex\u00e3o\n# Substitua 'USER', 'PASS', 'HOST', 'PORT', e 'SID' pelos seus dados de conex\u00e3o\nconnection_string = f\"oracle+oracledb://{USER}:{PASS}@{HOST}:{PORT}/{SID}\"\n\n# Criar engine de conex\u00e3o\nengine = create_engine(connection_string)\n\n# sessionmaker \u00e9 uma f\u00e1brica de sess\u00f5es, que \u00e9 usada para criar sess\u00f5es de banco de dados\nSession = sessionmaker(bind=engine)\n\n# Criar uma sess\u00e3o\nsession = Session()\n\n# Consultar dados\npets = session.query(Petshop).all()  # Obt\u00e9m todos os registros da tabela PETSHOP\n\nfor pet in pets:\n    print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")  # Acessar os atributos da cada pet\n\n# Fechar sess\u00e3o\nsession.close()\n</pre> from sqlalchemy.orm import sessionmaker from sqlalchemy import create_engine  # Configura\u00e7\u00e3o da conex\u00e3o # Substitua 'USER', 'PASS', 'HOST', 'PORT', e 'SID' pelos seus dados de conex\u00e3o connection_string = f\"oracle+oracledb://{USER}:{PASS}@{HOST}:{PORT}/{SID}\"  # Criar engine de conex\u00e3o engine = create_engine(connection_string)  # sessionmaker \u00e9 uma f\u00e1brica de sess\u00f5es, que \u00e9 usada para criar sess\u00f5es de banco de dados Session = sessionmaker(bind=engine)  # Criar uma sess\u00e3o session = Session()  # Consultar dados pets = session.query(Petshop).all()  # Obt\u00e9m todos os registros da tabela PETSHOP  for pet in pets:     print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")  # Acessar os atributos da cada pet  # Fechar sess\u00e3o session.close() In\u00a0[\u00a0]: Copied! <pre># CREATE: Adicionar um novo pet\n\n# Create: Um novo objeto Petshop \u00e9 criado e adicionado \u00e0 sess\u00e3o com session.add(), \n# e ent\u00e3o as mudan\u00e7as s\u00e3o salvas no banco de dados com session.commit()`.\n\nnovo_pet = Petshop(tipo_pet='Cachorro', nome_pet='toto', idade=15)\nsession.add(novo_pet)\nsession.commit()\n</pre> # CREATE: Adicionar um novo pet  # Create: Um novo objeto Petshop \u00e9 criado e adicionado \u00e0 sess\u00e3o com session.add(),  # e ent\u00e3o as mudan\u00e7as s\u00e3o salvas no banco de dados com session.commit()`.  novo_pet = Petshop(tipo_pet='Cachorro', nome_pet='toto', idade=15) session.add(novo_pet) session.commit() In\u00a0[\u00a0]: Copied! <pre># READ: Consultar dados\npets = session.query(Petshop).all()\nfor pet in pets:\n    print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")\n</pre> # READ: Consultar dados pets = session.query(Petshop).all() for pet in pets:     print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\") In\u00a0[\u00a0]: Copied! <pre># UPDATE: Atualizar dados de um pet existente\n\n# Update: Encontra um registro espec\u00edfico (neste caso, pelo nome), \n# altera um atributo e salva a altera\u00e7\u00e3o no banco de dados.\n\npet_a_atualizar = session.query(Petshop).filter(Petshop.nome_pet == 'jurandir').first()\n\nif pet_a_atualizar:\n    pet_a_atualizar.idade = 6\n    session.commit()\n</pre> # UPDATE: Atualizar dados de um pet existente  # Update: Encontra um registro espec\u00edfico (neste caso, pelo nome),  # altera um atributo e salva a altera\u00e7\u00e3o no banco de dados.  pet_a_atualizar = session.query(Petshop).filter(Petshop.nome_pet == 'jurandir').first()  if pet_a_atualizar:     pet_a_atualizar.idade = 6     session.commit() In\u00a0[\u00a0]: Copied! <pre># DELETE: Deletar um pet\n\n# Delete: Encontra um registro espec\u00edfico (neste caso, pelo nome),\n# e o remove do banco de dados.\n\npet_a_deletar = session.query(Petshop).filter(Petshop.nome_pet == 'loro jose').first()\n\nif pet_a_deletar:\n    session.delete(pet_a_deletar)\n    session.commit()\n</pre> # DELETE: Deletar um pet  # Delete: Encontra um registro espec\u00edfico (neste caso, pelo nome), # e o remove do banco de dados.  pet_a_deletar = session.query(Petshop).filter(Petshop.nome_pet == 'loro jose').first()  if pet_a_deletar:     session.delete(pet_a_deletar)     session.commit() In\u00a0[\u00a0]: Copied! <pre># Fechar sess\u00e3o\n\n# O m\u00e9todo `session.close()` encerra a conex\u00e3o com o banco de dados e libera recursos.\n\nsession.close()\n</pre> # Fechar sess\u00e3o  # O m\u00e9todo `session.close()` encerra a conex\u00e3o com o banco de dados e libera recursos.  session.close() <p>Dica Quando usar o session.close()</p> <p>\u00c9 uma boa pr\u00e1tica fechar a sess\u00e3o quando voc\u00ea termina todas as opera\u00e7\u00f5es que planeja executar nessa sess\u00e3o espec\u00edfica.</p> <ul> <li><p><code>Ap\u00f3s uma s\u00e9rie de opera\u00e7\u00f5es</code>: Se voc\u00ea est\u00e1 executando uma s\u00e9rie de opera\u00e7\u00f5es CRUD (criar, ler, atualizar, deletar) e elas s\u00e3o todas parte de um \u00fanico bloco l\u00f3gico de trabalho, \u00e9 adequado fechar a sess\u00e3o ap\u00f3s essas opera\u00e7\u00f5es estarem completas.</p> </li> <li><p><code>Em scripts ou fun\u00e7\u00f5es aut\u00f4nomas</code>: Se o seu c\u00f3digo est\u00e1 estruturado de forma que as opera\u00e7\u00f5es de banco de dados est\u00e3o contidas em uma fun\u00e7\u00e3o ou script que \u00e9 executado e depois termina, voc\u00ea deve fechar a sess\u00e3o ao final dessas opera\u00e7\u00f5es.</p> </li> <li><p><code>Antes de lan\u00e7ar exce\u00e7\u00f5es</code>: Se voc\u00ea detectar erros e planeja lan\u00e7ar uma exce\u00e7\u00e3o que pode terminar o script ou mudar o fluxo do programa, \u00e9 uma boa pr\u00e1tica fechar a sess\u00e3o antes de lan\u00e7ar a exce\u00e7\u00e3o para garantir que os recursos sejam liberados corretamente.</p> </li> </ul> In\u00a0[\u00a0]: Copied! <pre>#### lembre de criar a sess\u00e3o novamente para poder fazer a consulta\n\n# Selecionar todos os registros da tabela Petshop\ntodos_pets = session.query(Petshop).all()\n\nfor pet in todos_pets:\n    print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")\n</pre> #### lembre de criar a sess\u00e3o novamente para poder fazer a consulta  # Selecionar todos os registros da tabela Petshop todos_pets = session.query(Petshop).all()  for pet in todos_pets:     print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")  In\u00a0[\u00a0]: Copied! <pre># Selecionar todos os pets que s\u00e3o cachorros\ncachorros = session.query(Petshop).filter(Petshop.tipo_pet == 'cachoro').all()\nfor cachorro in cachorros:\n    print(f\"{cachorro.nome_pet}, {cachorro.idade} anos\")\n</pre> # Selecionar todos os pets que s\u00e3o cachorros cachorros = session.query(Petshop).filter(Petshop.tipo_pet == 'cachoro').all() for cachorro in cachorros:     print(f\"{cachorro.nome_pet}, {cachorro.idade} anos\")  In\u00a0[\u00a0]: Copied! <pre># Ordenar pets por idade\npets_ordenados = session.query(Petshop).order_by(Petshop.idade).all()\nfor pet in pets_ordenados:\n    print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")\n</pre> # Ordenar pets por idade pets_ordenados = session.query(Petshop).order_by(Petshop.idade).all() for pet in pets_ordenados:     print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")  In\u00a0[\u00a0]: Copied! <pre># Selecionar os tr\u00eas primeiros pets\nprimeiros_tres_pets = session.query(Petshop).limit(3).all()\nfor pet in primeiros_tres_pets:\n    print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")\n</pre> # Selecionar os tr\u00eas primeiros pets primeiros_tres_pets = session.query(Petshop).limit(3).all() for pet in primeiros_tres_pets:     print(f\"{pet.nome_pet}, {pet.tipo_pet}, {pet.idade} anos\")  In\u00a0[\u00a0]: Copied! <pre># Contar quantos cachorros existem na tabela\nquantidade_cachorros = session.query(Petshop).filter(Petshop.tipo_pet == 'leao').count()\nprint(f\"Quantidade de leao: {quantidade_cachorros}\")\n</pre> # Contar quantos cachorros existem na tabela quantidade_cachorros = session.query(Petshop).filter(Petshop.tipo_pet == 'leao').count() print(f\"Quantidade de leao: {quantidade_cachorros}\")  In\u00a0[\u00a0]: Copied! <pre># alternativa com filter_by(), \u00e9 mais simples mas menos flex\u00edvel\n\nquantidade = session.query(Petshop).filter_by(tipo_pet='leao').all()\nprint(f\"Quantidade de leao: {len(quantidade)}\")\n</pre> # alternativa com filter_by(), \u00e9 mais simples mas menos flex\u00edvel  quantidade = session.query(Petshop).filter_by(tipo_pet='leao').all() print(f\"Quantidade de leao: {len(quantidade)}\") In\u00a0[\u00a0]: Copied! <pre># Selecionar apenas o nome e idade dos pets\nnomes_idades = session.query(Petshop.nome_pet, Petshop.idade).all()\nfor nome, idade in nomes_idades:\n    print(f\"{nome}, {idade} anos\")\n</pre> # Selecionar apenas o nome e idade dos pets nomes_idades = session.query(Petshop.nome_pet, Petshop.idade).all() for nome, idade in nomes_idades:     print(f\"{nome}, {idade} anos\")  In\u00a0[40]: Copied! <pre>from sqlalchemy import Sequence, Column, Integer, String, Float\nfrom sqlalchemy.orm import declarative_base\nfrom sqlalchemy.orm import sessionmaker\n\n# Base para os modelos de dados\nBase = declarative_base()\n\n# Defini\u00e7\u00e3o do modelo para a tabela clientes\nclass Cliente(Base):\n    __tablename__ = 'clientes'\n    id = Column(Integer, Sequence('cliente_id_seq'), primary_key=True)\n    nome = Column(String(100), nullable=False)\n    email = Column(String(100), unique=True, nullable=False)\n    saldo = Column(Float, default=0.0)\n\n# FAZER A CONEX\u00c3O COM O BANCO DE DADOS\n\n# ....\n# ....\n# ....\n</pre> from sqlalchemy import Sequence, Column, Integer, String, Float from sqlalchemy.orm import declarative_base from sqlalchemy.orm import sessionmaker  # Base para os modelos de dados Base = declarative_base()  # Defini\u00e7\u00e3o do modelo para a tabela clientes class Cliente(Base):     __tablename__ = 'clientes'     id = Column(Integer, Sequence('cliente_id_seq'), primary_key=True)     nome = Column(String(100), nullable=False)     email = Column(String(100), unique=True, nullable=False)     saldo = Column(Float, default=0.0)  # FAZER A CONEX\u00c3O COM O BANCO DE DADOS  # .... # .... # .... In\u00a0[41]: Copied! <pre># Criar todas as tabelas definidas\nBase.metadata.create_all(engine)\n\nprint(\"Tabela criada com sucesso!\")\n\n#### dica extra: como recriar a tabela\n# Para recriar a tabela, garanta que ela seja primeiro exclu\u00edda\n# Cliente.__table__.drop(engine, checkfirst=True)  # Exclui a tabela se ela existir\n# Base.metadata.create_all(engine)                # Cria a tabela\n</pre> # Criar todas as tabelas definidas Base.metadata.create_all(engine)  print(\"Tabela criada com sucesso!\")  #### dica extra: como recriar a tabela # Para recriar a tabela, garanta que ela seja primeiro exclu\u00edda # Cliente.__table__.drop(engine, checkfirst=True)  # Exclui a tabela se ela existir # Base.metadata.create_all(engine)                # Cria a tabela  <pre>Tabela criada com sucesso!\n</pre> In\u00a0[44]: Copied! <pre># Criar uma sess\u00e3o\nSession = sessionmaker(bind=engine)\nsession = Session()\n\n# Adicionar um novo cliente\nnovo_cliente = Cliente(nome='gabi',\n                       email='gabi@email.com',\n                       saldo=100.0)\nsession.add(novo_cliente)\nsession.commit()\n\n# Consultar todos os clientes\nclientes = session.query(Cliente).all()\nfor cliente in clientes:\n    print(f\"{cliente.nome}, {cliente.email}, R$ {cliente.saldo:.2f}\")\n    \n# Fechar sess\u00e3o\nsession.close()\n</pre> # Criar uma sess\u00e3o Session = sessionmaker(bind=engine) session = Session()  # Adicionar um novo cliente novo_cliente = Cliente(nome='gabi',                        email='gabi@email.com',                        saldo=100.0) session.add(novo_cliente) session.commit()  # Consultar todos os clientes clientes = session.query(Cliente).all() for cliente in clientes:     print(f\"{cliente.nome}, {cliente.email}, R$ {cliente.saldo:.2f}\")      # Fechar sess\u00e3o session.close() <pre>Jo\u00e3o Silva, eid@emple.com, R$ 100.00\ngabi, gabi@email.com, R$ 100.00\nArnaldo, arnaldo@email.com, R$ 100.00\njoaquinzinho, jojo@email.com, R$ 100.00\n</pre>"},{"location":"aulas/ctp/bd/sqlalq.html#sqlalchemy","title":"SQLAlchemy\u00b6","text":"<p>Trata-se de uma biblioteca SQL e ORM (Object Relational Mapper) para Python que permite aos desenvolvedores interagir com bancos de dados de uma maneira mais abstrata e orientada a objetos.</p> <p>Ela suporta uma variedade de sistemas de banco de dados e facilita o mapeamento entre classes Python e tabelas de banco de dados, al\u00e9m de proporcionar uma maneira de construir consultas SQL de forma program\u00e1tica e segura.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#usando-o-sqlalchemy","title":"Usando o SQLAlchemy\u00b6","text":"<p>\u00c9 simples e vamos basicamente seguir os seguintes passos:</p> <ol> <li><code>Instala\u00e7\u00e3o dos pacotes necess\u00e1rios</code>: Instala\u00e7\u00e3o do SQLAlchemy.</li> <li><code>Configura\u00e7\u00e3o da conex\u00e3o</code>: Configurar a string de conex\u00e3o para acessar o banco de dados ( vamos utilizar o Oracle, mas pode ser qualquer banco).</li> <li><code>Estabelecer a conex\u00e3o</code>: estabelecer a conex\u00e3o com o banco de dados da nossa prefer\u00eancia.</li> <li><code>Executar consultas</code>: executar consultas SQL usando a conex\u00e3o estabelecida.</li> <li><code>Fechamento da conex\u00e3o</code>: fechar a conex\u00e3o de maneira segura ao final das opera\u00e7\u00f5es.</li> </ol>"},{"location":"aulas/ctp/bd/sqlalq.html#nossa-tabela-de-exemplo","title":"Nossa tabela de exemplo\u00b6","text":"<p>J\u00e1 temos uma tabela criada em nosso banco de dados chamada <code>PETSHOP</code>:</p> <pre>table: petshop\nschema:\n    id  -- PK number\n    tipo_pet -- varchar 30\n    nome_pet -- varchar 30\n    idade -- number int\n</pre> <p>Tenha certeza de que a tabela existe.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#orm-object-relational-mapping","title":"ORM (Object-Relational Mapping)\u00b6","text":"<p>Podemos consultar dados de um banco de dados Oracle usando SQLAlchemy sem escrever diretamente as consultas SQL, utilizando a abordagem de ORM (Object-Relational Mapping) que o SQLAlchemy fornece.</p> <p>Isso permite que voc\u00ea interaja com o banco de dados usando objetos Python, o que pode ser mais intuitivo e seguro contra inje\u00e7\u00f5es SQL.</p> <p>Vamos entender como utilizar essa abordagem:</p> <ol> <li><p><code>Definir modelos de dados</code>: Primeiro, voc\u00ea define <code>classes Python</code> que mapeiam para as tabelas do banco de dados. Cada classe corresponder\u00e1 a uma tabela, e cada inst\u00e2ncia da classe a uma linha na tabela.</p> </li> <li><p><code>Criar uma sess\u00e3o</code>: A sess\u00e3o no SQLAlchemy permite agrupar v\u00e1rias opera\u00e7\u00f5es em uma \u00fanica transa\u00e7\u00e3o.</p> </li> <li><p><code>Consultar dados usando a sess\u00e3o</code>: Voc\u00ea pode usar m\u00e9todos como query() para buscar dados, filtrar resultados, ordenar, etc., tudo sem escrever SQL explicitamente.</p> </li> </ol>"},{"location":"aulas/ctp/bd/sqlalq.html#operacoes-crud-com-sqlalchemy","title":"Opera\u00e7\u00f5es CRUD com SQLAlchemy\u00b6","text":"<p>Vamos incluir opera\u00e7\u00f5es b\u00e1sicas de CRUD (Create, Read, Update, Delete) usando SQLAlchemy.</p> <p>Isso permitir\u00e1 que voc\u00ea manipule dados na tabela petshop de v\u00e1rias maneiras. :)</p>"},{"location":"aulas/ctp/bd/sqlalq.html#basico-da-sessionquery","title":"B\u00e1sico da <code>session.query()</code>\u00b6","text":"<p>Nos exemplos acima realiamos alguma 'query', vamos entender e explorar mais algumas possiblidades:</p> <p>'session.query()' \u00e9 usado para criar um objeto de consulta que permite selecionar dados de uma ou mais tabelas. Vamos come\u00e7ar com alguns exemplos b\u00e1sicos e ent\u00e3o explorar algumas funcionalidades mais avan\u00e7adas.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#selecionar-todos-os-registros","title":"Selecionar Todos os Registros\u00b6","text":"<p>Este \u00e9 o exemplo mais simples, onde selecionamos todos os registros de uma tabela.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#filtrar-registros","title":"Filtrar Registros\u00b6","text":"<p>Voc\u00ea pode usar o m\u00e9todo <code>filter()</code> para especificar condi\u00e7\u00f5es que os registros devem satisfazer para serem inclu\u00eddos no resultado.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#ordenar-resultados","title":"Ordenar Resultados\u00b6","text":"<p>Use o m\u00e9todo <code>order_by()</code> para ordenar os resultados da consulta.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#limitar-resultados","title":"Limitar Resultados\u00b6","text":"<p>Para limitar o n\u00famero de resultados retornados, use o m\u00e9todo <code>limit()</code>.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#contar-registros","title":"Contar Registros\u00b6","text":"<p>Para contar o n\u00famero de registros que atendem a uma condi\u00e7\u00e3o, use o m\u00e9todo <code>count()</code>.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#selecionar-colunas-especificas","title":"Selecionar Colunas Espec\u00edficas\u00b6","text":"<p>Se voc\u00ea quiser selecionar apenas algumas colunas espec\u00edficas em vez de objetos completos, voc\u00ea pode especificar isso na chamada do <code>query()</code>.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#criando-uma-nova-tabela-no-banco-de-dados","title":"Criando uma nova tabela no banco de dados\u00b6","text":"<p>Para criar uma nova tabela em um banco de dados usando SQLAlchemy, vamos definir a estrutura da tabela em forma de uma <code>classe Python</code>, utilizando a base declarativa do SQLAlchemy. Depois, voc\u00ea pode usar esta defini\u00e7\u00e3o para efetivamente criar a tabela no banco de dados.</p> <ul> <li>Passo 1: Definir a Classe da Tabela</li> <li>Passo 2: Criar a Tabela no Banco de Dados</li> <li>Passo 3: Usar a nova Tabela :)</li> </ul>"},{"location":"aulas/ctp/bd/sqlalq.html#nossa-nova-tabela-de-exemplo","title":"Nossa nova tabela de exemplo\u00b6","text":"<p>Vamos criar em nosso banco de dados uma tabela chamada <code>Clientes</code>:</p> <pre>table: Clientes\nschema:\n    id  -- PK number\n    nome -- varchar 100\n    email -- varchar 100\n    saldo -- number float\n</pre>"},{"location":"aulas/ctp/bd/sqlalq.html#passo-1-definir-a-classe-da-tabela","title":"Passo 1: Definir a Classe da Tabela\u00b6","text":"<p>Primeiramente, definimos a classe que mapeia para a tabela no banco de dados. Essa classe herda de Base, que \u00e9 uma inst\u00e2ncia criada pela fun\u00e7\u00e3o <code>declarative_base()</code> do SQLAlchemy.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#passo-2-criar-a-tabela-no-banco-de-dados","title":"Passo 2: Criar a Tabela no Banco de Dados\u00b6","text":"<p>Depois de definir a classe e configurar a conex\u00e3o com banco, voc\u00ea pode criar a tabela no banco de dados chamando o m\u00e9todo <code>create_all()</code> do objeto Base, passando a engine como argumento.</p> <p>Este m\u00e9todo ir\u00e1 verificar todas as classes que herdam de Base e criar as tabelas no banco de dados conforme necess\u00e1rio, se ela ainda n\u00e3o existir. Se a tabela j\u00e1 existir e voc\u00ea tiver modificado sua defini\u00e7\u00e3o, voc\u00ea precisar\u00e1 atualizar a tabela manualmente ou recri\u00e1-la.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#passo-3-usar-a-nova-tabela","title":"Passo 3: Usar a nova tabela\u00b6","text":"<p>Podemos usar nossa nova tabela <code>cliente</code> usando o que j\u00e1 aprendemos nesta aula.</p>"},{"location":"aulas/ctp/bd/sqlalq.html#desafio","title":"Desafio\u00b6","text":"<p>Vamos aprimorar nossas habilidades com um projeto pr\u00e1tico.</p> <p>Objetivo: Desenvolver um sistema simples de gerenciamento de tarefas, denominado \"To-Do List\", que permita ao usu\u00e1rio adicionar, remover, consultar e editar tarefas.</p> <p>Requisitos do Sistema:</p> <ul> <li><code>Classifica\u00e7\u00f5es de Tarefas</code>: Cada tarefa pode ser categorizada como 'Para Fazer', 'Fazendo' ou 'Feito'.</li> <li><code>Atributos das Tarefas</code>: Al\u00e9m do status, cada tarefa deve conter atributos como data de cria\u00e7\u00e3o, respons\u00e1vel pela tarefa, e outros que voc\u00ea considerar relevante para o sistema.</li> <li><code>Persist\u00eancia de Dados</code>: Utilize um banco de dados \u00e0 sua escolha, sugiro Oracle ou SQLite.</li> <li><code>ORM</code>: O sistema deve utilizar o ORM SQLAlchemy para intera\u00e7\u00e3o com o banco de dados.</li> </ul> <p>Boa sorte!</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html","title":"Cria\u00e7\u00e3o de um Ambiente Virtual","text":""},{"location":"aulas/ctp/environment-setup/virtual-environment.html#configurando-seu-ambiente-de-desenvolvimento","title":"Configurando seu Ambiente de desenvolvimento","text":""},{"location":"aulas/ctp/environment-setup/virtual-environment.html#o-que-e-um-ambiente-virtual-e-por-que-e-importante","title":"O que \u00e9 um ambiente virtual e por que \u00e9 importante?","text":"<p>Um ambiente virtual em Python \u00e9 um ambiente isolado que permite instalar e gerenciar pacotes de forma independente para diferentes projetos. Isso \u00e9 importante porque ajuda a evitar conflitos entre as vers\u00f5es dos pacotes e garante que cada projeto tenha suas pr\u00f3prias depend\u00eancias, sem afetar outros projetos ou o sistema operacional como um todo.</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#como-criar-um-ambiente-virtual-usando-venv","title":"Como criar um ambiente virtual usando venv","text":"<p>Neste exemplo vamos imaginar a seguinte estrutura de pastas do nosso projeto:</p> <p><pre><code>meu_projeto/\n\u2502   app.py\n\u2502   requirements.txt\n\u2514\u2500\u2500\u2500data/\n\u2514\u2500\u2500\u2500templates/\n</code></pre> Nessa estrutura, <code>app.py</code> \u00e9 o arquivo principal do projeto, <code>requirements.txt</code> lista todas as depend\u00eancias do projeto, <code>data/</code> pode conter arquivos de dados, e <code>templates/</code> pode armazenar templates HTML para um projeto web...</p> <p><code>Para criar um ambiente virtual</code>, voc\u00ea pode usar o m\u00f3dulo <code>venv</code> que vem integrado com Python 3. </p> <p>Aqui est\u00e3o os passos para criar e ativar um ambiente virtual:</p> <p>Warning</p> <ul> <li>Se estiver utilizando o <code>Windowns</code> da faculdade, execute o <code>Windowns PowerShell</code> e digite o comando a seguir para ajustar as permiss\u00f5es de acesso:</li> </ul> <pre><code>Set-ExecutionPolicy -ExecutionPolicy RemoteSigned -Scope CurrentUser\n</code></pre> <ul> <li> <p>Abra um terminal ou prompt de comando.</p> <ul> <li>Certifique-se que est\u00e1 dentro da pasta do projeto, neste caso <code>meu_projeto</code>. Caso contrario, navegue at\u00e9 o diret\u00f3rio do projeto para criar o ambiente virtual.</li> </ul> </li> <li> <p>Execute o seguinte comando para criar um ambiente virtual chamado <code>meu_ambiente</code> (voc\u00ea pode escolher o nome que preferir):</p> <pre><code>python -m venv meu_ambiente\n</code></pre> </li> </ul> <p>Tip</p> <p>Geralmente usamos python -m venv venv para facilitar.</p> <p>Isso criar\u00e1 um diret\u00f3rio chamado <code>meu_ambiente</code> contendo os arquivos necess\u00e1rios para o ambiente virtual.</p> <p>A estrutura de pastas ser\u00e1 parecida com essa:</p> <pre><code>meu_projeto/\n\u2502   app.py\n\u2502   requirements.txt\n\u2514\u2500\u2500\u2500meu_ambiente/       # Ambiente virtual\n\u2502   \u2502   \u2514\u2500\u2500\u2500bin/\n\u2502   \u2502   \u2514\u2500\u2500\u2500include/\n\u2502   \u2502   \u2514\u2500\u2500\u2500lib/\n\u2502   \u2502   \u2514\u2500\u2500\u2500Scripts/    # Scripts de ativa\u00e7\u00e3o do ambiente (Windows)\n\u2502   \u2514\u2500\u2500\u2500data/\n\u2514\u2500\u2500\u2500templates/\n</code></pre>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#como-ativar-o-ambiente-virtual","title":"Como ativar o ambiente virtual","text":"<p>Dependendo do seu sistema operacional, o comando para ativar o ambiente virtual varia:</p> <ul> <li> <p>Windows:</p> <pre><code>.\\meu_ambiente\\Scripts\\activate\n</code></pre> </li> <li> <p>macOS e Linux:</p> <pre><code>source meu_ambiente/bin/activate\n</code></pre> </li> </ul> <p>Quando o ambiente virtual estiver <code>ativado</code>, voc\u00ea ver\u00e1 o nome do ambiente entre par\u00eanteses no in\u00edcio da linha de comando, indicando que qualquer pacote Python que voc\u00ea instalar ser\u00e1 instalado nesse ambiente isolado.</p> <pre><code>(meu_ambiente) \u279c \n</code></pre>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#como-desativar-o-ambiente-virtual","title":"Como desativar o ambiente virtual","text":"<p>Para sair do ambiente virtual e voltar ao ambiente global, basta digitar o comando <code>deactivate</code> no terminal:</p> <pre><code>deactivate\n</code></pre> <p>Isso retornar\u00e1 ao ambiente padr\u00e3o do sistema.</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#instalacao-de-pacotes-no-ambiente-virtual","title":"Instala\u00e7\u00e3o de pacotes no ambiente virtual","text":"<p>Com o ambiente virtual ativado, voc\u00ea pode instalar pacotes usando o <code>pip</code>, que \u00e9 o gerenciador de pacotes do Python. Por exemplo, para instalar o pacote <code>requests</code>, voc\u00ea usaria o seguinte comando:</p> <pre><code>pip install requests\n</code></pre> <p>Os pacotes instalados no ambiente virtual estar\u00e3o dispon\u00edveis apenas quando o ambiente estiver ativado.</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#o-arquivo-requirementstxt","title":"O arquivo <code>requirements.txt</code>","text":"<p>O <code>requirements.txt</code> \u00e9 um arquivo que lista todas as depend\u00eancias externas necess\u00e1rias para o seu projeto. Cada linha neste arquivo especifica um pacote e, opcionalmente, uma vers\u00e3o espec\u00edfica. </p> <p>Por exemplo:</p> <pre><code>matplotlib\nnumpy\nopencv-python\nflask==2.0.1\nrequests==2.25.1\nbeautifulsoup4==4.9.3\n</code></pre> <p>Quando algu\u00e9m clona seu reposit\u00f3rio ou deseja configurar o ambiente de desenvolvimento, pode instalar todas as depend\u00eancias listadas no requirements.txt executando o seguinte comando:</p> <pre><code>pip install -r requirements.txt\n</code></pre> <p>Isso <code>garante</code> que todos tenham as mesmas vers\u00f5es dos pacotes instalados, tornando o desenvolvimento e a implanta\u00e7\u00e3o mais consistentes.</p> <p>Quando voc\u00ea usa um ambiente virtual <code>(meu_ambiente)</code>, o <code>requirements.txt</code> ainda desempenha o mesmo papel. No entanto, ao instalar as depend\u00eancias listadas no arquivo, voc\u00ea deve garantir que o <code>ambiente virtual esteja ativado</code>. Isso garantir\u00e1 que os pacotes sejam <code>instalados no ambiente isolado</code>, em vez de no ambiente global do sistema.</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#criando-o-arquivo-requirementstxt-para-o-seu-projeto","title":"Criando o arquivo requirements.txt para o seu projeto","text":"<p>Voc\u00ea deve seguir os seguintes passos para criar o arquivo de requirements.txt do seu projeto. </p> <ol> <li> <p><code>Ative o ambiente virtual</code></p> <p>Veja como na se\u00e7\u00e3o anterior. N\u00e3o fa\u00e7a os pr\u00f3ximos passos sem ativar seu ambiente virtual</p> </li> <li> <p>Instale as depend\u00eancias do projeto:</p> <p>Use o pip para instalar qualquer biblioteca que seu projeto necessite. Por exemplo:</p> <pre><code>pip install flask\npip install requests\npip install beautifulsoup4\n</code></pre> </li> <li> <p>Gere o arquivo requirements.txt:</p> <p>Ap\u00f3s instalar todas as depend\u00eancias necess\u00e1rias, voc\u00ea pode gerar o requirements.txt usando o seguinte comando:</p> <pre><code>pip freeze &gt; requirements.txt\n</code></pre> <p>Esse comando lista todas as bibliotecas instaladas no ambiente (virtual ou global) e suas vers\u00f5es, e redireciona a sa\u00edda para criar ou sobrescrever o arquivo requirements.txt.</p> </li> <li> <p>Verifique o conte\u00fado do arquivo:</p> <p>Voc\u00ea pode abrir o requirements.txt em um editor de texto para verificar se todas as depend\u00eancias e suas vers\u00f5es est\u00e3o listadas corretamente. O arquivo pode ter uma apar\u00eancia semelhante a esta:</p> <p><pre><code>Flask==2.0.1\nrequests==2.25.1\nbeautifulsoup4==4.9.3\n</code></pre> Pronto! arquivo criado e atualizado com sucesso!</p> </li> </ol>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#usando-o-arquivo-gitignore-em-seu-projeto","title":"Usando o arquivo <code>.gitignore</code> em seu projeto","text":"<p>O arquivo <code>.gitignore</code> \u00e9 usado em projetos que utilizam o sistema de controle de vers\u00e3o Git. Ele especifica quais arquivos ou diret\u00f3rios devem ser ignorados pelo Git, ou seja, n\u00e3o devem ser rastreados ou inclu\u00eddos no reposit\u00f3rio. </p> <p>\u00c9 uma boa pr\u00e1tica incluir um arquivo .gitignore em todos os seus projetos Git para evitar o commit acidental de arquivos desnecess\u00e1rios ou sens\u00edveis.</p>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#como-criar-e-configurar-um-arquivo-gitignore","title":"Como criar e configurar um arquivo .gitignore","text":"<ol> <li> <p>Crie o arquivo .gitignore:</p> <p>Na raiz do seu projeto, crie um arquivo chamado <code>.gitignore</code>. Voc\u00ea pode fazer isso usando um editor de texto ou pelo terminal:</p> <pre><code>touch .gitignore\n</code></pre> <p>Deve ficar parecico com o exemplo a seguir:</p> <pre><code>meu_projeto/\n\u2502   app.py\n\u2502   requirements.txt    # requirements \n\u2502   .gitignore          # gitignore\n\u2514\u2500\u2500\u2500meu_ambiente/       # Ambiente virtual\n\u2514\u2500\u2500\u2500data/\n\u2514\u2500\u2500\u2500templates/\n</code></pre> </li> <li> <p>Adicione regras ao arquivo:</p> <p>Abra o arquivo .gitignore em um editor de texto e adicione regras para especificar quais arquivos ou diret\u00f3rios devem ser ignorados. Por exemplo:</p> <pre><code># Ignorar todos os arquivos .log\n*.log\n\n# Ignorar o diret\u00f3rio de ambiente virtual\nmeu_ambiente/\nvenv/\n\n# Ignorar arquivos de configura\u00e7\u00e3o sens\u00edveis\nconfig.yaml\n\n# Ignorar arquivos tempor\u00e1rios\ntemp/\n</code></pre> <p>Cada linha do arquivo .gitignore representa uma regra. Os caracteres # s\u00e3o usados para coment\u00e1rios.</p> </li> <li> <p>Salve e feche o arquivo:</p> <p>Ap\u00f3s adicionar todas as regras necess\u00e1rias, salve e feche o arquivo .gitignore.</p> </li> <li> <p>Verifique o status do Git:</p> <p>No terminal, use o comando <code>git status</code> para verificar se os arquivos especificados est\u00e3o sendo devidamente ignorados pelo Git.</p> </li> </ol>"},{"location":"aulas/ctp/environment-setup/virtual-environment.html#pronto-agora-ja-esta-tudo-configurado-para-o-seu-projeto","title":"Pronto agora j\u00e1 est\u00e1 tudo configurado para o seu projeto.","text":""},{"location":"aulas/ctp/intro/infra.html","title":"Lab01 - Comece aqui!","text":""},{"location":"aulas/ctp/intro/infra.html#e-agora-por-onde-comecar","title":"E agora, por onde come\u00e7ar?","text":"<ul> <li>Perfil do estudante</li> <li>Instala\u00e7\u00e3o e configura\u00e7\u00e3o do Python 3.x</li> <li>Cria\u00e7\u00e3o da conta no github</li> <li>Instala\u00e7\u00e3o da IDE de programa\u00e7\u00e3o</li> <li>Valida\u00e7\u00e3o e testes de instala\u00e7\u00e3o da infraestrutura</li> </ul>"},{"location":"aulas/ctp/intro/infra.html#conhecendo-o-perfil-de-estudante","title":"Conhecendo o perfil de estudante","text":"<p>Para come\u00e7ar, eu quero conhecer um pouco o perfil da nossa turma. </p> <p>Exercise</p> <p>Responda o question\u00e1rio:</p> <ul> <li>https://forms.gle/UYZBeFRXjN81NxsK9</li> </ul> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/infra.html#instalacao-e-configuracao-do-python-3x","title":"Instala\u00e7\u00e3o e configura\u00e7\u00e3o do Python 3.x","text":"<p>Exercise</p> <ol> <li>Acesse o site oficial do Python em https://www.python.org/.</li> <li>Clique em \"Downloads\" e escolha a vers\u00e3o mais recente do Python 3.x para o seu sistema operacional.</li> <li>Siga as instru\u00e7\u00f5es de instala\u00e7\u00e3o. Durante a instala\u00e7\u00e3o, certifique-se de marcar a op\u00e7\u00e3o <code>\"Add Python 3.x to PATH\"</code> para facilitar a execu\u00e7\u00e3o do Python no terminal.</li> </ol> <p>Question</p> <p>Ap\u00f3s a instala\u00e7\u00e3o, abra o terminal ou prompt de comando (cmd) e digite <code>python --version</code> para confirmar que o Python foi instalado corretamente e escolha a alternativa que mais se aproxima da corerta.</p> <ul> <li> Python 3.11.4</li> <li> Python 2.8</li> <li> Python </li> </ul> <p>Answer</p> <p>Vers\u00e3o 3 do Python instalada.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/infra.html#introducao-ao-git-e-github","title":"Introdu\u00e7\u00e3o ao Git e GitHub","text":""},{"location":"aulas/ctp/intro/infra.html#o-que-e-git","title":"O que \u00e9 Git?","text":"<p>Git \u00e9 um sistema de controle de vers\u00e3o distribu\u00eddo que permite que os desenvolvedores colaborem em projetos de qualquer escala. Ele rastreia as mudan\u00e7as no c\u00f3digo, facilitando a colabora\u00e7\u00e3o e a resolu\u00e7\u00e3o de conflitos.</p>"},{"location":"aulas/ctp/intro/infra.html#primeiros-passos-com-git","title":"Primeiros passos com Git:","text":"<p>Exercise</p> <ul> <li>Instale o Git: https://git-scm.com/downloads</li> </ul> <p>Exercise</p> <ul> <li> <p>Ap\u00f3s a instala\u00e7\u00e3o, abra o terminal ou prompt de comando (cmd) e digite os comandos abaixo para configurar sua identidade:  </p> <pre><code>git config --global user.name \"Seu Nome\"\ngit config --global user.email \"seuemail@email.com\"\n</code></pre> </li> </ul>"},{"location":"aulas/ctp/intro/infra.html#o-que-e-github","title":"O que \u00e9 GitHub?","text":"<p>GitHub \u00e9 uma plataforma de hospedagem de c\u00f3digo que utiliza o Git para controle de vers\u00e3o. Ele permite que os desenvolvedores colaborem em projetos e compartilhem seu trabalho com o mundo.</p>"},{"location":"aulas/ctp/intro/infra.html#criacao-da-conta-no-github","title":"Cria\u00e7\u00e3o da conta no GitHub","text":"<p>Exercise</p> <ol> <li>Acesse https://github.com/.</li> <li>Clique em \"Sign up\" no canto superior direito.</li> <li>Preencha seus dados e siga as instru\u00e7\u00f5es para criar sua conta.</li> <li>Ap\u00f3s a cria\u00e7\u00e3o da conta, verifique seu e-mail para confirmar o registro.</li> </ol>"},{"location":"aulas/ctp/intro/infra.html#primeiros-passos-no-github","title":"Primeiros passos no GitHub:","text":"<p>Com o git/github podemos trabalhar de forma colaborativa e organizada. Cada projeto est\u00e1 organizado em um <code>reposit\u00f3rio</code> isso inclui o site da nossa disciplina. </p> <p>Basicamente, podemos criar novos reposit\u00f3rio publicos ou privados para os nossos projetos, clonar resposit\u00f3rios para trabalhar em nossa maquina local ou realizar fork de outros projetos. </p> <p>A id\u00e9ia do fork \u00e9 que ele faz o clone para o seu reposit\u00f3rio do Github e mantem uma \"conex\u00e3o\" entre o que voc\u00ea fez e o original. Isso vai permitir voc\u00ea manter atualizado o seu reposit\u00f3rio com o da disciplina.  </p> <p>Exercise</p> <ol> <li>Fa\u00e7a o fork do reposit\u00f3rio da disciplina: </li> <li>Acesse https://github.com/ e fa\u00e7a login na sua conta.</li> <li> <p>Acesse https://github.com/arnaldojr/computacionalthinking e clique em <code>fork</code>.</p> </li> <li> <p>Clone o reposit\u00f3rio para sua m\u00e1quina local: </p> </li> <li>Na p\u00e1gina principal do seu novo reposit\u00f3rio no GitHub, clique no bot\u00e3o 'Code' e copie a URL fornecida.</li> <li>Abra o terminal ou prompt de comando e navegue at\u00e9 o diret\u00f3rio onde deseja clonar o reposit\u00f3rio.</li> <li> <p>Digite <code>git clone [URL_DO_REPOSIT\u00d3RIO]</code>. Por exemplo: <pre><code>git clone https://github.com/seu_usuario/nome_do_repositorio.git\n</code></pre></p> </li> <li> <p>Trabalhe com o Git localmente: (opcional por enquanto)</p> </li> <li></li> <li>Navegue at\u00e9 o diret\u00f3rio do reposit\u00f3rio clonado: <code>cd nome_do_repositorio</code>.</li> <li>Fa\u00e7a as altera\u00e7\u00f5es desejadas nos arquivos ou adicione novos arquivos.</li> <li>Adicione as altera\u00e7\u00f5es ao Git usando: <pre><code>git add .\n</code></pre></li> <li>Fa\u00e7a um commit das altera\u00e7\u00f5es com uma mensagem descritiva: <pre><code>git commit -m \"Descri\u00e7\u00e3o das altera\u00e7\u00f5es feitas\"\n</code></pre></li> <li>Envie as altera\u00e7\u00f5es para o GitHub (push): <pre><code>git push origin master\n</code></pre></li> </ol> <p>Warning</p> <p>Lembre-se de que a pr\u00e1tica leva \u00e0 perfei\u00e7\u00e3o. Quanto mais voc\u00ea trabalhar com Git e GitHub, mais confort\u00e1vel se sentir\u00e1 com essas ferramentas!</p>"},{"location":"aulas/ctp/intro/infra.html#instalacao-da-ide-de-programacao","title":"Instala\u00e7\u00e3o da IDE de programa\u00e7\u00e3o","text":"<p>Ambientes de Desenvolvimento Integrado (IDEs) s\u00e3o ferramentas que fornecem um conjunto de funcionalidades para facilitar o processo de desenvolvimento de software. Eles geralmente incluem um editor de c\u00f3digo, ferramentas de depura\u00e7\u00e3o e, muitas vezes, recursos para design de interface, controle de vers\u00e3o, entre outros.</p> <ol> <li>Visual Studio Code (VS Code): (vamos usar durante o curso) </li> <li>Uma IDE leve e extens\u00edvel, popular n\u00e3o apenas para Python, mas para uma variedade de linguagens.</li> <li>Com a extens\u00e3o Python, o VS Code oferece linting, debugging, IntelliSense, e suporte para Jupyter Notebooks.</li> <li> <p>Site oficial do VS Code</p> </li> <li> <p>PyCharm: </p> </li> <li>Desenvolvido pela JetBrains, \u00e9 uma das IDEs mais completas para Python.</li> <li>Oferece recursos avan\u00e7ados como an\u00e1lise de c\u00f3digo, um debugger visual e integra\u00e7\u00e3o com muitos frameworks e ferramentas populares de Python.</li> <li>Existe em duas vers\u00f5es: Community (gratuita) e Professional (paga).</li> <li> <p>Site oficial do PyCharm</p> </li> <li> <p>Jupyter Notebook:(vamos usar durante o curso) </p> </li> <li>Mais do que uma IDE tradicional, \u00e9 uma aplica\u00e7\u00e3o web que permite criar e compartilhar documentos que cont\u00eam c\u00f3digo, equa\u00e7\u00f5es, visualiza\u00e7\u00f5es e texto narrativo.</li> <li>Popular para an\u00e1lise de dados, ci\u00eancia de dados e aprendizado de m\u00e1quina.</li> <li> <p>Site oficial do Jupyter</p> </li> <li> <p>Thonny: </p> </li> <li>Uma IDE para ensino e aprendizado de programa\u00e7\u00e3o Python. Ideal para iniciantes.</li> <li>Vem com Python inclu\u00eddo e um debugger simples de usar.</li> <li> <p>Site oficial do Thonny</p> </li> <li> <p>Spyder: </p> </li> <li>Uma IDE voltada para cientistas, engenheiros e analistas de dados.</li> <li>Integra-se bem com bibliotecas populares de Python como SciPy, NumPy e Matplotlib.</li> <li>Site oficial do Spyder</li> </ol> <p>Warning</p> <p>No entanto, \u00e9 v\u00e1lido ressaltar que, para simplesmente escrever c\u00f3digo Python, at\u00e9 mesmo editores de texto b\u00e1sicos como o <code>Bloco de Notas</code> podem ser utilizados. No entanto, uma IDE especializada oferece ferramentas e recursos que facilitam e enriquecem o processo de desenvolvimento.</p> <p>Note</p> <p>Para os prop\u00f3sitos da nosso disciplina, eu optei por utilizar o <code>VS Code</code>, mas voc\u00ea pode escolher a IDE que melhor se adapte \u00e0s suas necessidades e ao conte\u00fado que deseja abordar. Seja qual for sua escolha, o mais importante \u00e9 a pr\u00e1tica e a familiaridade com as ferramentas.</p>"},{"location":"aulas/ctp/intro/infra.html#instalacao-da-ide-de-programacao-visual-studio-code-vs-code","title":"Instala\u00e7\u00e3o da IDE de programa\u00e7\u00e3o: Visual Studio Code (VS Code)","text":"<p>O Visual Studio Code \u00e9 uma IDE leve, mas poderosa, que suporta uma variedade de linguagens de programa\u00e7\u00e3o. \u00c9 altamente extens\u00edvel e tem uma grande comunidade que contribui com extens\u00f5es \u00fateis.</p>"},{"location":"aulas/ctp/intro/infra.html#passos-para-instalacao","title":"Passos para instala\u00e7\u00e3o:","text":"<p>Exercise</p> <ul> <li> <p>Download: </p> <ul> <li>Acesse o site oficial do VS Code em https://code.visualstudio.com/.</li> <li>Clique em \"Download\" e escolha a vers\u00e3o adequada para o seu sistema operacional (Windows, macOS ou Linux).</li> </ul> </li> <li> <p>Instala\u00e7\u00e3o: </p> <ul> <li>Execute o arquivo baixado e siga as instru\u00e7\u00f5es do assistente de instala\u00e7\u00e3o.</li> <li>Durante a instala\u00e7\u00e3o, recomendo marcar as op\u00e7\u00f5es \"Add 'Open with Code' action to Windows Explorer file context menu\" e \"Add 'Open with Code' action to Windows Explorer directory context menu\" (para usu\u00e1rios Windows) para facilitar a abertura de arquivos e diret\u00f3rios com o VS Code.</li> </ul> </li> <li> <p>Configura\u00e7\u00e3o inicial: </p> <ul> <li>Ao abrir o VS Code pela primeira vez, voc\u00ea ser\u00e1 apresentado a uma interface com uma barra lateral \u00e0 esquerda. Esta barra cont\u00e9m \u00edcones para explorador de arquivos, pesquisa, controle de vers\u00e3o, extens\u00f5es, entre outros.</li> <li>Recomendo instalar a extens\u00e3o \"Python\" para obter suporte \u00e0 linguagem Python. Para isso, clique no \u00edcone de extens\u00f5es (quarto \u00edcone da barra lateral) e pesquise por \"Python\". Selecione a extens\u00e3o oficial oferecida pela Microsoft e clique em \"Install\".</li> <li>Recomendo tamb\u00e9m instalar a extens\u00e3o \"Jupyter\" para rodar notebooks diretamente pelo VSCode. Siga o mesmo processo de pesquisa e instala\u00e7\u00e3o que voc\u00ea fez para a extens\u00e3o Python.</li> </ul> </li> </ul>"},{"location":"aulas/ctp/intro/infra.html#instalacao-do-jupyter-notebook","title":"Instala\u00e7\u00e3o do Jupyter Notebook","text":"<p>O Jupyter Notebook \u00e9 uma aplica\u00e7\u00e3o web que permite criar e compartilhar documentos que cont\u00eam c\u00f3digo, equa\u00e7\u00f5es, visualiza\u00e7\u00f5es e texto explicativo. \u00c9 amplamente utilizado para an\u00e1lise de dados, ci\u00eancia de dados e aprendizado de m\u00e1quina.</p> <p>Exercise</p> <ul> <li> <p>Instala\u00e7\u00e3o via pip: </p> <ul> <li>Abra o terminal ou prompt de comando.</li> <li>Digite o seguinte comando: <code>pip install jupyter</code></li> </ul> </li> <li> <p>Execu\u00e7\u00e3o: </p> <ul> <li>No terminal ou prompt de comando, digite <code>jupyter notebook</code>. Isso iniciar\u00e1 o servidor do Jupyter e abrir\u00e1 uma nova janela ou aba no seu navegador padr\u00e3o com a interface do Jupyter Notebook.</li> <li>Voc\u00ea pode criar um novo notebook selecionando \"New\" e depois \"Python 3\" ou pode abrir notebooks existentes navegando pelos diret\u00f3rios.</li> </ul> </li> <li> <p>Integra\u00e7\u00e3o com VS Code: </p> <ul> <li>Com a extens\u00e3o \"Jupyter\" instalada no VS Code, voc\u00ea pode criar e editar notebooks diretamente na IDE. Basta criar um novo arquivo com a extens\u00e3o <code>.ipynb</code> ou abrir um existente.</li> </ul> </li> </ul> <p>Pronto! Se tudo deu certo at\u00e9 aqui, estamos com a nossa infraestrutura pronta para come\u00e7ar a desenvolver sistemas utilizando Python e Jupyter Notebook.</p>"},{"location":"aulas/ctp/intro/intro-ctp.html","title":"Pensamento computacional","text":""},{"location":"aulas/ctp/intro/intro-ctp.html#computacional-thinking","title":"Computacional Thinking","text":"<p>Seja bem-vindo \u00e0 jornada do pensamento computacional!</p> <p>Hoje, o pensamento computacional \u00e9 visto n\u00e3o apenas como uma habilidade essencial para aqueles que trabalham em campos relacionados \u00e0 tecnologia, mas tamb\u00e9m como uma habilidade valiosa para a resolu\u00e7\u00e3o de problemas em diversas \u00e1reas. A capacidade anal\u00edtica de compreender problemas e propor solu\u00e7\u00f5es sist\u00eamicas \u00e9 aplic\u00e1vel em muitas \u00e1reas, desde a ci\u00eancia e engenharia at\u00e9 as artes e ci\u00eancias sociais.</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#vamos-jogar","title":"Vamos jogar!","text":""},{"location":"aulas/ctp/intro/intro-ctp.html#o-jogo","title":"O jogo","text":"<p>A <code>Torre de Han\u00f3i</code> \u00e9 um dos mais famosos jogos de Matem\u00e1tica. Ele consiste de uma base contendo tr\u00eas pilares (hastes), em um dos quais est\u00e1 disposta uma torre formada por alguns discos colocados uns sobre os outros, em ordem crescente de di\u00e2metro, de cima para baixo. O n\u00famero de discos pode variar. Observe a disposi\u00e7\u00e3o inicial de um jogo com seis discos.</p> <p></p>"},{"location":"aulas/ctp/intro/intro-ctp.html#desafio","title":"Desafio","text":"<p>Transferir todos os discos de um pino para outro qualquer. Tente transferi-los de um pino para outro em apenas 31 movimentos, sendo que voc\u00ea poder\u00e1 mover apenas um disco por vez.</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#regras","title":"Regras","text":"<p>Warning</p> <p>Um disco maior nunca poder\u00e1 ficar em cima de um disco menor.</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#jogar","title":"Jogar","text":"<p>Desenvolva uma estrat\u00e9gia para conseguir solucionar com a menor quantidade de movimentos. </p> <p>Se o jogo n\u00e3o abrir acesse o link: https://www.geogebra.org/m/s5hd5qum</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#o-que-e-pensamento-computacional","title":"O que \u00e9 pensamento computacional?","text":"<p>O pensamento computacional \u00e9 uma forma de abordar problemas e sistemas de uma maneira que um computador poderia entender. N\u00e3o se trata apenas de programar, mas sim de uma mentalidade que utiliza conceitos fundamentais da ci\u00eancia da computa\u00e7\u00e3o para resolver problemas, projetar sistemas e compreender o comportamento humano. Ent\u00e3o n\u00e3o relacione pensamento computacional a computador, n\u00e3o necessariamente s\u00e3o utilizados computadores nesse processo. A ideia central \u00e9 trazer a forma de racioc\u00ednio que as m\u00e1quinas aplicam nos problemas. </p> <p>Warning</p> <p>Pensamento computacional n\u00e3o depende computadores e nem de linguagem computacional, logo n\u00e3o se resume a programa\u00e7\u00e3o ou software ou internet...</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#quais-sao-os-4-pilares-do-pensamento-computacional","title":"Quais s\u00e3o os 4 pilares do pensamento computacional?","text":"<p>Para que o pensamento computacional seja aplicado, vamos conhecer os seus 4 pilares. </p>"},{"location":"aulas/ctp/intro/intro-ctp.html#1-decomposicao","title":"1. Decomposi\u00e7\u00e3o","text":"<ul> <li>Defini\u00e7\u00e3o: Dividir um problema complexo em partes menores e mais gerenci\u00e1veis.</li> <li>Por que \u00e9 importante?: Ao decompor um problema, podemos focar em solucionar cada parte individualmente, tornando a tarefa global mais simples.</li> <li>Exemplo: Ao criar um website, podemos decompor o projeto em partes como design, funcionalidades, conte\u00fado e otimiza\u00e7\u00e3o para dispositivos m\u00f3veis.</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#2-abstracao","title":"2. Abstra\u00e7\u00e3o","text":"<ul> <li>Defini\u00e7\u00e3o: Focar nas informa\u00e7\u00f5es essenciais de um problema, ignorando detalhes desnecess\u00e1rios.</li> <li>Por que \u00e9 importante?: Ajuda a simplificar problemas complexos, permitindo que nos concentremos nos aspectos mais cruciais.</li> <li>Exemplo: Ao desenvolver um aplicativo de transporte, n\u00e3o precisamos saber como um carro funciona internamente, mas sim como ele se move de um ponto a outro.</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#3-reconhecimento-de-padroes","title":"3. Reconhecimento de Padr\u00f5es","text":"<ul> <li>Defini\u00e7\u00e3o: Identificar semelhan\u00e7as ou tend\u00eancias em problemas ou conjuntos de dados.</li> <li>Por que \u00e9 importante?: Reconhecer padr\u00f5es nos permite fazer previs\u00f5es e identificar solu\u00e7\u00f5es mais rapidamente.</li> <li>Exemplo: Ao analisar dados de vendas, podemos identificar em quais meses as vendas aumentam e planejar estrat\u00e9gias de marketing com base nisso.</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#4-algoritmo","title":"4. Algoritmo","text":"<ul> <li>Defini\u00e7\u00e3o: Criar uma s\u00e9rie de instru\u00e7\u00f5es passo a passo para resolver um problema ou realizar uma tarefa.</li> <li>Por que \u00e9 importante?: Os algoritmos garantem que uma tarefa seja realizada de forma eficiente e correta.</li> <li>Exemplo: Ao preparar uma receita, seguimos um algoritmo para garantir que o prato seja feito corretamente.</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#como-desenvolver-o-pensamento-computacional","title":"Como desenvolver o Pensamento Computacional?","text":"<p>Desenvolver o pensamento computacional requer pr\u00e1tica e imers\u00e3o. Durante este curso, usaremos Python, uma linguagem de programa\u00e7\u00e3o poderosa e vers\u00e1til, como nossa ferramenta principal. Atrav\u00e9s de exerc\u00edcios pr\u00e1ticos, projetos e discuss\u00f5es em sala de aula, voc\u00ea ser\u00e1 desafiado a aplicar os conceitos de pensamento computacional para resolver problemas reais. Encorajamos a colabora\u00e7\u00e3o, a experimenta\u00e7\u00e3o e, acima de tudo, a curiosidade. </p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#desafios","title":"DesafiosDividir para conquistar.Reconhecer padr\u00f5es nos permite fazer previs\u00f5es e identificar solu\u00e7\u00f5es mais rapidamente.Focar nas informa\u00e7\u00f5es essenciais, ignorando detalhes desnecess\u00e1rios.Um algoritmo \u00e9 uma sequ\u00eancia definida de passos ou instru\u00e7\u00f5es para resolver um problema.O mapa do metr\u00f4 \u00e9 um exemplo de abstra\u00e7\u00e3o do mundo real.","text":"Assinale o que voc\u00ea entende sobre Decomposi\u00e7\u00e3o Analisar o problema e aumentar partes Conhecer o problema e dividir em partes menores Apagar partes de um programa Testar um algoritmo Enviar Assinale o que voc\u00ea entende sobre Reconhecimento de Padr\u00f5es Identificar situa\u00e7\u00f5es que se repetem dentro do problema ou entre problemas Reconhecer um erro em um programa Identificar o que h\u00e1 de diferente em um problema Reconhecer o final de um problema Enviar Assinale o que voc\u00ea entende sobre Abstra\u00e7\u00e3o \u00c9 pensar sobre o que vem antes do problema Escolher o que \u00e9 o mais importante para resolver um problema Escolher o que \u00e9 o menos destacado no problema \u00c9 pensar sobre como deveria ser o problema Enviar Assinale o que voc\u00ea entende sobre AlgoritmoOrganizar um passo a passo que n\u00e3o deve ser testado na solu\u00e7\u00e3o do problemaOrganizar os passos para a solu\u00e7\u00e3o de um problema e testarListar as a\u00e7\u00f5es que o problema n\u00e3o apresentouOrganizar a escrita do problemaEnviar Podemos relacionar o mapa do metr\u00f4 de SP com qual pilar do pensamento computacional? Abstra\u00e7\u00e3oReconhecimento de Padr\u00f5es Decomposi\u00e7\u00e3oAlgoritmoEnviar <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#representacao-de-algoritimos","title":"Representa\u00e7\u00e3o de algoritimos","text":"<p>Tip</p> <p>Um algoritmo \u00e9, de fato, uma sequ\u00eancia definida de passos ou instru\u00e7\u00f5es para resolver um problema ou realizar uma tarefa. Ele serve como um \"plano\" ou \"receita\" para uma solu\u00e7\u00e3o. Um algoritmo n\u00e3o \u00e9, por si s\u00f3, um programa de computador. No entanto, um programa de computador pode ser desenvolvido com base em um ou mais algoritmos. Podemos representar algoritmos por meio de pseudoc\u00f3digos ou fluxogramas.</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#pseudocodigo","title":"Pseudoc\u00f3digo","text":"<p>\u00c9 uma descri\u00e7\u00e3o de alto n\u00edvel de um algoritmo que usa a estrutura de um programa de computador, mas pode ser lido por humanos. Ele n\u00e3o \u00e9 escrito em uma linguagem de programa\u00e7\u00e3o espec\u00edfica, mas sim em uma forma que pode ser facilmente convertida em c\u00f3digo real.</p> <pre><code>    Algoritmo CalcularMedia\n       // Entrada de dados\n       Ler num1\n       Ler num2\n       Ler num3\n\n       // C\u00e1lculo da m\u00e9dia\n       media &lt;- (num1 + num2 + num3) / 3\n\n       // Sa\u00edda de dados\n       Escrever \"A m\u00e9dia \u00e9: \", media\n    FimAlgoritmo\n</code></pre>"},{"location":"aulas/ctp/intro/intro-ctp.html#fluxograma","title":"Fluxograma","text":"<p>\u00c9 uma representa\u00e7\u00e3o gr\u00e1fica de um algoritmo. Usa s\u00edmbolos padr\u00e3o (como ret\u00e2ngulos, losangos e ovais) conectados por setas para representar os passos e o fluxo de um algoritmo.</p> <p></p> <p>Tip</p> <p>O objetivo de desenvolvidores de sistemas e profissionais de tecnologia \u00e9 encontrar algoritimos mais eficientes para resolu\u00e7\u00e3o do problema.</p> <p>Question</p> <p>Assinale a defini\u00e7\u00e3o correta de um algoritmo:</p> <ul> <li> Uma linguagem de programa\u00e7\u00e3o espec\u00edfica.</li> <li> Uma sequ\u00eancia definida de passos ou instru\u00e7\u00f5es para resolver um problema ou realizar uma tarefa.</li> <li> Um programa de computador.</li> <li> Uma representa\u00e7\u00e3o gr\u00e1fica de um programa.</li> </ul> <p>Answer</p> <p>Um algoritmo \u00e9 uma sequ\u00eancia definida de passos ou instru\u00e7\u00f5es para resolver um problema ou realizar uma tarefa.</p> <p>Question</p> <p>O que \u00e9 pseudoc\u00f3digo?</p> <ul> <li> Um c\u00f3digo escrito em uma linguagem de programa\u00e7\u00e3o espec\u00edfica.</li> <li> Uma descri\u00e7\u00e3o de alto n\u00edvel de um algoritmo que pode ser lido por humanos.</li> <li> Um tipo de fluxograma.</li> <li> Um programa de computador.</li> </ul> <p>Answer</p> <p>Pseudoc\u00f3digo \u00e9 uma descri\u00e7\u00e3o de alto n\u00edvel de um algoritmo que pode ser lido por humanos.</p> <p>Question</p> <p>Qual \u00e9 o objetivo dos desenvolvedores de sistemas e profissionais de tecnologia ao trabalhar com algoritmos?</p> <ul> <li> Criar fluxogramas.</li> <li> Escrever pseudoc\u00f3digos.</li> <li> Encontrar algoritmos mais eficientes para a resolu\u00e7\u00e3o do problema.</li> <li> Aumentar a complexidade do problema.</li> </ul> <p>Answer</p> <p>O objetivo \u00e9 encontrar algoritmos mais eficientes para a resolu\u00e7\u00e3o do problema.</p> <p>Question</p> <p>Imagine que voc\u00ea foi contratado para desenvolver um algoritmo que calcule o desconto em uma compra. O desconto \u00e9 de 10% se o valor da compra for maior que R$100. Dentre os pseudoc\u00f3digos abaixo, qual deles implementa corretamente essa l\u00f3gica?</p> <ul> <li> DescontoA         <pre><code>Algoritmo DescontoA\n    Ler valorCompra\n    Se valorCompra &gt; 100 Ent\u00e3o\n        desconto &lt;- valorCompra * 0.10\n    Sen\u00e3o\n        desconto &lt;- 0\n    FimSe\n    Escrever \"Desconto: \", desconto\nFimAlgoritmo\n</code></pre></li> <li> DescontoB         <pre><code>Algoritmo DescontoB\n   Ler valorCompra\n   Se valorCompra &lt; 100 Ent\u00e3o\n       desconto &lt;- valorCompra * 0.10\n   Sen\u00e3o\n       desconto &lt;- 0\n   FimSe\n   Escrever \"Desconto: \", desconto\nFimAlgoritmo\n</code></pre></li> <li> DescontoC         <pre><code>Algoritmo DescontoC\n   Ler valorCompra\n   desconto &lt;- valorCompra * 0.10\n   Escrever \"Desconto: \", desconto\nFimAlgoritmo\n</code></pre></li> <li> DescontoD         <pre><code>Algoritmo DescontoD\n   Ler valorCompra\n   Se valorCompra &gt; 100 Ent\u00e3o\n       desconto &lt;- 0\n   Sen\u00e3o\n       desconto &lt;- valorCompra * 0.10\n   FimSe\n   Escrever \"Desconto: \", desconto\nFimAlgoritmo\n</code></pre></li> </ul> <p>Answer</p> <p>O pseudoc\u00f3digo DescontoA implementa corretamente a l\u00f3gica de dar 10% de desconto se o valor da compra for maior que R$100.</p> <p>Question</p> <p>Voc\u00ea foi solicitado a criar um algoritmo para calcular juros simples. O juro simples \u00e9 calculado pela f\u00f3rmula J = P * i * n, onde P \u00e9 o Capital, i \u00e9 a taxa de juro e n \u00e9 o n\u00famero de per\u00edodos. Qual dos pseudoc\u00f3digos abaixo implementa corretamente essa l\u00f3gica?</p> <ul> <li> JuroSimplesA         <pre><code>Algoritmo JuroSimplesA\n    Ler P, i, n\n    J &lt;- P * i * n\n    Escrever \"Juros: \", J\nFimAlgoritmo\n</code></pre></li> <li> JuroSimplesB         <pre><code>Algoritmo JuroSimplesB\n    Ler P, i, n\n    J &lt;- P + i + n\n    Escrever \"Juros: \", J\nFimAlgoritmo\n</code></pre></li> <li> JuroSimplesC         <pre><code>Algoritmo JuroSimplesC\n    Ler P, i, n\n    J &lt;- P * i / n\n    Escrever \"Juros: \", J\nFimAlgoritmo\n</code></pre></li> <li> JuroSimplesD         <pre><code>Algoritmo JuroSimplesD\n    Ler P, i\n    J &lt;- P * i\n    Escrever \"Juros: \", J\nFimAlgoritmo\n</code></pre></li> </ul> <p>Answer</p> <p>O pseudoc\u00f3digo JuroSimplesA implementa corretamente a f\u00f3rmula para calcular juros simples.</p> <p>Question</p> <p>Seu objetivo \u00e9 desenvolver um algoritmo que verifique se um n\u00famero \u00e9 par. Qual dos pseudoc\u00f3digos abaixo implementa corretamente essa verifica\u00e7\u00e3o?</p> <ul> <li> ParOuImparA         <pre><code>Algoritmo ParOuImparA\n    Ler num\n    Se num / 2 = 1 Ent\u00e3o\n        Escrever \"Par\"\n    Sen\u00e3o\n        Escrever \"\u00cdmpar\"\n    FimSe\nFimAlgoritmo\n</code></pre></li> <li> ParOuImparB         <pre><code>Algoritmo ParOuImparB\n    Ler num\n    Se num MOD 2 = 0 Ent\u00e3o\n        Escrever \"Par\"\n    Sen\u00e3o\n        Escrever \"\u00cdmpar\"\n    FimSe\nFimAlgoritmo\n</code></pre></li> <li> ParOuImparC         <pre><code>Algoritmo ParOuImparC\n    Ler num\n    Se num MOD 2 = 1 Ent\u00e3o\n        Escrever \"Par\"\n    Sen\u00e3o\n        Escrever \"\u00cdmpar\"\n    FimSe\nFimAlgoritmo\n</code></pre></li> <li> ParOuImparD         <pre><code>Algoritmo ParOuImparD\n    Ler num\n    Se num / 2 = 0 Ent\u00e3o\n        Escrever \"Par\"\n    Sen\u00e3o\n        Escrever \"\u00cdmpar\"\n    FimSe\nFimAlgoritmo\n</code></pre></li> </ul> <p>Answer</p> <p>O pseudoc\u00f3digo ParOuImparB verifica corretamente se um n\u00famero \u00e9 par ou \u00edmpar.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/intro/intro-ctp.html#o-que-e-um-computador","title":"O que \u00e9 um computador?","text":"<p>O dicionario talvez defina o termo computador como um \u201cdispositivo eletr\u00f4nico que \u00e9 capaz de receber informa\u00e7\u00f5es (dados) de uma forma particular e de realizar uma sequ\u00eancia de opera\u00e7\u00f5es [...] para produzir um resultado\u201d. No entanto, a defini\u00e7\u00e3o original do mesmo termo, em uso do s\u00e9culo XVII, \u00e9 ligeiramente diferente. Refere-se a algu\u00e9m \u201cque computa\u201d ou uma \u201cpessoa que realiza c\u00e1lculos matem\u00e1ticos\u201d \u2013 da Wikipedia. Quando usamos o termo <code>computador</code>, consideramos sempre a defini\u00e7\u00e3o mais gen\u00e9rica: qualquer agente processador de informa\u00e7\u00e3o (ou seja, uma m\u00e1quina ou uma pessoa agindo mecanicamente se devidamente instru\u00eddo) que pode fazer c\u00e1lculos e produzir alguma sa\u00edda a partir de informa\u00e7\u00f5es de entrada.</p> <p> Eniac - um marco na computa\u00e7\u00e3o.</p> <p>Tip</p> <p>Para saber mais sobre a hist\u00f3ria da computa\u00e7\u00e3o:</p> <ul> <li>https://www.cos.ufrj.br/semana/2019/slides/Jayme_Semana_PESC_2019.pdf</li> <li>https://www.ime.usp.br/~macmulti/historico/</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#como-um-computador-computa","title":"Como um computador computa?","text":"<p>O processo de computa\u00e7\u00e3o envolve a execu\u00e7\u00e3o de instru\u00e7\u00f5es espec\u00edficas em uma sequ\u00eancia determinada. Estas instru\u00e7\u00f5es s\u00e3o fornecidas ao computador na forma de programas. Quando um programa \u00e9 executado, ele passa por v\u00e1rias etapas:</p> <ul> <li>Entrada: O computador recebe dados, seja por meio de um teclado, mouse, sensores ou outros dispositivos.</li> <li>Processamento: A CPU (Unidade Central de Processamento) processa os dados, executando opera\u00e7\u00f5es aritm\u00e9ticas e l\u00f3gicas.</li> <li>Armazenamento: Os dados processados podem ser armazenados na mem\u00f3ria do computador ou em dispositivos de armazenamento, como discos r\u00edgidos.</li> <li>Sa\u00edda: O computador exibe ou transmite os resultados do processamento, seja em um monitor, impressora ou atrav\u00e9s de sinais para outros dispositivos.</li> </ul>"},{"location":"aulas/ctp/intro/intro-ctp.html#linguagens-naturais-vs-linguagens-de-programacao","title":"Linguagens naturais vs linguagens de programa\u00e7\u00e3oQuais s\u00e3o linguagens de alto n\u00edvel? Existe mais de uma alternativa correta. Da lista acima, apenas Assembly e VHDL s\u00e3o linguagens de baixo n\u00edvel.","text":"<p><code>Linguagens naturais</code> s\u00e3o as l\u00ednguas que as pessoas falam, como ingl\u00eas, portugu\u00eas ou mandarim. Elas evolu\u00edram naturalmente ao longo do tempo e s\u00e3o ricas em nuances, ambiguidades e contextos culturais.</p> <p><code>Linguagens de programa\u00e7\u00e3o</code>, pelo contr\u00e1rio, s\u00e3o l\u00ednguas de origem formal. Obrigam a regras sint\u00e1ticas espec\u00edficas. Tais regras evitam poss\u00edveis afirma\u00e7\u00f5es amb\u00edguas, principalmente por restringir a expressividade da linguagem. Portanto, todas as senten\u00e7as em tal linguagem est\u00e3o transmitindo apenas um significado poss\u00edvel.</p> <p>Em particular, podemos distinguir tr\u00eas macroconjuntos de linguagens de programa\u00e7\u00e3o:</p> <ul> <li><code>linguagem de m\u00e1quina</code> \u00e9 um conjunto de instru\u00e7\u00f5es que podem ser executadas diretamente pela unidade central de processamento (CPU) de um computador eletr\u00f4nico. Por exemplo, o c\u00f3digo a seguir \u00e9 o c\u00f3digo execut\u00e1vel bin\u00e1rio (ou seja, uma sequ\u00eancia de 0 e 1) definindo uma fun\u00e7\u00e3o (ou seja, um tipo de ferramenta que recebe algumas entradas e produz algumas sa\u00eddas) para calcular o n-\u00e9simo n\u00famero de Fibonacci:</li> </ul> <pre><code>100010110101010000100100000010001000001111111010000000000111011\n100000110101110000000000000000000000000000000000011000011100000\n111111101000000010011101110000011010111000000000010000000000000\n000000000001100001101010011101110110000000100000000000000000000\n000010111001000000010000000000000000000000001000110100000100000\n110011000001111111010000000110111011000000111100010111101100110\n001001110000010100101011101011111100010101101111000011\n</code></pre> <ul> <li><code>linguagem de baixo nivel</code> s\u00e3o linguagens que fornecem um n\u00edvel de abstra\u00e7\u00e3o acima da linguagem de m\u00e1quina. Desta forma, permite escrever programas de uma forma mais intelig\u00edvel para os humanos. A linguagem mais popular desse tipo \u00e9 Assembly (ASM). Mesmo que introduzindo s\u00edmbolos humanamente reconhec\u00edveis, uma linha de c\u00f3digo assembly normalmente representa uma instru\u00e7\u00e3o de m\u00e1quina em linguagem de m\u00e1quina. Por exemplo, a mesma fun\u00e7\u00e3o para calcular o n-\u00e9simo n\u00famero de Fibonacci \u00e9 definida em Assembly da seguinte forma:</li> </ul> <pre><code>   fib:\n      mov edx, [esp+8]\n      cmp edx, 0\n      ja @f\n      mov eax, 0\n      ret\n\n      @@:\n      cmp edx, 2\n      ja @f\n      mov eax, 1\n      ret\n\n      @@:\n      push ebx\n      mov ebx, 1\n      mov ecx, 1\n\n      @@:\n            lea eax, [ebx+ecx]\n            cmp edx, 3\n            jbe @f\n            mov ebx, ecx\n            mov ecx, eax\n            dec edx\n      jmp @b\n\n      @@:\n      pop ebx\n      ret\n</code></pre> <ul> <li><code>linguagem de alto nivel</code> s\u00e3o caracterizados por uma forte abstra\u00e7\u00e3o da especificabilidade da linguagem de m\u00e1quina. Em particular, pode usar palavras de linguagem natural para constru\u00e7\u00f5es espec\u00edficas para serem f\u00e1ceis de usar e entender por humanos. De um modo geral, quanto mais abstra\u00e7\u00e3o das linguagens de programa\u00e7\u00e3o de baixo n\u00edvel for fornecida, mais compreens\u00edvel ser\u00e1 a linguagem. Por exemplo, no exemplo a seguir, mostramos como usar a linguagem de programa\u00e7\u00e3o C para implementar a mesma fun\u00e7\u00e3o de antes:</li> </ul> <pre><code>    unsigned int fib(unsigned int n) {\n       if (n &lt;= 0)\n          return 0;\n       else if (n &lt;= 2)\n          return 1;\n       else {\n          unsigned int a,b,c;\n          a = 1;\n          b = 1;\n          while (1) {\n                c = a + b;\n                if (n &lt;= 3) return c;\n                a = b;\n                b = c;\n                n--;\n          }\n       }\n    }\n</code></pre> Java. JavaScript. Ruby. Python. C#. PHP. Assembly. Swift. Kotlin. Go. Perl. Lua.R. TypeScript. Rust. Scala. Groovy. MATLAB. C++. Elixir. C. VHDL. Enviar"},{"location":"aulas/ctp/intro/playground.html","title":"Playground","text":""},{"location":"aulas/ctp/intro/playground.html#playground","title":"Playground","text":"<p>Bem-vindo \u00e0 p\u00e1gina de pr\u00e1tica de Python do nosso curso! Aqui, voc\u00ea pode praticar programa\u00e7\u00e3o por meio do simulador, uma ferramenta online interativa que permite escrever, executar e compartilhar c\u00f3digo Python diretamente do seu navegador. N\u00e3o \u00e9 necess\u00e1rio instalar nenhum software, e voc\u00ea pode come\u00e7ar a praticar em instantes!</p>"},{"location":"aulas/ctp/intro/playground.html#escrevendo-seu-primeiro-codigo","title":"Escrevendo seu primeiro c\u00f3digo","text":"<p>Vamos escrever um programa simples para come\u00e7ar:</p> <ol> <li>No editor de c\u00f3digo, digite o seguinte c\u00f3digo Python:</li> </ol> <pre><code>print(\"Aprendendo a programar!\")\n</code></pre> <ol> <li>Clique no bot\u00e3o \"Run\" no topo da p\u00e1gina para executar o c\u00f3digo.</li> <li>Veja a sa\u00edda no console \u00e0 direita. Voc\u00ea dever\u00e1 ver a mensagem <code>Aprendendo a programar!</code>.</li> <li>Experimente modificar o c\u00f3digo e observe as mudan\u00e7as no comportamento do programa.</li> </ol>"},{"location":"aulas/ctp/intro/playground.html#playground_1","title":"PLAYGROUND","text":""},{"location":"aulas/ctp/intro/playground.html#desafios-de-programacao","title":"Desafios de Programa\u00e7\u00e3o","text":"<p>Para realmente aprimorar suas habilidades, use o <code>playground</code> para experimentar novos conceitos e desafiar a si mesmo com problemas mais complexos.</p>"},{"location":"aulas/ctp/labs/common-errors.html","title":"Lab04 - Erros comuns","text":"In\u00a0[30]: Copied! <pre>print('Ol\u00e1, mundo!\")\n</pre> print('Ol\u00e1, mundo!\") <pre>\n  File \"&lt;ipython-input-30-15a41a3ccf62&gt;\", line 1\n    print('Ol\u00e1, mundo!\")\n                        ^\nSyntaxError: EOL while scanning string literal\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[1]: Copied! <pre>print(\"Ol\u00e1 mundo\"\n</pre> print(\"Ol\u00e1 mundo\" <pre>\n  File \"&lt;ipython-input-1-da27efeb691f&gt;\", line 1\n    print(\"Ol\u00e1 mundo\"\n                     ^\nSyntaxError: unexpected EOF while parsing\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[37]: Copied! <pre>7casas = 4\n</pre> 7casas = 4 <pre>\n  File \"&lt;ipython-input-37-c269be13d752&gt;\", line 1\n    7casas = 4\n     ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[38]: Copied! <pre>str(input(\"digite o primeiro numero\")\n</pre> str(input(\"digite o primeiro numero\") <pre>\n  File \"&lt;ipython-input-38-a91b619cd92b&gt;\", line 1\n    str(input(\"digite o primeiro numero\")\n                                         ^\nSyntaxError: unexpected EOF while parsing\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[43]: Copied! <pre>a = str(input(\"digite o primeiro numero\")) # 3\nb = str(input(\"digite o segundo numero\")) # 3\nprint(a+b)\n</pre> a = str(input(\"digite o primeiro numero\")) # 3 b = str(input(\"digite o segundo numero\")) # 3 print(a+b) <pre>digite o primeiro numero3\ndigite o segundo numero3\n33\n</pre> In\u00a0[35]: Copied! <pre>def minha_funcao()\n    return \"Ol\u00e1, mundo!\"\n</pre> def minha_funcao()     return \"Ol\u00e1, mundo!\" <pre>\n  File \"&lt;ipython-input-35-af16dcebc17d&gt;\", line 1\n    def minha_funcao()\n                      ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[36]: Copied! <pre>idade = 18\nif idade = 18:\n    print(\"Maior de idade\")\n</pre> idade = 18 if idade = 18:     print(\"Maior de idade\") <pre>\n  File \"&lt;ipython-input-36-274b47e24894&gt;\", line 2\n    if idade = 18:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[45]: Copied! <pre>def saudacao():\nprint(\"Ol\u00e1!\")\n</pre> def saudacao(): print(\"Ol\u00e1!\") <pre>\n  File \"&lt;ipython-input-45-3ca3bbbc0d2b&gt;\", line 2\n    print(\"Ol\u00e1!\")\n    ^\nIndentationError: expected an indented block\n</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[3]: Copied! <pre>nome = \"Jo\u00e3o\"\nprint(Nome)\n</pre> nome = \"Jo\u00e3o\" print(Nome) <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-3-0a0afa2a6809&gt; in &lt;module&gt;\n      1 nome = \"Jo\u00e3o\"\n----&gt; 2 print(Nome)\n\nNameError: name 'Nome' is not defined</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[31]: Copied! <pre>idade = \"25\"\ntotal = idade + 5\n</pre> idade = \"25\" total = idade + 5 <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-31-021ee738685d&gt; in &lt;module&gt;\n      1 idade = \"25\"\n----&gt; 2 total = idade + 5\n\nTypeError: can only concatenate str (not \"int\") to str</pre> In\u00a0[46]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[4]: Copied! <pre>resultado = 10 / 0\n</pre> resultado = 10 / 0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-4-605c3bec262d&gt; in &lt;module&gt;\n----&gt; 1 resultado = 10 / 0\n\nZeroDivisionError: division by zero</pre> In\u00a0[48]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[5]: Copied! <pre>import mathh\n</pre> import mathh <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\n&lt;ipython-input-5-dafd3c5d3188&gt; in &lt;module&gt;\n----&gt; 1 import mathh\n\nModuleNotFoundError: No module named 'mathh'</pre> In\u00a0[47]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[9]: Copied! <pre>def somar(a, b):\n    return a + b\n\nresultado = somar(5)\n</pre> def somar(a, b):     return a + b  resultado = somar(5) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-9-072ac009b981&gt; in &lt;module&gt;\n      2     return a + b\n      3 \n----&gt; 4 resultado = somar(5)\n\nTypeError: somar() missing 1 required positional argument: 'b'</pre> In\u00a0[49]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[11]: Copied! <pre>int(\"python\")\n</pre> int(\"python\") <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-11-9ae652162590&gt; in &lt;module&gt;\n----&gt; 1 int(\"python\")\n\nValueError: invalid literal for int() with base 10: 'python'</pre> In\u00a0[50]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[12]: Copied! <pre>idade = 25\nprint(\"Minha idade \u00e9: \" + idade)\n</pre> idade = 25 print(\"Minha idade \u00e9: \" + idade) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-12-07d6225f6874&gt; in &lt;module&gt;\n      1 idade = 25\n----&gt; 2 print(\"Minha idade \u00e9: \" + idade)\n\nTypeError: can only concatenate str (not \"int\") to str</pre> In\u00a0[52]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[13]: Copied! <pre>resultado = multiplica(5, 2)\n</pre> resultado = multiplica(5, 2) <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-13-205222be5016&gt; in &lt;module&gt;\n----&gt; 1 resultado = multiplica(5, 2)\n\nNameError: name 'multiplica' is not defined</pre> In\u00a0[\u00a0]: Copied! <pre># Solu\u00e7\u00e3o\n</pre> # Solu\u00e7\u00e3o  In\u00a0[16]: Copied! <pre>soma(a, b):\n    return a + b\n</pre> soma(a, b):     return a + b <pre>\n  File \"&lt;ipython-input-16-53b9abc9acb8&gt;\", line 1\n    soma(a, b):\n               ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[\u00a0]: Copied! <pre># Solu\u00e7\u00e3o: Esquecer de definir uma fun\u00e7\u00e3o com def\n</pre> # Solu\u00e7\u00e3o: Esquecer de definir uma fun\u00e7\u00e3o com def  In\u00a0[17]: Copied! <pre>idade = 18\nif idade = 18:\n    idade = 12\nprint(f\"Voc\u00ea tem {idade} anos.\")\n</pre> idade = 18 if idade = 18:     idade = 12 print(f\"Voc\u00ea tem {idade} anos.\") <pre>\n  File \"&lt;ipython-input-17-5ad9d64caab5&gt;\", line 2\n    if idade = 18:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o: Esquecer o operador de compara\u00e7\u00e3o em uma estrutura condicional\n</pre> # solu\u00e7\u00e3o: Esquecer o operador de compara\u00e7\u00e3o em uma estrutura condicional In\u00a0[53]: Copied! <pre>valor = 5\nif valor = 10:\n    valor = 20\n</pre> valor = 5 if valor = 10:     valor = 20 <pre>\n  File \"&lt;ipython-input-53-59ec2c2e20de&gt;\", line 2\n    if valor = 10:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[54]: Copied! <pre># solu\u00e7\u00e3o: Erro de operador de atribui\u00e7\u00e3o em vez de compara\u00e7\u00e3o\n</pre> # solu\u00e7\u00e3o: Erro de operador de atribui\u00e7\u00e3o em vez de compara\u00e7\u00e3o  In\u00a0[20]: Copied! <pre>def soma(a, b):\n    resultado = a + b\n\nprint(soma(5, 3))\n</pre> def soma(a, b):     resultado = a + b  print(soma(5, 3)) <pre>None\n</pre> In\u00a0[55]: Copied! <pre># solu\u00e7\u00e3o Esquecer de retornar um valor em uma fun\u00e7\u00e3o que deveria ter retorno\n</pre> # solu\u00e7\u00e3o Esquecer de retornar um valor em uma fun\u00e7\u00e3o que deveria ter retorno  In\u00a0[56]: Copied! <pre>if add == 2:\n    add += i\n</pre> if add == 2:     add += i <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-56-e57a47ae4057&gt; in &lt;module&gt;\n----&gt; 1 if add == 2:\n      2     add += i\n\nNameError: name 'add' is not defined</pre> In\u00a0[57]: Copied! <pre># solu\u00e7\u00e3o: Esquecer de iniciar uma vari\u00e1vel antes de us\u00e1-la\n</pre> # solu\u00e7\u00e3o: Esquecer de iniciar uma vari\u00e1vel antes de us\u00e1-la   In\u00a0[24]: Copied! <pre>resto = 10 % 0\n</pre> resto = 10 % 0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-24-8f7f0e98b1d2&gt; in &lt;module&gt;\n----&gt; 1 resto = 10 % 0\n\nZeroDivisionError: integer division or modulo by zero</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o:\n</pre> # solu\u00e7\u00e3o: In\u00a0[64]: Copied! <pre>10/0\n</pre> 10/0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-64-e574edb36883&gt; in &lt;module&gt;\n----&gt; 1 10/0\n\nZeroDivisionError: division by zero</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o:\n</pre> # solu\u00e7\u00e3o:  In\u00a0[68]: Copied! <pre>def verificar_igualdade(a, b):\n    return a = b\n\nverificar_igualdade(2, 3)\n</pre> def verificar_igualdade(a, b):     return a = b  verificar_igualdade(2, 3)   <pre>\n  File \"&lt;ipython-input-68-8515e9477153&gt;\", line 2\n    return a = b\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[69]: Copied! <pre># solu\u00e7\u00e3o\n</pre> # solu\u00e7\u00e3o   In\u00a0[70]: Copied! <pre>def calcular_media(a, b):\n    return (a + b) / 3\n\ncalcular_media(8,8)\n</pre> def calcular_media(a, b):     return (a + b) / 3  calcular_media(8,8) Out[70]: <pre>5.333333333333333</pre> In\u00a0[71]: Copied! <pre>#solu\u00e7\u00e3o\n</pre> #solu\u00e7\u00e3o"},{"location":"aulas/ctp/labs/common-errors.html#ixiii-deu-erro-e-agora","title":"Ixiii... Deu Erro! e agora?\u00b6","text":"<p>A Import\u00e2ncia de Interpretar Erros no Python</p> <p>Programar \u00e9 uma atividade desafiadora. N\u00e3o importa o seu n\u00edvel de conhecimento, inevitavelmente encontrar\u00e1 erros em seu c\u00f3digo.</p> <p>No entanto, esses erros n\u00e3o s\u00e3o simplesmente obst\u00e1culos; eles s\u00e3o oportunidades valiosas de aprendizado. Interpretar erros em Python \u00e9 uma habilidade crucial por v\u00e1rias raz\u00f5es:</p> <ul> <li><p><code>Diagn\u00f3stico R\u00e1pido</code>: Compreender a mensagem de erro acelera o processo de identifica\u00e7\u00e3o do problema. Em vez de vasculhar linhas e linhas de c\u00f3digo, voc\u00ea pode ir direto ao ponto problem\u00e1tico.</p> </li> <li><p><code>Desenvolvimento de Solu\u00e7\u00e3o</code>: Uma interpreta\u00e7\u00e3o precisa do erro fornece insights sobre como corrigi-lo. Isso economiza tempo e reduz a <code>frustra\u00e7\u00e3o</code> associada \u00e0 tentativa e erro.</p> </li> <li><p><code>Aprendizado Profundo</code>: Cada erro \u00e9 uma li\u00e7\u00e3o. Ao entender por que um erro ocorreu, voc\u00ea internaliza princ\u00edpios fundamentais de programa\u00e7\u00e3o e evita cometer o mesmo erro no futuro.</p> </li> <li><p><code>Confian\u00e7a</code>: Encarar e superar erros fortalece sua resili\u00eancia e confian\u00e7a como programador. Voc\u00ea se sente mais preparado para enfrentar desafios mais complexos, sabendo que pode decifrar e corrigir problemas que surgirem.</p> </li> </ul>"},{"location":"aulas/ctp/labs/common-errors.html#tipos-comuns-de-erros-em-python","title":"Tipos Comuns de Erros em Python\u00b6","text":"<ol> <li><p><code>Erros de Sintaxe (Syntax Errors)</code>: Estes s\u00e3o os erros mais b\u00e1sicos e geralmente mais f\u00e1ceis de identificar. Eles ocorrem quando o Python n\u00e3o consegue entender seu c\u00f3digo. Pode ser algo simples, como esquecer um <code>: </code>ao definir uma fun\u00e7\u00e3o ou n\u00e3o fechar um par\u00eantese <code>)</code>. A boa not\u00edcia \u00e9 que o interpretador Python geralmente aponta exatamente onde o erro ocorreu, tornando mais f\u00e1cil sua corre\u00e7\u00e3o.</p> </li> <li><p><code>Erros de Runtime (Runtime Errors)</code>: Estes erros s\u00e3o um pouco mais insidiosos, pois s\u00f3 aparecem quando voc\u00ea executa seu programa. Isso inclui coisas como tentar <code>dividir por zero</code>, tentar acessar um arquivo que n\u00e3o existe, ou <code>referenciar uma vari\u00e1vel que n\u00e3o foi definida</code>. Ao contr\u00e1rio dos erros de sintaxe, os erros de runtime podem n\u00e3o ser t\u00e3o diretos para identificar, pois podem depender de condi\u00e7\u00f5es espec\u00edficas dentro do programa.</p> </li> <li><p><code>Erros Sem\u00e2nticos (Semantic Errors)</code>: Estes s\u00e3o os mais desafiadores de todos. Seu programa \u00e9 executado sem erros vis\u00edveis e n\u00e3o retorna nenhuma mensagem de erro. No entanto, ele n\u00e3o faz o que voc\u00ea esperava. O desafio aqui \u00e9 que o interpretador Python n\u00e3o pode ajud\u00e1-lo, pois tecnicamente, tudo est\u00e1 \"correto\". Estes erros exigem uma an\u00e1lise profunda da l\u00f3gica e do fluxo do programa. A depura\u00e7\u00e3o passo a passo e a revis\u00e3o do c\u00f3digo s\u00e3o ferramentas valiosas para identificar onde as coisas deram errado.</p> </li> </ol>"},{"location":"aulas/ctp/labs/common-errors.html#vamos-praticar-um-pouco","title":"Vamos praticar um pouco\u00b6","text":""},{"location":"aulas/ctp/labs/lab-data-types.html","title":"Lab02 - Tipos de dados e Vari\u00e1veis","text":""},{"location":"aulas/ctp/labs/lab-data-types.html#laboratorio-tipos-de-dados","title":"Laborat\u00f3rio: Tipos de Dados","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados a tipos de dados em Python que aprendeu at\u00e9 o momento.</p> <p>Este guia ir\u00e1 orient\u00e1-lo sobre como acessar os desafios de deste laborat\u00f3rio, como resolv\u00ea-los e como submeter seus c\u00f3digos para corre\u00e7\u00e3o autom\u00e1tica.</p>"},{"location":"aulas/ctp/labs/lab-data-types.html#lista-1","title":"Lista 1","text":"<p>Tip</p> <p>Gravei alguns videos com dicas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-data-types.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Primeiro, acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui:https://classroom.github.com/a/zduM4ptG</p> </li> <li> <p>Entre com sua conta do GitHub: Fa\u00e7a a autentica\u00e7\u00e3o com sua conta no GitHub.</p> </li> <li>Aceite o convite para o desafio: Ao acessar o link, voc\u00ea ver\u00e1 um convite para participar do desafio. Clique em \"Aceitar este desafio\" para come\u00e7ar.</li> </ol>"},{"location":"aulas/ctp/labs/lab-data-types.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</li> </ol> <pre><code>   git clone [URL_DO_SEU_REPOSITORIO]\n</code></pre> <ol> <li>Navegue at\u00e9 a pasta do desafio: Use o terminal ou prompt de comando para navegar at\u00e9 a pasta do desafio clonado. comando:</li> </ol> <pre><code>   cd [diretorio]\n</code></pre> <ol> <li>Resolva os problemas: Abra os arquivos de desafio em seu editor de c\u00f3digo favorito, se estiver utilizando o VS-Code digite o comando:</li> </ol> <pre><code>   code .\n</code></pre> <ol> <li> <p>N\u00e3o esque\u00e7a de salvar: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Rode os testes localmente:Voc\u00ea executar os testes localmente em sua m\u00e1quina para verificar sua evolu\u00e7\u00e3o antes de submeter seus c\u00f3digos. Para isso, instale primeiro as bibliotecas necess\u00e1rias executando o comando no CMD:</p> </li> </ol> <pre><code>   pip install -r requirements.txt\n</code></pre> <ol> <li>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</li> </ol> <p><pre><code>   pytest -v\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-data-types.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n</code></pre> <ol> <li>Fa\u00e7a um commit de suas altera\u00e7\u00f5es: </li> </ol> <pre><code>   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n</code></pre> <ol> <li>Envie suas altera\u00e7\u00f5es para o GitHub: </li> </ol> <pre><code>   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-data-types.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-data-types.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Boa sorte com seus desafios e feliz codifica\u00e7\u00e3o!</p>"},{"location":"aulas/ctp/labs/lab-decision-structures.html","title":"Lab03 - Estrutura de Decis\u00e3o","text":""},{"location":"aulas/ctp/labs/lab-decision-structures.html#laboratorio-estrutura-de-decisao","title":"Laborat\u00f3rio: Estrutura de decis\u00e3o","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados a tipos de dados em Python que aprendeu at\u00e9 o momento.</p>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#lista-2-de-exercicios-estrutura-de-decisao","title":"Lista 2 de exerc\u00edcios - Estrutura de decis\u00e3o","text":"<p>Tip</p> <p>Gravei alguns videos com dicas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui:https://classroom.github.com/a/TlhBDKBf</p> </li> </ol>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li> <p>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</p> </li> <li> <p>Resolva os exerc\u00edcios: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</p> </li> </ol> <p><pre><code>   pytest -v -s\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-decision-structures.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Bons estudos!</p>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html","title":"Lab05 - Loops for e while, listas e tuplas","text":""},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#laboratorio-estruturas-de-repeticao-for-e-while-estrutura-de-dados-listas-e-tuplas","title":"Laborat\u00f3rio: Estruturas de repeti\u00e7\u00e3o: <code>for</code> e <code>while</code>, estrutura de dados: <code>listas</code> e <code>tuplas</code>","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados a tipos de dados em Python que apredemos at\u00e9 o momento.</p>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#lista-3-de-exercicios-estruturas-de-repeticao-for-e-while-estrutura-de-dados-listas-e-tuplas","title":"Lista 3 de exerc\u00edcios - Estruturas de repeti\u00e7\u00e3o: <code>for</code> e <code>while</code>. Estrutura de dados: <code>listas</code> e <code>tuplas</code>","text":"<p>Tip</p> <p>Caso tenha d\u00favidas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist com algumas dicas no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui: https://classroom.github.com/a/uQDAVDe0</p> </li> </ol>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li> <p>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</p> </li> <li> <p>Resolva os exerc\u00edcios: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</p> </li> </ol> <p><pre><code>   pytest -v -s\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-loops-data-structures.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Bons estudos!</p>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html","title":"Lab06 - Dicion\u00e1rios, conjuntos e afins...","text":""},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#laboratorio-estrutura-de-dados-dicionarios-e-conjuntos","title":"Laborat\u00f3rio: Estrutura de dados: <code>dicion\u00e1rios</code> e <code>conjuntos</code>","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados a tipos de dados em Python que apredemos at\u00e9 o momento.</p>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#lista-4-de-exercicios-estrutura-de-dados-dicionarios-e-conjuntos","title":"Lista 4 de exerc\u00edcios - Estrutura de dados: <code>dicion\u00e1rios</code> e <code>conjuntos</code>","text":"<p>Tip</p> <p>Caso tenha d\u00favidas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist com algumas dicas no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui: https://classroom.github.com/a/rlvkjzEv</p> </li> </ol>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li> <p>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</p> </li> <li> <p>Resolva os exerc\u00edcios: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</p> </li> </ol> <p><pre><code>   pytest -v -s\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-loops-dict-sets.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Bons estudos!</p>"},{"location":"aulas/ctp/labs/lab-search.html","title":"Lab search","text":""},{"location":"aulas/ctp/labs/lab-search.html#laboratorio-o-problema-da-busca-sequencial-e-binaria","title":"Laborat\u00f3rio: O problema da busca: <code>sequ\u00eancial</code> e <code>bin\u00e1ria</code>","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados ao problema da busca.</p>"},{"location":"aulas/ctp/labs/lab-search.html#lista-7-de-exercicios-o-problema-da-busca-sequencial-e-binaria","title":"Lista 7 de exerc\u00edcios - O problema da busca: <code>sequ\u00eancial</code> e <code>bin\u00e1ria</code>","text":"<p>Tip</p> <p>Caso tenha d\u00favidas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist com algumas dicas no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-search.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui: https://classroom.github.com/a/KcxctpU1</p> </li> </ol>"},{"location":"aulas/ctp/labs/lab-search.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li> <p>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</p> </li> <li> <p>Resolva os exerc\u00edcios: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</p> </li> </ol> <p><pre><code>   pytest -v -s\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-search.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-search.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-search.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Bons estudos!</p>"},{"location":"aulas/ctp/labs/lab-sorting.html","title":"Lab sorting","text":""},{"location":"aulas/ctp/labs/lab-sorting.html#laboratorio-algoritmos-de-ordenacao-bubble-sort-insertion-sort-e-selection-sort","title":"Laborat\u00f3rio: Algoritmos de ordena\u00e7\u00e3o: <code>bubble sort</code>, <code>insertion sort</code> e <code>selection sort</code>","text":"<p>Neste laborat\u00f3rio, voc\u00ea ter\u00e1 a oportunidade de praticar os conceitos relacionados aos Algoritmos de ordena\u00e7\u00e3o.</p>"},{"location":"aulas/ctp/labs/lab-sorting.html#lista-8-de-exercicios-oalgoritmos-de-ordenacao-bubble-sort-insertion-sort-e-selection-sort","title":"Lista 8 de exerc\u00edcios - OAlgoritmos de ordena\u00e7\u00e3o: <code>bubble sort</code>, <code>insertion sort</code> e <code>selection sort</code>","text":"<p>Tip</p> <p>Caso tenha d\u00favidas sobre como come\u00e7ar a resolver a lista de exercicos. Assista a playlist com algumas dicas no link: https://youtu.be/fUHIwrTHZus?si=W3RPVYC9nTsa6Xhq</p>"},{"location":"aulas/ctp/labs/lab-sorting.html#1-acessando-os-desafios","title":"1. Acessando os Desafios","text":"<ol> <li> <p>Acesse o GitHub Classroom: Acesse o link do GitHub Classroom. </p> </li> <li> <p>Clique aqui: https://classroom.github.com/a/lcPCHUYT</p> </li> </ol>"},{"location":"aulas/ctp/labs/lab-sorting.html#2-resolvendo-os-desafios","title":"2. Resolvendo os Desafios","text":"<ol> <li> <p>Clone o reposit\u00f3rio: Uma vez que voc\u00ea aceitou o desafio, voc\u00ea ter\u00e1 seu pr\u00f3prio reposit\u00f3rio. Clone este reposit\u00f3rio para sua m\u00e1quina local, usando o prompt de comando ou terminal digite o comando:</p> </li> <li> <p>Resolva os exerc\u00edcios: Comece a resolver os problemas. <code>Lembre-se de salvar suas altera\u00e7\u00f5es regularmente</code>. O atalho do teclado \u00e9: <code>Crtl + s</code></p> </li> <li> <p>Verificando os testes localmente: Sempre que quiser rodar os testes digite no CMD ou terminal:</p> </li> </ol> <p><pre><code>   pytest -v -s\n</code></pre> Um resumo dos testes ser\u00e1 exibido informando quantos e quais exercicios est\u00e3o corretos.</p>"},{"location":"aulas/ctp/labs/lab-sorting.html#3-submetendo-seus-codigos","title":"3. Submetendo seus C\u00f3digos","text":"<p>Com os desafios finalizados, submeta seu c\u00f3digo para o GiHhub, no prompt de comando ou terminal digite:</p> <ol> <li>Adicione suas altera\u00e7\u00f5es ao Git: No terminal ou prompt de comando, execute:</li> </ol> <pre><code>   git add .\n   git commit -m \"Solu\u00e7\u00e3o dos desafios\"\n   git push origin main\n</code></pre>"},{"location":"aulas/ctp/labs/lab-sorting.html#4-verificando-os-testes-no-github","title":"4. Verificando os Testes no Github","text":"<p>Os desafios possuem testes automaticos, isso significa que voc\u00ea consegue verificar quais e quantos testes est\u00e3o corretos. Para isso:</p> <ol> <li>Acesse seu reposit\u00f3rio no GitHub: Volte ao GitHub e acesse seu reposit\u00f3rio.</li> <li>Verifique o GitHub Actions: Clique na aba \"Actions\" no topo do reposit\u00f3rio. Aqui, voc\u00ea pode ver o status dos testes autom\u00e1ticos.</li> <li>Verifique os resultados: Se seus c\u00f3digos passarem em todos os testes, voc\u00ea ver\u00e1 um \u00edcone verde com a mensagem \"All checks have passed\". Se houver algum erro, voc\u00ea ver\u00e1 um \u00edcone vermelho. Clique nele para ver os detalhes e entender o que deu errado.</li> </ol>"},{"location":"aulas/ctp/labs/lab-sorting.html#5-dicas-importantes","title":"5. Dicas Importantes","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul> <p>Bons estudos!</p>"},{"location":"aulas/ctp/labs/solutions/solution-common-errors.html","title":"Solution common errors","text":"In\u00a0[1]: Copied! <pre>print('Ol\u00e1, mundo!\")\n</pre> print('Ol\u00e1, mundo!\") <pre>\n  File \"&lt;ipython-input-1-15a41a3ccf62&gt;\", line 1\n    print('Ol\u00e1, mundo!\")\n                        ^\nSyntaxError: EOL while scanning string literal\n</pre> In\u00a0[2]: Copied! <pre># Solu\u00e7\u00e3o\nprint(\"Ol\u00e1, mundo!\")\nprint('Ol\u00e1, mundo!')\n</pre> # Solu\u00e7\u00e3o print(\"Ol\u00e1, mundo!\") print('Ol\u00e1, mundo!') <pre>Ol\u00e1, mundo!\nOl\u00e1, mundo!\n</pre> In\u00a0[3]: Copied! <pre>print(\"Ol\u00e1 mundo\"\n</pre> print(\"Ol\u00e1 mundo\" <pre>\n  File \"&lt;ipython-input-3-da27efeb691f&gt;\", line 1\n    print(\"Ol\u00e1 mundo\"\n                     ^\nSyntaxError: unexpected EOF while parsing\n</pre> In\u00a0[4]: Copied! <pre># Solu\u00e7\u00e3o\nprint(\"Ol\u00e1, mundo!\")\n</pre> # Solu\u00e7\u00e3o print(\"Ol\u00e1, mundo!\") <pre>Ol\u00e1, mundo!\n</pre> In\u00a0[5]: Copied! <pre>7casas = 4\n</pre> 7casas = 4 <pre>\n  File \"&lt;ipython-input-5-c269be13d752&gt;\", line 1\n    7casas = 4\n     ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[9]: Copied! <pre># Solu\u00e7\u00e3o\nsete_casas = 4\nseteCasas = 4  ## Camel case\nsete7casas = 4\ncasa = 1\n</pre> # Solu\u00e7\u00e3o sete_casas = 4 seteCasas = 4  ## Camel case sete7casas = 4 casa = 1 In\u00a0[11]: Copied! <pre>str(input(\"digite o primeiro numero\")\n</pre> str(input(\"digite o primeiro numero\") Out[11]: <pre>''</pre> In\u00a0[12]: Copied! <pre># Solu\u00e7\u00e3o\nstr(input(\"digite o primeiro numero\"))\n</pre> # Solu\u00e7\u00e3o str(input(\"digite o primeiro numero\")) Out[12]: <pre>'0'</pre> In\u00a0[13]: Copied! <pre>a = str(input(\"digite o primeiro numero\")) # 3\nb = str(input(\"digite o segundo numero\")) # 3\nprint(a+b) ## concatenando dois valores\n</pre> a = str(input(\"digite o primeiro numero\")) # 3 b = str(input(\"digite o segundo numero\")) # 3 print(a+b) ## concatenando dois valores  <pre>53\n</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o\n\na = float(input(\"digite o primeiro numero (real)\")) # 3\nb = int(input(\"digite o segundo numero (inteiro)\")) # 3\nprint(a+b) ## concatenando dois valores \n\n\n# solu\u00e7\u00e3o2\n\na = str(input(\"digite o primeiro numero (real)\")) # 3\nb = str(input(\"digite o segundo numero (inteiro)\")) # 3\nprint(int(a)+float(b)) ## concatenando dois valores\n</pre> # solu\u00e7\u00e3o  a = float(input(\"digite o primeiro numero (real)\")) # 3 b = int(input(\"digite o segundo numero (inteiro)\")) # 3 print(a+b) ## concatenando dois valores    # solu\u00e7\u00e3o2  a = str(input(\"digite o primeiro numero (real)\")) # 3 b = str(input(\"digite o segundo numero (inteiro)\")) # 3 print(int(a)+float(b)) ## concatenando dois valores  In\u00a0[14]: Copied! <pre>def minha_funcao()\n    return \"Ol\u00e1, mundo!\"\n</pre> def minha_funcao()     return \"Ol\u00e1, mundo!\" <pre>\n  File \"&lt;ipython-input-14-af16dcebc17d&gt;\", line 1\n    def minha_funcao()\n                      ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[18]: Copied! <pre># Solu\u00e7\u00e3o\n\n### fun\u00e7\u00e3o \n# def nome_da_funcao():\n\ndef minha_funcao():\n    return \"Ol\u00e1, mundo!\"\n\n\nresultado = minha_funcao()  ### estou chamando a minha fun\u00e7\u00e3o\nprint(resultado)\n</pre> # Solu\u00e7\u00e3o  ### fun\u00e7\u00e3o  # def nome_da_funcao():  def minha_funcao():     return \"Ol\u00e1, mundo!\"   resultado = minha_funcao()  ### estou chamando a minha fun\u00e7\u00e3o print(resultado) <pre>Ol\u00e1, mundo!\n</pre> In\u00a0[19]: Copied! <pre>idade = 18\nif idade = 18:\n    print(\"Maior de idade\")\n</pre> idade = 18 if idade = 18:     print(\"Maior de idade\") <pre>\n  File \"&lt;ipython-input-19-274b47e24894&gt;\", line 2\n    if idade = 18:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[21]: Copied! <pre># Solu\u00e7\u00e3o\n\nidade = 18   ##### = \u00e9 uma atribui\u00e7\u00e3o,  a variavel idade recebe o valor 18\nif idade == 18:      ###   ==  \u00e9 a forma de fazer compara\u00e7\u00e3o, verdadeiro ou falso\n    print(\"Maior de idade\")\n</pre> # Solu\u00e7\u00e3o  idade = 18   ##### = \u00e9 uma atribui\u00e7\u00e3o,  a variavel idade recebe o valor 18 if idade == 18:      ###   ==  \u00e9 a forma de fazer compara\u00e7\u00e3o, verdadeiro ou falso     print(\"Maior de idade\")  <pre>Maior de idade\n</pre> In\u00a0[26]: Copied! <pre>def saudacao():\nprint(\"Ol\u00e1!\")\n</pre> def saudacao(): print(\"Ol\u00e1!\") <pre>\n  File \"&lt;ipython-input-26-3ca3bbbc0d2b&gt;\", line 2\n    print(\"Ol\u00e1!\")\n    ^\nIndentationError: expected an indented block\n</pre> In\u00a0[27]: Copied! <pre># Solu\u00e7\u00e3o\n\ndef saudacao():\n    print(\"Ol\u00e1!\")\n</pre> # Solu\u00e7\u00e3o  def saudacao():     print(\"Ol\u00e1!\") In\u00a0[28]: Copied! <pre>nome = \"Jo\u00e3o\"\nprint(Nome)\n</pre> nome = \"Jo\u00e3o\" print(Nome) <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-28-0a0afa2a6809&gt; in &lt;module&gt;\n      1 nome = \"Jo\u00e3o\"\n----&gt; 2 print(Nome)\n\nNameError: name 'Nome' is not defined</pre> In\u00a0[29]: Copied! <pre># Solu\u00e7\u00e3o\n\nnome = \"Jo\u00e3o\"\nNome = \"Silva\"\nNoMe = 3\n\n\nprint(Nome) ###  Case sensitive\n</pre> # Solu\u00e7\u00e3o  nome = \"Jo\u00e3o\" Nome = \"Silva\" NoMe = 3   print(Nome) ###  Case sensitive <pre>Silva\n</pre> In\u00a0[30]: Copied! <pre>idade = \"25\"\ntotal = idade + 5\n</pre> idade = \"25\" total = idade + 5 <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-30-021ee738685d&gt; in &lt;module&gt;\n      1 idade = \"25\"\n----&gt; 2 total = idade + 5\n\nTypeError: can only concatenate str (not \"int\") to str</pre> In\u00a0[32]: Copied! <pre># Solu\u00e7\u00e3o\n\nidade = 25\ntotal = idade + 5\nprint(total)\n</pre> # Solu\u00e7\u00e3o  idade = 25 total = idade + 5 print(total) <pre>30\n</pre> In\u00a0[38]: Copied! <pre>#solu\u00e7\u00e3o2 com erro\n\nidade = \"25.4\"  #### esse numero \u00e9 real \ntotal = int(idade) + 5 ### numero real n\u00e3o pertence aos inteiros\nprint(total)\n</pre> #solu\u00e7\u00e3o2 com erro  idade = \"25.4\"  #### esse numero \u00e9 real  total = int(idade) + 5 ### numero real n\u00e3o pertence aos inteiros print(total) <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-38-9c96686f2c74&gt; in &lt;module&gt;\n      2 \n      3 idade = \"25.4\"\n----&gt; 4 total = int(idade) + 5\n      5 print(total)\n\nValueError: invalid literal for int() with base 10: '25.4'</pre> In\u00a0[39]: Copied! <pre>#solu\u00e7\u00e3o2 corrigido\n\nidade = \"25.4\"  #### esse numero \u00e9 real \ntotal = float(idade) + 5 ### numero real n\u00e3o pertence aos inteiros\nprint(total)\n</pre> #solu\u00e7\u00e3o2 corrigido  idade = \"25.4\"  #### esse numero \u00e9 real  total = float(idade) + 5 ### numero real n\u00e3o pertence aos inteiros print(total) <pre>30.4\n</pre> In\u00a0[40]: Copied! <pre>resultado = 10 / 0\n</pre> resultado = 10 / 0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-40-605c3bec262d&gt; in &lt;module&gt;\n----&gt; 1 resultado = 10 / 0\n\nZeroDivisionError: division by zero</pre> In\u00a0[41]: Copied! <pre># Solu\u00e7\u00e3o\n\nresultado = 10 / 0.0000001\n</pre> # Solu\u00e7\u00e3o  resultado = 10 / 0.0000001   In\u00a0[42]: Copied! <pre>import mathh\n</pre> import mathh <pre>\n---------------------------------------------------------------------------\nModuleNotFoundError                       Traceback (most recent call last)\n&lt;ipython-input-42-dafd3c5d3188&gt; in &lt;module&gt;\n----&gt; 1 import mathh\n\nModuleNotFoundError: No module named 'mathh'</pre> In\u00a0[47]: Copied! <pre># Solu\u00e7\u00e3o\nimport math\nimport pandas\nimport pandas as pd\n</pre> # Solu\u00e7\u00e3o import math import pandas import pandas as pd    In\u00a0[50]: Copied! <pre>def somar(a, b):\n    return a + b\n\nresultado = somar(5)\n</pre> def somar(a, b):     return a + b  resultado = somar(5) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-50-072ac009b981&gt; in &lt;module&gt;\n      2     return a + b\n      3 \n----&gt; 4 resultado = somar(5)\n\nTypeError: somar() missing 1 required positional argument: 'b'</pre> In\u00a0[51]: Copied! <pre># Solu\u00e7\u00e3o\ndef somar(a, b):\n    return a + b\n\nresultado = somar(5,5)\n</pre> # Solu\u00e7\u00e3o def somar(a, b):     return a + b  resultado = somar(5,5) In\u00a0[54]: Copied! <pre>int(\"python\")\n</pre> int(\"python\") <pre>\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n&lt;ipython-input-54-9ae652162590&gt; in &lt;module&gt;\n----&gt; 1 int(\"python\")\n\nValueError: invalid literal for int() with base 10: 'python'</pre> In\u00a0[55]: Copied! <pre># Solu\u00e7\u00e3o\n\n\"python\"\n</pre> # Solu\u00e7\u00e3o  \"python\" Out[55]: <pre>'python'</pre> In\u00a0[56]: Copied! <pre>idade = 25\nprint(\"Minha idade \u00e9: \" + idade)\n</pre> idade = 25 print(\"Minha idade \u00e9: \" + idade) <pre>\n---------------------------------------------------------------------------\nTypeError                                 Traceback (most recent call last)\n&lt;ipython-input-56-07d6225f6874&gt; in &lt;module&gt;\n      1 idade = 25\n----&gt; 2 print(\"Minha idade \u00e9: \" + idade)\n\nTypeError: can only concatenate str (not \"int\") to str</pre> In\u00a0[59]: Copied! <pre># Solu\u00e7\u00e3o\n\nidade = 25\nprint(f\"Minha idade \u00e9: {idade}\")  ### f\"   {variavel}  \" dentro de chaves\nprint(\"Minha idade \u00e9:\",idade)\n</pre> # Solu\u00e7\u00e3o  idade = 25 print(f\"Minha idade \u00e9: {idade}\")  ### f\"   {variavel}  \" dentro de chaves print(\"Minha idade \u00e9:\",idade)  <pre>Minha idade \u00e9: 25\nMinha idade \u00e9: 25\n</pre> In\u00a0[58]: Copied! <pre>resultado = multiplica(5, 2)\n</pre> resultado = multiplica(5, 2) <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-58-205222be5016&gt; in &lt;module&gt;\n----&gt; 1 resultado = multiplica(5, 2)\n\nNameError: name 'multiplica' is not defined</pre> In\u00a0[77]: Copied! <pre># Solu\u00e7\u00e3o\ndef multiplica(pedro,jose):\n    return pedro * jose      #### * representa multiplica\u00e7\u00e3o\n\n\nresultado = multiplica(5, 6)\n\nprint(resultado)\n</pre> # Solu\u00e7\u00e3o def multiplica(pedro,jose):     return pedro * jose      #### * representa multiplica\u00e7\u00e3o   resultado = multiplica(5, 6)  print(resultado) <pre>30\n</pre> In\u00a0[62]: Copied! <pre>soma(a, b):\n    return a + b\n</pre> soma(a, b):     return a + b <pre>\n  File \"&lt;ipython-input-62-53b9abc9acb8&gt;\", line 1\n    soma(a, b):\n               ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[63]: Copied! <pre># Solu\u00e7\u00e3o: Esquecer de definir uma fun\u00e7\u00e3o com def\n\ndef soma(a, b):\n    return a + b\n</pre> # Solu\u00e7\u00e3o: Esquecer de definir uma fun\u00e7\u00e3o com def  def soma(a, b):     return a + b  In\u00a0[66]: Copied! <pre>idade = 18\nif idade = 18:\n    idade = 12\nprint(f\"Voc\u00ea tem {idade} anos.\")\n</pre> idade = 18 if idade = 18:     idade = 12 print(f\"Voc\u00ea tem {idade} anos.\") <pre>\n  File \"&lt;ipython-input-66-038a56fc766c&gt;\", line 2\n    if idade = 18:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[70]: Copied! <pre># solu\u00e7\u00e3o: Esquecer o operador de compara\u00e7\u00e3o em uma estrutura condicional\n\nidade = 18\nif idade == 18:\n    idade = 12\n    \nprint(f\"Voc\u00ea tem {idade} anos.\")\n</pre> # solu\u00e7\u00e3o: Esquecer o operador de compara\u00e7\u00e3o em uma estrutura condicional  idade = 18 if idade == 18:     idade = 12      print(f\"Voc\u00ea tem {idade} anos.\")   <pre>Voc\u00ea tem 12 anos.\n</pre> In\u00a0[53]: Copied! <pre>valor = 5\nif valor = 10:\n    valor = 20\n</pre> valor = 5 if valor = 10:     valor = 20 <pre>\n  File \"&lt;ipython-input-53-59ec2c2e20de&gt;\", line 2\n    if valor = 10:\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[71]: Copied! <pre># solu\u00e7\u00e3o: Erro de operador de atribui\u00e7\u00e3o em vez de compara\u00e7\u00e3o\n\nvalor = 5\nif valor == 10:\n    valor = 20\n</pre> # solu\u00e7\u00e3o: Erro de operador de atribui\u00e7\u00e3o em vez de compara\u00e7\u00e3o  valor = 5 if valor == 10:     valor = 20 In\u00a0[78]: Copied! <pre>def soma(a, b):\n    resultado = a + b\n\nprint(soma(5, 3))\nprint(resultado)\n</pre> def soma(a, b):     resultado = a + b  print(soma(5, 3)) print(resultado) <pre>None\n30\n</pre> In\u00a0[81]: Copied! <pre># solu\u00e7\u00e3o \n\ndef soma(a, b):\n    resultado = a + b\n    print(f\"resultado da fun\u00e7\u00e3o {resultado}\")\n    return resultado\n\nprint(soma(5, 3))\nprint(f\"resultado fora da fun\u00e7\u00e3o: {resultado}\")\n</pre> # solu\u00e7\u00e3o   def soma(a, b):     resultado = a + b     print(f\"resultado da fun\u00e7\u00e3o {resultado}\")     return resultado  print(soma(5, 3)) print(f\"resultado fora da fun\u00e7\u00e3o: {resultado}\")   <pre>resultado da fun\u00e7\u00e3o 8\n8\nresultado fora da fun\u00e7\u00e3o: 30\n</pre> In\u00a0[82]: Copied! <pre>if add == 2:\n    add += i\n</pre> if add == 2:     add += i <pre>\n---------------------------------------------------------------------------\nNameError                                 Traceback (most recent call last)\n&lt;ipython-input-82-e57a47ae4057&gt; in &lt;module&gt;\n----&gt; 1 if add == 2:\n      2     add += i\n\nNameError: name 'add' is not defined</pre> In\u00a0[84]: Copied! <pre># solu\u00e7\u00e3o: Esquecer de iniciar uma vari\u00e1vel antes de us\u00e1-la \n\nadd = 2\ni = 1\nif add == 2:\n    add += i   #### add = add + i    C (add++)\n    print(add)\n</pre> # solu\u00e7\u00e3o: Esquecer de iniciar uma vari\u00e1vel antes de us\u00e1-la   add = 2 i = 1 if add == 2:     add += i   #### add = add + i    C (add++)     print(add) <pre>3\n</pre> In\u00a0[24]: Copied! <pre>resto = 10 % 0\n</pre> resto = 10 % 0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-24-8f7f0e98b1d2&gt; in &lt;module&gt;\n----&gt; 1 resto = 10 % 0\n\nZeroDivisionError: integer division or modulo by zero</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o:\n</pre> # solu\u00e7\u00e3o: In\u00a0[64]: Copied! <pre>10/0\n</pre> 10/0 <pre>\n---------------------------------------------------------------------------\nZeroDivisionError                         Traceback (most recent call last)\n&lt;ipython-input-64-e574edb36883&gt; in &lt;module&gt;\n----&gt; 1 10/0\n\nZeroDivisionError: division by zero</pre> In\u00a0[\u00a0]: Copied! <pre># solu\u00e7\u00e3o:\n</pre> # solu\u00e7\u00e3o:  In\u00a0[85]: Copied! <pre>def verificar_igualdade(a, b):\n    return a = b\n\nverificar_igualdade(2, 3)\n</pre> def verificar_igualdade(a, b):     return a = b  verificar_igualdade(2, 3)   <pre>\n  File \"&lt;ipython-input-85-8515e9477153&gt;\", line 2\n    return a = b\n             ^\nSyntaxError: invalid syntax\n</pre> In\u00a0[86]: Copied! <pre># solu\u00e7\u00e3o \n\ndef verificar_igualdade(a, b):\n    return a == b\n\nverificar_igualdade(2, 3)\n</pre> # solu\u00e7\u00e3o   def verificar_igualdade(a, b):     return a == b  verificar_igualdade(2, 3) Out[86]: <pre>False</pre> In\u00a0[70]: Copied! <pre>def calcular_media(a, b):\n    return (a + b) / 3\n\ncalcular_media(8,8)\n</pre> def calcular_media(a, b):     return (a + b) / 3  calcular_media(8,8) Out[70]: <pre>5.333333333333333</pre> In\u00a0[87]: Copied! <pre>#solu\u00e7\u00e3o \n\ndef calcular_media(a, b):\n    return (a + b) / 2   #### tem que dividir por 2\n\ncalcular_media(8,8)\n</pre> #solu\u00e7\u00e3o   def calcular_media(a, b):     return (a + b) / 2   #### tem que dividir por 2  calcular_media(8,8) Out[87]: <pre>8.0</pre>"},{"location":"aulas/ctp/labs/solutions/solution-common-errors.html#solucao-ixiii-deu-erro-e-agora","title":"Solu\u00e7\u00e3o - Ixiii... Deu Erro! e agora?\u00b6","text":"<p>A Import\u00e2ncia de Interpretar Erros no Python</p> <p>Programar \u00e9 uma atividade desafiadora. N\u00e3o importa o seu n\u00edvel de conhecimento, inevitavelmente encontrar\u00e1 erros em seu c\u00f3digo.</p> <p>No entanto, esses erros n\u00e3o s\u00e3o simplesmente obst\u00e1culos; eles s\u00e3o oportunidades valiosas de aprendizado. Interpretar erros em Python \u00e9 uma habilidade crucial por v\u00e1rias raz\u00f5es:</p> <ul> <li><p><code>Diagn\u00f3stico R\u00e1pido</code>: Compreender a mensagem de erro acelera o processo de identifica\u00e7\u00e3o do problema. Em vez de vasculhar linhas e linhas de c\u00f3digo, voc\u00ea pode ir direto ao ponto problem\u00e1tico.</p> </li> <li><p><code>Desenvolvimento de Solu\u00e7\u00e3o</code>: Uma interpreta\u00e7\u00e3o precisa do erro fornece insights sobre como corrigi-lo. Isso economiza tempo e reduz a <code>frustra\u00e7\u00e3o</code> associada \u00e0 tentativa e erro.</p> </li> <li><p><code>Aprendizado Profundo</code>: Cada erro \u00e9 uma li\u00e7\u00e3o. Ao entender por que um erro ocorreu, voc\u00ea internaliza princ\u00edpios fundamentais de programa\u00e7\u00e3o e evita cometer o mesmo erro no futuro.</p> </li> <li><p><code>Confian\u00e7a</code>: Encarar e superar erros fortalece sua resili\u00eancia e confian\u00e7a como programador. Voc\u00ea se sente mais preparado para enfrentar desafios mais complexos, sabendo que pode decifrar e corrigir problemas que surgirem.</p> </li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-common-errors.html#tipos-comuns-de-erros-em-python","title":"Tipos Comuns de Erros em Python\u00b6","text":"<ol> <li><p><code>Erros de Sintaxe (Syntax Errors)</code>: Estes s\u00e3o os erros mais b\u00e1sicos e geralmente mais f\u00e1ceis de identificar. Eles ocorrem quando o Python n\u00e3o consegue entender seu c\u00f3digo. Pode ser algo simples, como esquecer um <code>: </code>ao definir uma fun\u00e7\u00e3o ou n\u00e3o fechar um par\u00eantese <code>)</code>. A boa not\u00edcia \u00e9 que o interpretador Python geralmente aponta exatamente onde o erro ocorreu, tornando mais f\u00e1cil sua corre\u00e7\u00e3o.</p> </li> <li><p><code>Erros de Runtime (Runtime Errors)</code>: Estes erros s\u00e3o um pouco mais insidiosos, pois s\u00f3 aparecem quando voc\u00ea executa seu programa. Isso inclui coisas como tentar <code>dividir por zero</code>, tentar acessar um arquivo que n\u00e3o existe, ou <code>referenciar uma vari\u00e1vel que n\u00e3o foi definida</code>. Ao contr\u00e1rio dos erros de sintaxe, os erros de runtime podem n\u00e3o ser t\u00e3o diretos para identificar, pois podem depender de condi\u00e7\u00f5es espec\u00edficas dentro do programa.</p> </li> <li><p><code>Erros Sem\u00e2nticos (Semantic Errors)</code>: Estes s\u00e3o os mais desafiadores de todos. Seu programa \u00e9 executado sem erros vis\u00edveis e n\u00e3o retorna nenhuma mensagem de erro. No entanto, ele n\u00e3o faz o que voc\u00ea esperava. O desafio aqui \u00e9 que o interpretador Python n\u00e3o pode ajud\u00e1-lo, pois tecnicamente, tudo est\u00e1 \"correto\". Estes erros exigem uma an\u00e1lise profunda da l\u00f3gica e do fluxo do programa. A depura\u00e7\u00e3o passo a passo e a revis\u00e3o do c\u00f3digo s\u00e3o ferramentas valiosas para identificar onde as coisas deram errado.</p> </li> </ol>"},{"location":"aulas/ctp/labs/solutions/solution-common-errors.html#vamos-praticar-um-pouco","title":"Vamos praticar um pouco\u00b6","text":""},{"location":"aulas/ctp/labs/solutions/solution-data-types.html","title":"Lab02 - Tipos de dados e Vari\u00e1veis","text":"In\u00a0[18]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\nnome = \"Python\"\n</pre> # Sua solu\u00e7\u00e3o aqui  nome = \"Python\" In\u00a0[19]: Copied! <pre>a = 10\nb = 20\n# Sua solu\u00e7\u00e3o aqui\n\nresultado_soma = a+b\n</pre> a = 10 b = 20 # Sua solu\u00e7\u00e3o aqui  resultado_soma = a+b In\u00a0[17]: Copied! <pre>valor = 123.45\n# Sua solu\u00e7\u00e3o aqui\n\ntipo_valor = type(valor)\n</pre> valor = 123.45 # Sua solu\u00e7\u00e3o aqui  tipo_valor = type(valor) <p>Determine se <code>x</code> \u00e9 maior que <code>y</code> e armazene o resultado na vari\u00e1vel <code>x_maior_que_y</code>.</p> In\u00a0[16]: Copied! <pre>x = 15\ny = 10\n# Sua solu\u00e7\u00e3o aqui\nx_maior_que_y = x &gt; y\n</pre> x = 15 y = 10 # Sua solu\u00e7\u00e3o aqui x_maior_que_y = x &gt; y <p>Calcule a subtra\u00e7\u00e3o de <code>x</code> e <code>y</code> e armazene o resultado na vari\u00e1vel <code>resultado_subtacao</code>.</p> In\u00a0[25]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\nresultado_subtacao = x - y\n</pre> # Sua solu\u00e7\u00e3o aqui  resultado_subtacao = x - y <p>Calcule a divis\u00e3o de <code>x</code> e <code>y</code> e armazene o resultado na vari\u00e1vel <code>resultado_divisao</code>.</p> In\u00a0[24]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\nresultado_divisao = x / y\n</pre> # Sua solu\u00e7\u00e3o aqui  resultado_divisao = x / y  <p>Calcule a divis\u00e3o inteira de <code>x</code> e <code>y</code> e armazene o resultado na vari\u00e1vel <code>resultado_divisao_inteira</code>.</p> In\u00a0[23]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\ndivisao_inteira = x // y\n</pre> # Sua solu\u00e7\u00e3o aqui  divisao_inteira = x // y <p>Calcule a exponencia\u00e7\u00e3o de <code>x</code> elevado a <code>y</code> e armazene o resultado na vari\u00e1vel <code>resultado_exponenciacao</code>.</p> In\u00a0[27]: Copied! <pre># sua solu\u00e7\u00e3o aqui\n\nresultado_exponenciacao = x ** y\n</pre> # sua solu\u00e7\u00e3o aqui  resultado_exponenciacao = x ** y <p>Declare a vari\u00e1vel <code>Celsius</code> que recebe o valor de 24 \u00baC. Converta essa temperatura para Fahrenheit e armazene na variavel <code>fahrenheit</code>.</p> In\u00a0[2]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\ncelsius = 0\n\nfahrenheit = (celsius * 9/5) + 32\n</pre> # Sua solu\u00e7\u00e3o aqui  celsius = 0  fahrenheit = (celsius * 9/5) + 32  <pre>32.0\n</pre> <p>Determine a m\u00e9dia das notas e atribua o resultado a variavel <code>media</code>.</p> In\u00a0[5]: Copied! <pre>nota1 = 5\nnota2 = 8.6\nnota3 = 9.2\n# Sua solu\u00e7\u00e3o aqui\n\nmedia = (nota1 + nota2 + nota3) / 3\n</pre> nota1 = 5 nota2 = 8.6 nota3 = 9.2 # Sua solu\u00e7\u00e3o aqui  media = (nota1 + nota2 + nota3) / 3 <p>Declare uma vari\u00e1vel chamada <code>nome_completo</code> que concatena as variaveis <code>nome1</code> e <code>sobrenome</code>.</p> In\u00a0[7]: Copied! <pre>nome1 = \"Jo\u00e3o\"\nsobrenome = \"Silva\"\n\n# seu c\u00f3digo aqui\n\nnome_completo = nome1 + \" \" + sobrenome\n</pre> nome1 = \"Jo\u00e3o\" sobrenome = \"Silva\"  # seu c\u00f3digo aqui  nome_completo = nome1 + \" \" + sobrenome <p>Escreva o c\u00f3digo que remova espa\u00e7os em branco no in\u00edcio e no final da variavel <code>materia</code> e salva na propria vari\u00e1vel <code>materia</code></p> In\u00a0[8]: Copied! <pre>materia = \"   Computacional Thinking   \"\n\n#Sua resposta aqui\n\nmateria = materia.strip()\n</pre> materia = \"   Computacional Thinking   \"  #Sua resposta aqui  materia = materia.strip()    <p>Declare uma vari\u00e1vel chamada <code>texto_maiusculo</code> que converte para mai\u00fasculo o conte\u00fado da variavel <code>texto</code>.</p> In\u00a0[13]: Copied! <pre>texto = \"Ol\u00e1, Mundo!\"\n\n# Sua resposta aqui \n\ntexto_maiusculo = texto.upper()  # Converte para mai\u00fasculas\n</pre> texto = \"Ol\u00e1, Mundo!\"  # Sua resposta aqui   texto_maiusculo = texto.upper()  # Converte para mai\u00fasculas  <p>Declare uma vari\u00e1vel chamada <code>texto_substituido</code> que Substitui \"Mundo\" por \"Universo\" da variavel <code>texto</code>.</p> In\u00a0[28]: Copied! <pre># sua solu\u00e7\u00e3o aqui\n\ntexto_substituido = texto.replace(\"Mundo\", \"Universo\")  # Substitui \"Mundo\" por \"Universo\"\n</pre> # sua solu\u00e7\u00e3o aqui  texto_substituido = texto.replace(\"Mundo\", \"Universo\")  # Substitui \"Mundo\" por \"Universo\" <p>Converta esse valor <code>real</code> para d\u00f3lares e salve em <code>dolar</code> use 2 casas decimais na resposta. Considere que 1 dolar \u00e9 equivalente 5,23 reais.</p> In\u00a0[33]: Copied! <pre>real = 862.78\n\n# Sua solu\u00e7\u00e3o aqui\n\ndolar = round(real / 5.23,2)\n</pre> real = 862.78  # Sua solu\u00e7\u00e3o aqui  dolar = round(real / 5.23,2) <p>Um m\u00f3bile de ber\u00e7o de beb\u00ea \u00e9 composto de tr\u00eas hastes como mostrado na figura. Para que ele esteja completamente equilibrado, com todas as hastes na horizontal, os pesos das quatro bolas A, B, C e D t\u00eam que satisfazer todas as seguintes tr\u00eas condi\u00e7\u00f5es:</p> <ul> <li>A = B + C + D; e</li> <li>B + C = D; e</li> <li>B = C</li> </ul> <p>Crie a variavel <code>esta_equilibrado</code> \u00e9 do tipo booleana e retorna <code>true</code> quando as 4 entradas est\u00e3o em equilibrio e <code>false</code> quando n\u00e3o est\u00e3o em equilibrio.</p> <p>Dica: a saida ser\u00e1 verdadeira para: A = 12; B = 3; C = 3; D = 6.</p> In\u00a0[39]: Copied! <pre># Sua solu\u00e7\u00e3o aqui\n\nesta_equilibrado = ( A == B + C + D ) and (B + C == D) and (B == C)\nesta_equilibrado\n</pre>  # Sua solu\u00e7\u00e3o aqui  esta_equilibrado = ( A == B + C + D ) and (B + C == D) and (B == C) esta_equilibrado Out[39]: <pre>False</pre>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#solucao-exercicios-com-tipos-de-dados-e-variaveis","title":"Solu\u00e7\u00e3o Exerc\u00edcios com Tipos de dados e Vari\u00e1veis\u00b6","text":"<p>Neste notebook, voc\u00ea encontrar\u00e1 exerc\u00edcios relacionados a vari\u00e1veis, tipos de dados, opera\u00e7\u00f5es l\u00f3gicas e matem\u00e1ticas.</p>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#dicas-importantes","title":"Dicas Importantes\u00b6","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#exemplo-resolvido","title":"Exemplo Resolvido:\u00b6","text":"<p>Declare uma vari\u00e1vel chamada <code>nome</code> e atribua a ela o valor \"Python\".</p>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#exemplo-resolvido","title":"Exemplo Resolvido:\u00b6","text":"<p>Calcule a soma de <code>a</code> e <code>b</code> e armazene o resultado na vari\u00e1vel <code>resultado_soma</code>.</p>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#agora-e-com-voce","title":"Agora \u00e9 com voc\u00ea:\u00b6","text":"<p>Resolva os exercicios abaixo</p>"},{"location":"aulas/ctp/labs/solutions/solution-data-types.html#exercicios","title":"Exercicios\u00b6","text":"<p>Determine o tipo de dado da vari\u00e1vel <code>valor</code> e armazene-o na vari\u00e1vel <code>tipo_valor</code>. Dica: use a fun\u00e7\u00e3o <code>type()</code></p>"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html","title":"Lab03 - Estrutura de Decis\u00e3o","text":"In\u00a0[6]: Copied! <pre>\"\"\"\n\n \u00c9 fornecida uma estrutura para resolver o problema. \n \n Fique ligado! Voc\u00ea deve seguir essa estrudada para evitar erros durante a execu\u00e7\u00e3o dos testes de valida\u00e7\u00e3o com o `pytest`\n\n Escreva a sua resposta dentra da fun\u00e7\u00e3o, na indica\u00e7\u00e3o ` # implemente seu c\u00f3digo aqui`\n\n\"\"\"\n\ndef avaliar_temperatura(temp):\n\n    # implemente seu c\u00f3digo aqui\n    \n    \n    pass  ## quando implementar apague essa linha\n\n\n\n\n\"\"\"\nEm alguns exercicios \u00e9 fornecida uma estrutura para voc\u00ea testar e validar seu c\u00f3digo inputando a entrada que queira, isso ajuda a validar sua logica de programa\u00e7\u00e3o\n\n\"\"\"\n\n# Teste (para voc\u00ea testar seu c\u00f3digo) \nvalor = float(input(\"Digite a temperatura: \"))\nresultado = avaliar_temperatura(valor)\nprint(f\"Hoje o clima est\u00e1: {resultado}\")\n</pre> \"\"\"   \u00c9 fornecida uma estrutura para resolver o problema.     Fique ligado! Voc\u00ea deve seguir essa estrudada para evitar erros durante a execu\u00e7\u00e3o dos testes de valida\u00e7\u00e3o com o `pytest`   Escreva a sua resposta dentra da fun\u00e7\u00e3o, na indica\u00e7\u00e3o ` # implemente seu c\u00f3digo aqui`  \"\"\"  def avaliar_temperatura(temp):      # implemente seu c\u00f3digo aqui               pass  ## quando implementar apague essa linha     \"\"\" Em alguns exercicios \u00e9 fornecida uma estrutura para voc\u00ea testar e validar seu c\u00f3digo inputando a entrada que queira, isso ajuda a validar sua logica de programa\u00e7\u00e3o  \"\"\"  # Teste (para voc\u00ea testar seu c\u00f3digo)  valor = float(input(\"Digite a temperatura: \")) resultado = avaliar_temperatura(valor) print(f\"Hoje o clima est\u00e1: {resultado}\")  <pre>Hoje o clima est\u00e1: None\n</pre> In\u00a0[41]: Copied! <pre>## uma possivel solu\u00e7\u00e3o para esse problema\n\ndef avaliar_temperatura(temp):\n\n    # implemente seu c\u00f3digo aqui\n    \n    if temp &gt; 25:\n        return \"quente!\"\n    elif temp &lt; 18:\n        return \"frio!\"\n    else:\n        return \"ameno!\"\n\n\n# Teste (para voc\u00ea testar seu c\u00f3digo) \nvalor = float(input(\"Digite a temperatura: \"))\nresultado = avaliar_temperatura(valor)\nprint(f\"Hoje o clima est\u00e1: {resultado}\")\n</pre> ## uma possivel solu\u00e7\u00e3o para esse problema  def avaliar_temperatura(temp):      # implemente seu c\u00f3digo aqui          if temp &gt; 25:         return \"quente!\"     elif temp &lt; 18:         return \"frio!\"     else:         return \"ameno!\"   # Teste (para voc\u00ea testar seu c\u00f3digo)  valor = float(input(\"Digite a temperatura: \")) resultado = avaliar_temperatura(valor) print(f\"Hoje o clima est\u00e1: {resultado}\")  <pre>Hoje o clima est\u00e1: ameno!\n</pre> In\u00a0[30]: Copied! <pre>def conversor_notas(nota):\n    if 90 &lt;= nota &lt;= 100:\n        return \"A\"\n    elif 80 &lt;= nota &lt; 90:\n        return \"B\"\n    elif 70 &lt;= nota &lt; 80:\n        return \"C\"\n    elif 60 &lt;= nota &lt; 70:\n        return \"D\"\n    else:\n        return \"F\"\n\n# Teste \nnota = float(input(\"Digite a nota (0 a 100): \"))\nprint(f\"A nota convertida \u00e9: {conversor_notas(nota)}\")\n</pre> def conversor_notas(nota):     if 90 &lt;= nota &lt;= 100:         return \"A\"     elif 80 &lt;= nota &lt; 90:         return \"B\"     elif 70 &lt;= nota &lt; 80:         return \"C\"     elif 60 &lt;= nota &lt; 70:         return \"D\"     else:         return \"F\"  # Teste  nota = float(input(\"Digite a nota (0 a 100): \")) print(f\"A nota convertida \u00e9: {conversor_notas(nota)}\")     <pre>A nota convertida \u00e9: B\n</pre> In\u00a0[\u00a0]: Copied! <pre>def maior_numero(a, b, c):\n    if a &gt; b and a &gt; c:\n        return a\n    elif b &gt; a and b &gt; c:\n        return b\n    else:\n        return c\n\n# Teste\nnum1 = float(input(\"Digite o primeiro n\u00famero: \"))\nnum2 = float(input(\"Digite o segundo n\u00famero: \"))\nnum3 = float(input(\"Digite o terceiro n\u00famero: \"))\nprint(f\"O maior n\u00famero \u00e9: {maior_numero(num1, num2, num3)}\")\n</pre> def maior_numero(a, b, c):     if a &gt; b and a &gt; c:         return a     elif b &gt; a and b &gt; c:         return b     else:         return c  # Teste num1 = float(input(\"Digite o primeiro n\u00famero: \")) num2 = float(input(\"Digite o segundo n\u00famero: \")) num3 = float(input(\"Digite o terceiro n\u00famero: \")) print(f\"O maior n\u00famero \u00e9: {maior_numero(num1, num2, num3)}\")  In\u00a0[\u00a0]: Copied! <pre>def verificar_paridade(numero):\n    return \"par\" if numero % 2 == 0 else \"\u00edmpar\"\n\n# Teste\nnum = float(input(\"Digite um n\u00famero: \"))\nprint(f\"O n\u00famero \u00e9 {verificar_paridade(num)}\")\n</pre>  def verificar_paridade(numero):     return \"par\" if numero % 2 == 0 else \"\u00edmpar\"  # Teste num = float(input(\"Digite um n\u00famero: \")) print(f\"O n\u00famero \u00e9 {verificar_paridade(num)}\")  In\u00a0[\u00a0]: Copied! <pre>def calcular_preco(produto_preco, quantidade):\n    if quantidade &gt; 10:\n        return produto_preco * quantidade * 0.9\n    else:\n        return produto_preco * quantidade\n\n# Teste\npreco = float(input(\"Digite o pre\u00e7o do produto: \"))\nquant = int(input(\"Digite a quantidade comprada: \"))\nprint(f\"O valor total \u00e9: {calcular_preco(preco, quant):.2f}\")\n</pre>  def calcular_preco(produto_preco, quantidade):     if quantidade &gt; 10:         return produto_preco * quantidade * 0.9     else:         return produto_preco * quantidade  # Teste preco = float(input(\"Digite o pre\u00e7o do produto: \")) quant = int(input(\"Digite a quantidade comprada: \")) print(f\"O valor total \u00e9: {calcular_preco(preco, quant):.2f}\")  In\u00a0[\u00a0]: Copied! <pre>def calculadora(num1, num2, operacao):\n    if operacao == \"soma\":\n        return num1 + num2\n    elif operacao == \"subtra\u00e7\u00e3o\":\n        return num1 - num2\n    elif operacao == \"multiplica\u00e7\u00e3o\":\n        return num1 * num2\n    elif operacao == \"divis\u00e3o\":\n        if num2 == 0:\n            return \"Erro: Divis\u00e3o por zero\"\n        return num1 / num2\n    else:\n        return \"Opera\u00e7\u00e3o inv\u00e1lida\"\n\n# Teste\nn1 = float(input(\"Digite o primeiro n\u00famero: \"))\nn2 = float(input(\"Digite o segundo n\u00famero: \"))\nop = input(\"Digite a opera\u00e7\u00e3o (soma, subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o, divis\u00e3o): \")\nprint(f\"Resultado: {calculadora(n1, n2, op)}\")\n</pre>  def calculadora(num1, num2, operacao):     if operacao == \"soma\":         return num1 + num2     elif operacao == \"subtra\u00e7\u00e3o\":         return num1 - num2     elif operacao == \"multiplica\u00e7\u00e3o\":         return num1 * num2     elif operacao == \"divis\u00e3o\":         if num2 == 0:             return \"Erro: Divis\u00e3o por zero\"         return num1 / num2     else:         return \"Opera\u00e7\u00e3o inv\u00e1lida\"  # Teste n1 = float(input(\"Digite o primeiro n\u00famero: \")) n2 = float(input(\"Digite o segundo n\u00famero: \")) op = input(\"Digite a opera\u00e7\u00e3o (soma, subtra\u00e7\u00e3o, multiplica\u00e7\u00e3o, divis\u00e3o): \") print(f\"Resultado: {calculadora(n1, n2, op)}\")  In\u00a0[\u00a0]: Copied! <pre>def determinar_quadrante(x, y):\n    if x &gt; 0 and y &gt; 0:\n        return \"Quadrante I\"\n    elif x &lt; 0 and y &gt; 0:\n        return \"Quadrante II\"\n    elif x &lt; 0 and y &lt; 0:\n        return \"Quadrante III\"\n    elif x &gt; 0 and y &lt; 0:\n        return \"Quadrante IV\"\n    elif x == 0 and y == 0:\n        return \"Origem\"\n    else:\n        return \"Sobre um dos eixos\"\n\n# Teste\ncoord_x = float(input(\"Digite a coordenada x: \"))\ncoord_y = float(input(\"Digite a coordenada y: \"))\nprint(f\"O ponto est\u00e1 no {determinar_quadrante(coord_x, coord_y)}\")\n</pre>  def determinar_quadrante(x, y):     if x &gt; 0 and y &gt; 0:         return \"Quadrante I\"     elif x &lt; 0 and y &gt; 0:         return \"Quadrante II\"     elif x &lt; 0 and y &lt; 0:         return \"Quadrante III\"     elif x &gt; 0 and y &lt; 0:         return \"Quadrante IV\"     elif x == 0 and y == 0:         return \"Origem\"     else:         return \"Sobre um dos eixos\"  # Teste coord_x = float(input(\"Digite a coordenada x: \")) coord_y = float(input(\"Digite a coordenada y: \")) print(f\"O ponto est\u00e1 no {determinar_quadrante(coord_x, coord_y)}\")  In\u00a0[\u00a0]: Copied! <pre>def analisar_desempenho(nota1, nota2, nota3):\n    media = (nota1 + nota2 + nota3) / 3\n    print(media)\n    if media &gt;= 70 and nota1 &gt;= 50 and nota2 &gt;= 50 and nota3 &gt;= 50:\n        return \"Aprovado\"\n    elif media &lt; 70 and ((nota1 &lt; 50 and (nota2 &lt; 50 or nota3 &lt; 50)) or (nota2 &lt; 50 and nota3 &lt; 50 )):\n        return \"Reprovado\"\n    else:\n        return \"Recupera\u00e7\u00e3o\"\n\n\n\n# Teste\nnota_1 = float(input(\"Digite a primeira nota: \"))\nnota_2 = float(input(\"Digite a segunda nota: \"))\nnota_3 = float(input(\"Digite a terceira nota: \"))\nprint(f\"O aluno foi {analisar_desempenho(nota_1, nota_2, nota_3)}\")\n</pre>  def analisar_desempenho(nota1, nota2, nota3):     media = (nota1 + nota2 + nota3) / 3     print(media)     if media &gt;= 70 and nota1 &gt;= 50 and nota2 &gt;= 50 and nota3 &gt;= 50:         return \"Aprovado\"     elif media &lt; 70 and ((nota1 &lt; 50 and (nota2 &lt; 50 or nota3 &lt; 50)) or (nota2 &lt; 50 and nota3 &lt; 50 )):         return \"Reprovado\"     else:         return \"Recupera\u00e7\u00e3o\"    # Teste nota_1 = float(input(\"Digite a primeira nota: \")) nota_2 = float(input(\"Digite a segunda nota: \")) nota_3 = float(input(\"Digite a terceira nota: \")) print(f\"O aluno foi {analisar_desempenho(nota_1, nota_2, nota_3)}\")  In\u00a0[\u00a0]: Copied! <pre>def verificar_triangulo(lado1, lado2, lado3):\n    if (lado1 + lado2 &gt; lado3) and (lado1 + lado3 &gt; lado2) and (lado2 + lado3 &gt; lado1):\n        if lado1 == lado2 == lado3:\n            return \"Equil\u00e1tero\"\n        elif lado1 == lado2 or lado1 == lado3 or lado2 == lado3:\n            return \"Is\u00f3sceles\"\n        else:\n            return \"Escaleno\"\n    else:\n        return \"N\u00e3o forma um tri\u00e2ngulo\"\n\n# Teste\nl1 = float(input(\"Digite o primeiro lado: \"))\nl2 = float(input(\"Digite o segundo lado: \"))\nl3 = float(input(\"Digite o terceiro lado: \"))\nprint(f\"O tri\u00e2ngulo \u00e9 {verificar_triangulo(l1, l2, l3)}\")\n</pre>  def verificar_triangulo(lado1, lado2, lado3):     if (lado1 + lado2 &gt; lado3) and (lado1 + lado3 &gt; lado2) and (lado2 + lado3 &gt; lado1):         if lado1 == lado2 == lado3:             return \"Equil\u00e1tero\"         elif lado1 == lado2 or lado1 == lado3 or lado2 == lado3:             return \"Is\u00f3sceles\"         else:             return \"Escaleno\"     else:         return \"N\u00e3o forma um tri\u00e2ngulo\"  # Teste l1 = float(input(\"Digite o primeiro lado: \")) l2 = float(input(\"Digite o segundo lado: \")) l3 = float(input(\"Digite o terceiro lado: \")) print(f\"O tri\u00e2ngulo \u00e9 {verificar_triangulo(l1, l2, l3)}\")  In\u00a0[\u00a0]: Copied! <pre>def e_bissexto(ano):\n    if (ano%4==0 and ano%100!=0) or (ano%400==0):\n        return True\n    else:\n        return False\n    \nano= int(input(\"Digite o ano: \"))\nprint(f\"O ano {ano} \u00e9 bissexto? {e_bissexto(ano)}\")\n</pre> def e_bissexto(ano):     if (ano%4==0 and ano%100!=0) or (ano%400==0):         return True     else:         return False      ano= int(input(\"Digite o ano: \")) print(f\"O ano {ano} \u00e9 bissexto? {e_bissexto(ano)}\") In\u00a0[\u00a0]: Copied! <pre># # Fun\u00e7\u00e3o para verificar se um ano \u00e9 bissext\n# def e_bissexto(ano):\n#     return (ano % 4 == 0 and ano % 100 != 0) or (ano % 400 == 0)\n\ndef verificar_data_valida(data):\n\n    # Dividir a string de entrada e verificar se est\u00e1 no formato correto\n    partes = data.split(\"/\")\n    if len(partes) == 3:\n        dia, mes, ano = partes\n    else:\n        return False\n    if len(dia)!= 2 or len(mes)!= 2 or len(ano) != 4:\n        return False\n    else:\n        dia = int(dia)\n        mes = int(mes)\n        ano = int(ano)\n\n    # Verifica o dia\n    if (dia &gt;=1 and dia &lt;=31) and (mes &gt;=1 and mes &lt;=12) and (ano &gt; 0 ):\n        # Verifica fevereiro\n        if mes==2:\n            if e_bissexto(ano) and dia &gt; 29:\n                return False\n            elif not(e_bissexto(ano)) and dia &gt;28:\n                return False\n\n        # verifica os outros meses se est\u00e3o ok com 31\n        if (mes == 4 or mes == 6 or mes == 9 or mes ==11) and dia ==31:\n            return False\n    else:\n        return False\n    \n    return True\n\n# Teste\ndata = str(input(\"Digite a data no formato dd/mm/aaaa: \"))\nprint(f\"{data} \u00e9 valida? {verificar_data_valida(data)}\")\n</pre> # # Fun\u00e7\u00e3o para verificar se um ano \u00e9 bissext # def e_bissexto(ano): #     return (ano % 4 == 0 and ano % 100 != 0) or (ano % 400 == 0)  def verificar_data_valida(data):      # Dividir a string de entrada e verificar se est\u00e1 no formato correto     partes = data.split(\"/\")     if len(partes) == 3:         dia, mes, ano = partes     else:         return False     if len(dia)!= 2 or len(mes)!= 2 or len(ano) != 4:         return False     else:         dia = int(dia)         mes = int(mes)         ano = int(ano)      # Verifica o dia     if (dia &gt;=1 and dia &lt;=31) and (mes &gt;=1 and mes &lt;=12) and (ano &gt; 0 ):         # Verifica fevereiro         if mes==2:             if e_bissexto(ano) and dia &gt; 29:                 return False             elif not(e_bissexto(ano)) and dia &gt;28:                 return False          # verifica os outros meses se est\u00e3o ok com 31         if (mes == 4 or mes == 6 or mes == 9 or mes ==11) and dia ==31:             return False     else:         return False          return True  # Teste data = str(input(\"Digite a data no formato dd/mm/aaaa: \")) print(f\"{data} \u00e9 valida? {verificar_data_valida(data)}\")  In\u00a0[\u00a0]: Copied! <pre>def converter_temperatura(temp, escala):\n    if escala == \"C\":\n        fahrenheit = (temp * 9/5) + 32\n        kelvin = temp + 273.15\n        return f\"Fahrenheit: {fahrenheit}\u00b0F, Kelvin: {kelvin}K\"\n    elif escala == \"F\":\n        celsius = (temp - 32) * 5/9\n        kelvin = celsius + 273.15\n        return f\"Celsius: {celsius}\u00b0C, Kelvin: {kelvin}K\"\n    elif escala == \"K\":\n        celsius = temp - 273.15\n        fahrenheit = (celsius * 9/5) + 32\n        return f\"Celsius: {celsius}\u00b0C, Fahrenheit: {fahrenheit}\u00b0F\"\n    else:\n        return \"Escala inv\u00e1lida\"\n\n# Teste\ntemperatura = float(input(\"Digite a temperatura: \"))\nesc = input(\"Digite a escala (C, F, K): \").upper()\nprint(converter_temperatura(temperatura, esc))\n</pre>  def converter_temperatura(temp, escala):     if escala == \"C\":         fahrenheit = (temp * 9/5) + 32         kelvin = temp + 273.15         return f\"Fahrenheit: {fahrenheit}\u00b0F, Kelvin: {kelvin}K\"     elif escala == \"F\":         celsius = (temp - 32) * 5/9         kelvin = celsius + 273.15         return f\"Celsius: {celsius}\u00b0C, Kelvin: {kelvin}K\"     elif escala == \"K\":         celsius = temp - 273.15         fahrenheit = (celsius * 9/5) + 32         return f\"Celsius: {celsius}\u00b0C, Fahrenheit: {fahrenheit}\u00b0F\"     else:         return \"Escala inv\u00e1lida\"  # Teste temperatura = float(input(\"Digite a temperatura: \")) esc = input(\"Digite a escala (C, F, K): \").upper() print(converter_temperatura(temperatura, esc))"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html#solucao-exercicios-com-estruturas-de-decisao","title":"Solu\u00e7\u00e3o Exerc\u00edcios com Estruturas de decis\u00e3o\u00b6","text":"<p>Neste notebook, voc\u00ea encontrar\u00e1 exerc\u00edcios relacionados a Estruturas de decis\u00e3o.</p>"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html#dicas-importantes","title":"Dicas Importantes\u00b6","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html#exemplo-resolvido","title":"Exemplo Resolvido:\u00b6","text":"<p>Escreva um programa que receba um valor de temperatura e exibe o estado do clima. Considere:</p> <ul> <li>temperatura &gt; 25 retorna \"quente!\"</li> <li>temperatura &lt; 18 retorna \"frio!\"</li> <li>18 &lt;= temperatura &lt;= 25 retorna \"ameno!\"</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html#agora-que-e-com-voce","title":"Agora que \u00e9 com voc\u00ea\u00b6","text":"<p>bom trabalho dev!</p>"},{"location":"aulas/ctp/labs/solutions/solution-decision-structures.html#exercicio-1-conversor-de-notas","title":"Exercicio 1 - Conversor de Notas:\u00b6","text":"<p>Escreva um programa que receba uma nota (0 a 100) e converta conforme o seguinte:</p> <ul> <li>90 a 100: A</li> <li>80 a 89: B</li> <li>70 a 79: C</li> <li>60 a 69: D</li> <li>Abaixo de 60: F</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-dict.html","title":"Solution dict","text":"<ol> <li>Contagem de Palavras Escreva uma fun\u00e7\u00e3o chamada <code>contar_palavras</code> que recebe uma string e retorna um dicion\u00e1rio onde as chaves s\u00e3o palavras \u00fanicas e os valores s\u00e3o a contagem de cada palavra.</li> </ol> <p>dica: use o metodo <code>split()</code> para quebrar o texto em uma lista de palavras.</p> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>oi oi ola oi oi ola oi oi oi ola</code> e retorna <code>{'oi': 7, 'ola': 2, 'ola,': 1}</code></p> In\u00a0[1]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\n\ndef contar_palavras(texto):\n    palavras = texto.split()\n    dicionario = {}\n    for palavra in palavras:\n        palavra = palavra.lower()\n        if palavra in dicionario:\n            dicionario[palavra] += 1\n        else:\n            dicionario[palavra] = 1\n    return dicionario\n\nprint(contar_palavras(\"oi oi ola oi oi ola oi oi oi ola \"))\n</pre> ## sua solu\u00e7\u00e3o aqui...  def contar_palavras(texto):     palavras = texto.split()     dicionario = {}     for palavra in palavras:         palavra = palavra.lower()         if palavra in dicionario:             dicionario[palavra] += 1         else:             dicionario[palavra] = 1     return dicionario  print(contar_palavras(\"oi oi ola oi oi ola oi oi oi ola \")) <pre>{'oi': 7, 'ola': 3}\n</pre> <ol> <li>Juntando Dicion\u00e1rios Escreva uma fun\u00e7\u00e3o chamada <code>juntar_dicionarios</code> que recebe dois dicion\u00e1rios como argumento e retorna um \u00fanico dicion\u00e1rio que cont\u00e9m todas as chaves e valores dos dois dicion\u00e1rios originais. Se houver chaves duplicadas, o valor do segundo dicion\u00e1rio deve prevalecer.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>{\"a\":1,\"b\":2,\"c\":3}, {\"b\":1,\"c\":2,\"d\":3}</code> e retorna <code>{'a': 1, 'b': 1, 'c': 2, 'd': 3}</code></p> In\u00a0[2]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\ndef juntar_dicionarios(dict1, dict2):\n    dict1.update(dict2)\n    return dict1\n\na = {\"a\":1,\"b\":2,\"c\":3}\nb = {\"e\":1,\"f\":2,\"d\":3}\nprint(juntar_dicionarios(a,b))\n</pre> ## sua solu\u00e7\u00e3o aqui... def juntar_dicionarios(dict1, dict2):     dict1.update(dict2)     return dict1  a = {\"a\":1,\"b\":2,\"c\":3} b = {\"e\":1,\"f\":2,\"d\":3} print(juntar_dicionarios(a,b)) <pre>{'a': 1, 'b': 2, 'c': 3, 'e': 1, 'f': 2, 'd': 3}\n</pre> <ol> <li>Ordena\u00e7\u00e3o de Dicion\u00e1rio por Valor Escreva uma fun\u00e7\u00e3o chamada <code>ordenar_por_valor</code> que recebe um dicion\u00e1rio e retorna uma lista de tuplas ordenada pelos valores.</li> </ol> <p>dica: use a fun\u00e7\u00e3o <code>sorted</code> e pesquise sobre a fun\u00e7\u00e3o <code>lambda</code></p> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>{\"e\":10,\"f\":2,\"d\":63}</code> e retorna <code>[('f', 2), ('e', 10), ('d', 63)]</code></p> In\u00a0[1]: Copied! <pre>def ordenar_por_valor(dic):\n    # Fun\u00e7\u00e3o auxiliar para retornar o valor do item do dicion\u00e1rio\n    def get_value(item):\n        return item[1]\n    \n    # Ordenando o dicion\u00e1rio pelos valores usando a fun\u00e7\u00e3o auxiliar\n    sorted_items = sorted(dic.items(), key=get_value)       #A fun\u00e7\u00e3o get_value ser\u00e1 chamada internamente por sorted para cada item do dicion\u00e1rio enquanto estiver sendo ordenado\n    \n    return sorted_items\n\nb = {\"e\":10,\"f\":2,\"d\":63}\nprint(ordenar_por_valor(b))\n</pre> def ordenar_por_valor(dic):     # Fun\u00e7\u00e3o auxiliar para retornar o valor do item do dicion\u00e1rio     def get_value(item):         return item[1]          # Ordenando o dicion\u00e1rio pelos valores usando a fun\u00e7\u00e3o auxiliar     sorted_items = sorted(dic.items(), key=get_value)       #A fun\u00e7\u00e3o get_value ser\u00e1 chamada internamente por sorted para cada item do dicion\u00e1rio enquanto estiver sendo ordenado          return sorted_items  b = {\"e\":10,\"f\":2,\"d\":63} print(ordenar_por_valor(b))  <pre>[('f', 2), ('e', 10), ('d', 63)]\n</pre> In\u00a0[2]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\n\ndef ordenar_por_valor(dic):\n    return sorted(dic.items(), key=lambda x: x[1])\n\n\nb = {\"e\":10,\"f\":2,\"d\":63}\nprint(ordenar_por_valor(b))\n</pre> ## sua solu\u00e7\u00e3o aqui...  def ordenar_por_valor(dic):     return sorted(dic.items(), key=lambda x: x[1])   b = {\"e\":10,\"f\":2,\"d\":63} print(ordenar_por_valor(b)) <pre>[('f', 2), ('e', 10), ('d', 63)]\n</pre> <ol> <li>Frequ\u00eancia de Caracteres Escreva uma fun\u00e7\u00e3o chamada <code>frequencia_caracteres</code> que recebe uma string e retorna um dicion\u00e1rio onde as chaves s\u00e3o caracteres \u00fanicos e os valores s\u00e3o a contagem de cada caracter.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>\"pensamento computacional com python \u00e9 muito top!\"</code> e retorna <code>{'p': 4, 'e': 2, 'n': 4, 's': 1, 'a': 3, 'm': 4, 't': 5, 'o': 7, ' ': 6, 'c': 3, 'u': 2, 'i': 2, 'l': 1, 'y': 1, 'h': 1, '\u00e9': 1, '!': 1}</code></p> In\u00a0[3]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\ndef frequencia_caracteres(texto):\n    dicionario = {}\n    for char in texto:\n        if char in dicionario:\n            dicionario[char] += 1\n        else:\n            dicionario[char] = 1\n    return dicionario\n\nprint(frequencia_caracteres(\"pensamento computacional com python \u00e9 muito top!\"))\n</pre> ## sua solu\u00e7\u00e3o aqui... def frequencia_caracteres(texto):     dicionario = {}     for char in texto:         if char in dicionario:             dicionario[char] += 1         else:             dicionario[char] = 1     return dicionario  print(frequencia_caracteres(\"pensamento computacional com python \u00e9 muito top!\")) <pre>{'p': 4, 'e': 2, 'n': 4, 's': 1, 'a': 3, 'm': 4, 't': 5, 'o': 7, ' ': 6, 'c': 3, 'u': 2, 'i': 2, 'l': 1, 'y': 1, 'h': 1, '\u00e9': 1, '!': 1}\n</pre> <ol> <li>Invers\u00e3o de Dicion\u00e1rio Escreva uma fun\u00e7\u00e3o chamada <code>inverter_dicionario</code> que recebe um dicion\u00e1rio e retorna um novo dicion\u00e1rio onde as chaves e valores est\u00e3o invertidos.</li> </ol> <p>dica: use list comprehension nos items do dicionario</p> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>{\"e\":10,\"f\":2,\"d\":63}</code> e retorna <code>{10: 'e', 2: 'f', 63: 'd'}</code></p> In\u00a0[4]: Copied! <pre>def inverter_dicionario(dic):\n    dic_invertido = {}\n    for k, v in dic.items():\n        dic_invertido[v] = k\n    return dic_invertido\n\nb = {\"e\":10,\"f\":2,\"d\":63}\nprint(inverter_dicionario(b))\n</pre> def inverter_dicionario(dic):     dic_invertido = {}     for k, v in dic.items():         dic_invertido[v] = k     return dic_invertido  b = {\"e\":10,\"f\":2,\"d\":63} print(inverter_dicionario(b))  <pre>{10: 'e', 2: 'f', 63: 'd'}\n</pre> In\u00a0[5]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\n\ndef inverter_dicionario(dic):\n    return {v: k for k, v in dic.items()}\n\n\nb = {\"e\":10,\"f\":2,\"d\":63}\nprint(inverter_dicionario(b))\n</pre> ## sua solu\u00e7\u00e3o aqui...  def inverter_dicionario(dic):     return {v: k for k, v in dic.items()}   b = {\"e\":10,\"f\":2,\"d\":63} print(inverter_dicionario(b)) <pre>{10: 'e', 2: 'f', 63: 'd'}\n</pre> <ol> <li>Agrupamento de Palavras por Tamanho Escreva uma fun\u00e7\u00e3o chamada <code>agrupar_por_tamanho</code> que recebe uma lista de palavras e retorna um dicion\u00e1rio onde as chaves s\u00e3o tamanhos de palavras e os valores s\u00e3o listas de palavras desse tamanho.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>[\"banana\",\"cereja\",\"com\",\"python\",\"legal\",\"muito\",\"top\",\"!\"]</code> e retorna <code>{6: ['banana', 'cereja', 'python'], 3: ['com', 'top'], 5: ['legal', 'muito'], 1: ['!']}</code></p> In\u00a0[6]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\ndef agrupar_por_tamanho(palavras):\n    dicionario = {}\n    for palavra in palavras:\n        tamanho = len(palavra)\n        if tamanho in dicionario:\n            dicionario[tamanho].append(palavra)\n        else:\n            dicionario[tamanho] = [palavra]\n    return dicionario\n\na = [\"banana\",\"cereja\",\"com\",\"python\",\"legal\",\"muito\",\"top\",\"!\"]\nprint(agrupar_por_tamanho(a))\n</pre> ## sua solu\u00e7\u00e3o aqui... def agrupar_por_tamanho(palavras):     dicionario = {}     for palavra in palavras:         tamanho = len(palavra)         if tamanho in dicionario:             dicionario[tamanho].append(palavra)         else:             dicionario[tamanho] = [palavra]     return dicionario  a = [\"banana\",\"cereja\",\"com\",\"python\",\"legal\",\"muito\",\"top\",\"!\"] print(agrupar_por_tamanho(a)) <pre>{6: ['banana', 'cereja', 'python'], 3: ['com', 'top'], 5: ['legal', 'muito'], 1: ['!']}\n</pre> <ol> <li>Filtragem de Dicion\u00e1rio Escreva uma fun\u00e7\u00e3o chamada <code>filtrar_dicionario</code> que recebe um dicion\u00e1rio e um n\u00famero n. A fun\u00e7\u00e3o deve retornar um novo dicion\u00e1rio contendo apenas as chaves associadas a valores maiores que n.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>{\"e\":10,\"f\":2,\"h\":6,\"j\":8,\"r\":9,\"d\":63}</code> e retorna <code>{'e': 10, 'j': 8, 'r': 9, 'd': 63}</code></p> In\u00a0[7]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\ndef filtrar_dicionario(dic, n):\n    return {k: v for k, v in dic.items() if v &gt; n}\n\n\nb = {\"e\":10,\"f\":2,\"h\":6,\"j\":8,\"r\":9,\"d\":63}\nn = 7\nprint(filtrar_dicionario(b,n))\n</pre> ## sua solu\u00e7\u00e3o aqui... def filtrar_dicionario(dic, n):     return {k: v for k, v in dic.items() if v &gt; n}   b = {\"e\":10,\"f\":2,\"h\":6,\"j\":8,\"r\":9,\"d\":63} n = 7 print(filtrar_dicionario(b,n)) <pre>{'e': 10, 'j': 8, 'r': 9, 'd': 63}\n</pre> <ol> <li>Intersec\u00e7\u00e3o de Conjuntos Escreva uma fun\u00e7\u00e3o chamada <code>interseccao_conjuntos</code> que recebe duas listas e retorna um conjunto contendo os elementos que aparecem em ambas as listas.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code> [1,1,1,3,5,7,6,5,2], [2,4,2,1,2,5,43,2]</code> e retorna <code>{1, 2, 5}</code></p> In\u00a0[8]: Copied! <pre>## sua solu\u00e7\u00e3o aqui...\n\ndef interseccao_conjuntos(lista1, lista2):\n    return set(lista1) &amp; set(lista2)\n\n\na = [1,1,1,3,5,7,6,5,2]\nb = [2,4,2,1,2,5,43,2]\nprint(interseccao_conjuntos(a,b))\n</pre> ## sua solu\u00e7\u00e3o aqui...  def interseccao_conjuntos(lista1, lista2):     return set(lista1) &amp; set(lista2)   a = [1,1,1,3,5,7,6,5,2] b = [2,4,2,1,2,5,43,2] print(interseccao_conjuntos(a,b)) <pre>{1, 2, 5}\n</pre>"},{"location":"aulas/ctp/labs/solutions/solution-dict.html#lista-de-exercicios-loops-for-e-while-e-estruturas-de-dados-dicionarios-conjuntos-lista-e-tupla","title":"Lista de Exerc\u00edcios: Loops (<code>for</code> e <code>while</code>) e Estruturas de Dados (<code>dicionarios</code>, <code>conjuntos</code>, <code>lista</code> e <code>tupla</code>)\u00b6","text":"<p>Neste notebook, voc\u00ea encontrar\u00e1 exerc\u00edcios para praticar conceitos relacionados a loops (<code>for</code> e <code>while</code>) e estruturas de dados (<code>dicionarios</code>, <code>conjuntos</code>,<code>lista</code> e <code>tupla</code>).</p>"},{"location":"aulas/ctp/labs/solutions/solution-dict.html#dicas-importantes","title":"Dicas Importantes\u00b6","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-loop-structures-data-nivel1.html","title":"Solution loop structures data nivel1","text":"<ol> <li>Escreva a fun\u00e7\u00e3o <code>primeiros_n_impares</code> que recebe como argumento <code>n</code> e retorna uma lista com os n\u00fameros \u00edmpares usando um loop <code>for</code>.</li> </ol> <p>Exemplo: a fun\u00e7\u00e3o recebe <code>10</code> e retorna <code>[1, 3, 5, 7, 9]</code></p> In\u00a0[2]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 1\ndef primeiros_n_impares(n):\n    return [i for i in range(1, n, 2)]\n\nprint(primeiros_n_impares(10))\n</pre> ## exemplo de resolu\u00e7\u00e3o 1 def primeiros_n_impares(n):     return [i for i in range(1, n, 2)]  print(primeiros_n_impares(10)) <pre>[1, 3, 5, 7, 9]\n</pre> In\u00a0[10]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 2\ndef primeiros_n_impares(n):\n    lista = []\n    for i in range(1, n, 2):\n        lista.append(i)\n    return lista \n\nprint(primeiros_n_impares(10))\n</pre> ## exemplo de resolu\u00e7\u00e3o 2 def primeiros_n_impares(n):     lista = []     for i in range(1, n, 2):         lista.append(i)     return lista   print(primeiros_n_impares(10)) <pre>[1, 3, 5, 7, 9]\n</pre> <ol> <li>Escreva um programa que encontre o fatorial de um n\u00famero ( n ) usando um loop <code>while</code>.</li> </ol> <p>Escreva a fun\u00e7\u00e3o <code>fatorial</code> que recebe um parametro <code>n</code> e retorna o valor do fatorial.</p> In\u00a0[11]: Copied! <pre>'''\nEste \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica.\n'''\n\ndef fatorial(n):\n    resultado = 1\n    while n &gt; 1:\n        resultado *= n  # \u00e9 o mesmo que resultado = resultado * n\n        n -= 1          # \u00e9 o mesmo que n = n - 1\n    return resultado\n\nprint(fatorial(4))\n</pre> ''' Este \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica. '''  def fatorial(n):     resultado = 1     while n &gt; 1:         resultado *= n  # \u00e9 o mesmo que resultado = resultado * n         n -= 1          # \u00e9 o mesmo que n = n - 1     return resultado  print(fatorial(4)) <pre>24\n</pre> <ol> <li><code>FizzBuzz</code> \u00e9 uma brincadeira matem\u00e1tica e de programa\u00e7\u00e3o muito comum em entrevistas de emprego para programadores.</li> </ol> <p>A ideia b\u00e1sica do jogo \u00e9 contar de 1 a 100, e quando um n\u00famero \u00e9 m\u00faltiplo de 3, em vez de dizer o n\u00famero, deve-se dizer <code>Fizz</code>. Se um n\u00famero \u00e9 m\u00faltiplo de 5, deve-se dizer <code>Buzz</code>. Se o n\u00famero \u00e9 m\u00faltiplo tanto de 3 como de 5, deve-se dizer <code>FizzBuzz</code>.</p> <p>Por exemplo, os primeiros n\u00fameros da sequ\u00eancia seriam:</p> <pre><code>1, 2, Fizz, 4, Buzz, Fizz, 7, 8, Fizz, Buzz, 11, Fizz, 13, 14, FizzBuzz, 16, ... </code></pre> <p>Voc\u00ea deve escrever a fun\u00e7\u00e3o <code>fizz_buzz</code> que n\u00e3o recebe parametro e que retorna uma lista com o resultado do jogo. Use um la\u00e7o for.</p> In\u00a0[12]: Copied! <pre>'''\nEste \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica.\n'''\n\ndef fizz_buzz():\n    resultado = []\n    for i in range(1, 101):     # lembrar de fazer at\u00e9 101\n        if i % 3 == 0 and i % 5 == 0:\n            resultado.append(\"FizzBuzz\")\n        elif i % 3 == 0:\n            resultado.append(\"Fizz\")\n        elif i % 5 == 0:\n            resultado.append(\"Buzz\")\n        else:\n            resultado.append(i)\n    return resultado\n\nprint(fizz_buzz())\n</pre> ''' Este \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica. '''  def fizz_buzz():     resultado = []     for i in range(1, 101):     # lembrar de fazer at\u00e9 101         if i % 3 == 0 and i % 5 == 0:             resultado.append(\"FizzBuzz\")         elif i % 3 == 0:             resultado.append(\"Fizz\")         elif i % 5 == 0:             resultado.append(\"Buzz\")         else:             resultado.append(i)     return resultado  print(fizz_buzz()) <pre>[1, 2, 'Fizz', 4, 'Buzz', 'Fizz', 7, 8, 'Fizz', 'Buzz', 11, 'Fizz', 13, 14, 'FizzBuzz', 16, 17, 'Fizz', 19, 'Buzz', 'Fizz', 22, 23, 'Fizz', 'Buzz', 26, 'Fizz', 28, 29, 'FizzBuzz', 31, 32, 'Fizz', 34, 'Buzz', 'Fizz', 37, 38, 'Fizz', 'Buzz', 41, 'Fizz', 43, 44, 'FizzBuzz', 46, 47, 'Fizz', 49, 'Buzz', 'Fizz', 52, 53, 'Fizz', 'Buzz', 56, 'Fizz', 58, 59, 'FizzBuzz', 61, 62, 'Fizz', 64, 'Buzz', 'Fizz', 67, 68, 'Fizz', 'Buzz', 71, 'Fizz', 73, 74, 'FizzBuzz', 76, 77, 'Fizz', 79, 'Buzz', 'Fizz', 82, 83, 'Fizz', 'Buzz', 86, 'Fizz', 88, 89, 'FizzBuzz', 91, 92, 'Fizz', 94, 'Buzz', 'Fizz', 97, 98, 'Fizz', 'Buzz']\n</pre> <ol> <li>Crie uma lista contendo os primeiros ( n ) n\u00fameros pares e imprima-a.</li> </ol> <p>A fun\u00e7\u00e3o deve ter o nome <code>dobra_n_eventos</code> recebe um numero <code>n</code> e retorna com o dobro dos numeros pares.</p> <p>Exemplo:</p> <ul> <li>se <code>n</code> for 10, retorna uma lista com 2, 4, 6, 8, 10, 12, 14, 16, 18, 20.</li> <li>se <code>n</code> for 5, retorna uma lista com 2, 4, 6, 8, 10.</li> </ul> In\u00a0[24]: Copied! <pre>\"\"\"\nSe \u00e9 pra retornar com o dobro dos pares temos que fazer 2*n mas para pegar esse valor na lista tem que somar 1.\n\nent\u00e3o fica o range de 2 at\u00e9 2n+1 com passo de 2\n\n\"\"\"\n\n## exemplo de resolu\u00e7\u00e3o 1\ndef dobra_n_eventos(n):\n    return [i for i in range(2, 2*n+1, 2)]\n\nprint(dobra_n_eventos(5))\n</pre> \"\"\" Se \u00e9 pra retornar com o dobro dos pares temos que fazer 2*n mas para pegar esse valor na lista tem que somar 1.  ent\u00e3o fica o range de 2 at\u00e9 2n+1 com passo de 2  \"\"\"  ## exemplo de resolu\u00e7\u00e3o 1 def dobra_n_eventos(n):     return [i for i in range(2, 2*n+1, 2)]  print(dobra_n_eventos(5)) <pre>[2, 4, 6, 8, 10]\n</pre> In\u00a0[23]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 2\ndef dobra_n_eventos(n):\n    lista = []\n    for i in range(2, 2*n+1, 2): \n        lista.append(i)\n\n    return lista\n\nprint(dobra_n_eventos(5))\n</pre> ## exemplo de resolu\u00e7\u00e3o 2 def dobra_n_eventos(n):     lista = []     for i in range(2, 2*n+1, 2):          lista.append(i)      return lista  print(dobra_n_eventos(5)) <pre>[2, 4, 6, 8, 10]\n</pre> <ol> <li>Dada uma tupla <code>t</code> contendo n\u00fameros, escreva a fun\u00e7\u00e3o <code>soma_e_media</code> para calcular a soma e a m\u00e9dia desses n\u00fameros.</li> </ol> <p>A fun\u00e7\u00e3o <code>soma_e_media</code> recebe como argumento uma tupla de numeros e retorna uma tupla com os argumentos (soma, media).</p> <p>Exemplo:</p> <ul> <li>se <code>t</code> for (10,2,3,4), retorna a tupla (19,4.75)</li> <li>se <code>t</code> for (1,1,1,2,2,2), retorna a tupla (9,1.5)</li> </ul> In\u00a0[14]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 1\ndef soma_e_media(t):\n    soma = sum(t)\n    media = soma / len(t)\n    return soma, media   # o return de uma fun\u00e7\u00e3o com mais multiplos argumentos separados por vigula ser\u00e1 uma tupla.\n\nprint(soma_e_media((1,1,1,2,2,2)))\n</pre> ## exemplo de resolu\u00e7\u00e3o 1 def soma_e_media(t):     soma = sum(t)     media = soma / len(t)     return soma, media   # o return de uma fun\u00e7\u00e3o com mais multiplos argumentos separados por vigula ser\u00e1 uma tupla.  print(soma_e_media((1,1,1,2,2,2))) In\u00a0[16]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 2\ndef soma_e_media(t):\n    soma = 0\n    for i in t:\n        soma += i\n    media = soma / len(t)\n    return (soma, media)\n\nprint(soma_e_media((1,1,1,2,2,2)))\n</pre> ## exemplo de resolu\u00e7\u00e3o 2 def soma_e_media(t):     soma = 0     for i in t:         soma += i     media = soma / len(t)     return (soma, media)  print(soma_e_media((1,1,1,2,2,2))) <pre>(9, 1.5)\n</pre> <ol> <li>Escreva um programa que remova todos os n\u00fameros \u00edmpares de uma lista dada.</li> </ol> <p>A fun\u00e7\u00e3o <code>remove_impaar</code> recebe uma lista e devolve uma lista.</p> In\u00a0[22]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 1\ndef remove_impar(lst):\n    return [i for i in lst if i % 2 == 0]\n\nprint(remove_impar((1,1,1,11,2,2,2,2,3,3,3)))\n</pre> ## exemplo de resolu\u00e7\u00e3o 1 def remove_impar(lst):     return [i for i in lst if i % 2 == 0]  print(remove_impar((1,1,1,11,2,2,2,2,3,3,3))) <pre>[2, 2, 2, 2]\n</pre> In\u00a0[21]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 2\ndef remove_impar(lst):\n    par = []\n    for i in lst:\n        if i%2 == 0:\n            par.append(i)\n    return par\n\nprint(remove_impar((1,1,4,11,2,20,2,2,3,3,3)))\n</pre> ## exemplo de resolu\u00e7\u00e3o 2 def remove_impar(lst):     par = []     for i in lst:         if i%2 == 0:             par.append(i)     return par  print(remove_impar((1,1,4,11,2,20,2,2,3,3,3))) <pre>[4, 2, 20, 2, 2]\n</pre> <ol> <li>A fun\u00e7\u00e3o <code>fibonacci</code> recebe um numero inteiro e retorna uma lista com os n\u00fameros da sequ\u00eancia Fibonacci at\u00e9 n. Use um loop <code>for</code>.</li> </ol> <p>A sequencia de fibonacci \u00e9 uma sequencia num\u00e9rica onde o proximo numero \u00e9 a soma do atual com o anterior. como no exemplo:</p> <p>0, 1, 1, 2, 3, 5, 8... o pr\u00f3ximo numero ser\u00e1 8+5=13</p> In\u00a0[27]: Copied! <pre>'''\nEste \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica.\nindice =  0 1 2 3 4 5 6\n lista = [2,4,3,5,6,9,8]\n\ni = 5\nlista[i]   representa o indice i=5; valor = 9 \nlista[i-1] representa o indice anterior, i=4; valor = 6\nlista[i-2] representa o indice i=3; valor = 5\n\nisso \u00e9 importante pois na sequ\u00eancia de fibonacci fazemos indice atual como soma dos anteriores.\n'''\n\ndef fibonacci(n):\n    fib = [0, 1]\n    for i in range(2, n):\n        fib.append(fib[i-1] + fib[i-2])\n    return fib[:n]\n\nprint(fibonacci(10))\n</pre> ''' Este \u00e9 um cl\u00e1ssico. para praticar l\u00f3gica. indice =  0 1 2 3 4 5 6  lista = [2,4,3,5,6,9,8]  i = 5 lista[i]   representa o indice i=5; valor = 9  lista[i-1] representa o indice anterior, i=4; valor = 6 lista[i-2] representa o indice i=3; valor = 5  isso \u00e9 importante pois na sequ\u00eancia de fibonacci fazemos indice atual como soma dos anteriores. '''  def fibonacci(n):     fib = [0, 1]     for i in range(2, n):         fib.append(fib[i-1] + fib[i-2])     return fib[:n]  print(fibonacci(10)) <pre>[0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n</pre> <ol> <li>Escreva uma fun\u00e7\u00e3o <code>max_e_index</code> que, recebe uma lista de n\u00fameros, encontra o maior n\u00famero usando um loop <code>while</code> e o armazena em uma tupla junto com seu \u00edndice na lista original para retorno da fun\u00e7\u00e3o.</li> </ol> <p>Exemplo:</p> <ul> <li>se a lista recebida pela fun\u00e7\u00e3o for [3,4,5,2,7,9,4,1,1,1,4,0,], a fun\u00e7\u00e3o retorna a tupla (9,5)</li> </ul> In\u00a0[29]: Copied! <pre>'''\ndesafio cl\u00e1ssico de l\u00f3gica.\n\na id\u00e9ia \u00e9 varrer o vetor procurando o maior valor e o indice e salvar nas variaveis max_val e max_index\n\n'''\ndef max_e_index(lst):\n    max_val = lst[0]    # assume o maior valor \u00e9 o primeiro da lista\n    max_index = 0       # entao o indice correspondente \u00e9 0\n    i = 1\n    while i &lt; len(lst):     # faz a varredura da lista\n        if lst[i] &gt; max_val:    # se o valor atual da lista \u00e9 maior \n            max_val = lst[i]    # ent\u00e3o troca o valor\n            max_index = i       # e atualizar o indice\n        i += 1\n    return max_val, max_index\n\nprint(max_e_index([3,4,5,2,7,9,4,1,1,1,4,0,]))\n</pre> ''' desafio cl\u00e1ssico de l\u00f3gica.  a id\u00e9ia \u00e9 varrer o vetor procurando o maior valor e o indice e salvar nas variaveis max_val e max_index  ''' def max_e_index(lst):     max_val = lst[0]    # assume o maior valor \u00e9 o primeiro da lista     max_index = 0       # entao o indice correspondente \u00e9 0     i = 1     while i &lt; len(lst):     # faz a varredura da lista         if lst[i] &gt; max_val:    # se o valor atual da lista \u00e9 maior              max_val = lst[i]    # ent\u00e3o troca o valor             max_index = i       # e atualizar o indice         i += 1     return max_val, max_index  print(max_e_index([3,4,5,2,7,9,4,1,1,1,4,0,])) <pre>(9, 5)\n</pre> In\u00a0[30]: Copied! <pre># usando la\u00e7o for\n\ndef max_e_index(lst):\n    max_val = lst[0]\n    max_index = 0\n    for i in lst:\n        if lst[i] &gt; max_val:\n            max_val = lst[i]\n            max_index = i\n    return max_val, max_index\n\nprint(max_e_index([3,4,5,2,7,9,4,1,1,1,4,0,]))\n</pre> # usando la\u00e7o for  def max_e_index(lst):     max_val = lst[0]     max_index = 0     for i in lst:         if lst[i] &gt; max_val:             max_val = lst[i]             max_index = i     return max_val, max_index  print(max_e_index([3,4,5,2,7,9,4,1,1,1,4,0,])) <pre>(9, 5)\n</pre> <ol> <li>Utilizando um loop <code>for</code> para percorrer uma lista de palavras e armazenar em uma nova lista todas as palavras que possuem mais de 5 letras. No final, converta essa lista em uma tupla como retorno da fun\u00e7\u00e3o. a fun\u00e7\u00e3o deve se chamar <code>palavras_grandes</code></li> </ol> <p>Por exemplo:</p> <p>se a lista de entrada for <code>[\"olha\",\"o\",\"pensamento\",\"computacional\",\"python\",\"oi\"]</code> ent\u00e3o a saida deve ser <code>('pensamento', 'computacional', 'python')</code></p> In\u00a0[32]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 1\n\ndef palavras_grandes(lst):\n    resultado = []      # cria uma lista para adicionar as palavras grandes\n    for palavra in lst:\n        if len(palavra) &gt; 5:\n            resultado.append(palavra)\n\n    return tuple(resultado) # converte a lista em tuple\n\nprint(palavras_grandes([\"olha\",\"o\",\"pensamento\",\"computacional\",\"python\",\"oi\",]))\n</pre> ## exemplo de resolu\u00e7\u00e3o 1  def palavras_grandes(lst):     resultado = []      # cria uma lista para adicionar as palavras grandes     for palavra in lst:         if len(palavra) &gt; 5:             resultado.append(palavra)      return tuple(resultado) # converte a lista em tuple  print(palavras_grandes([\"olha\",\"o\",\"pensamento\",\"computacional\",\"python\",\"oi\",])) <pre>('pensamento', 'computacional', 'python')\n</pre> In\u00a0[33]: Copied! <pre>## exemplo de resolu\u00e7\u00e3o 2\n\ndef palavras_grandes(lst):\n    resultado = [palavra for palavra in lst if len(palavra) &gt; 5]\n    return tuple(resultado)\n\nprint(palavras_grandes([\"olha\",\"o\",\"pensamento\",\"computacional\",\"python\",\"oi\",]))\n</pre> ## exemplo de resolu\u00e7\u00e3o 2  def palavras_grandes(lst):     resultado = [palavra for palavra in lst if len(palavra) &gt; 5]     return tuple(resultado)  print(palavras_grandes([\"olha\",\"o\",\"pensamento\",\"computacional\",\"python\",\"oi\",])) <pre>('pensamento', 'computacional', 'python')\n</pre> <ol> <li>Foram anotadas as idades e alturas de alunos em lista de tuplas com a segunte estrutura <code>[(idade1,altura1),(idade2,altura2),...]</code>. Fa\u00e7a a fun\u00e7\u00e3o <code>estudantes</code> que recebe a lista de estudantes e determina quantos alunos com mais de 13 anos possuem altura inferior \u00e0 m\u00e9dia de altura desses alunos.</li> </ol> <p>Por exemplo:</p> <p>Se receber <code>[(14, 160), (15, 165), (16, 170)]</code> ent\u00e3o retorna <code>1</code>.</p> In\u00a0[40]: Copied! <pre>def estudantes(students):\n    # Passo 1: Calcular a altura m\u00e9dia\n    soma_altura = 0\n    for idade, altura in students:  # desta forma descompacta a tupla\n        soma_altura += altura   # soma todas as alturas\n        \n    media_altura = soma_altura / len(students)\n    \n    # Passo 2: Contar estudantes com mais de 13 anos e altura abaixo da m\u00e9dia\n    count = 0\n    for idade, altura in students:\n        if idade &gt; 13 and altura &lt; media_altura:\n            count += 1\n            \n    return count\n\n\nprint(estudantes([(14, 160), (15, 165), (16, 170),(15, 190)]))\n</pre> def estudantes(students):     # Passo 1: Calcular a altura m\u00e9dia     soma_altura = 0     for idade, altura in students:  # desta forma descompacta a tupla         soma_altura += altura   # soma todas as alturas              media_altura = soma_altura / len(students)          # Passo 2: Contar estudantes com mais de 13 anos e altura abaixo da m\u00e9dia     count = 0     for idade, altura in students:         if idade &gt; 13 and altura &lt; media_altura:             count += 1                  return count   print(estudantes([(14, 160), (15, 165), (16, 170),(15, 190)])) <pre>3\n</pre> In\u00a0[39]: Copied! <pre>def estudantes(students):\n    media_altura = sum([altura for _, altura in students]) / len(students)\n    count = sum(1 for idade, altura in students if idade &gt; 13 and altura &lt; media_altura)\n    return count\n\nprint(estudantes([(14, 160), (15, 165), (16, 170)]))\n</pre> def estudantes(students):     media_altura = sum([altura for _, altura in students]) / len(students)     count = sum(1 for idade, altura in students if idade &gt; 13 and altura &lt; media_altura)     return count  print(estudantes([(14, 160), (15, 165), (16, 170)])) <pre>1\n</pre> <ol> <li>Problema de Estat\u00edsticas de Consumo de Carro</li> </ol> <p>Escreva uma fun\u00e7\u00e3o chamada <code>estatisticas_carros</code> que ser\u00e1 respons\u00e1vel por fornecer informa\u00e7\u00f5es sobre o consumo de combust\u00edvel de diferentes modelos de carros.</p> <p>Entradas:</p> <p>A fun\u00e7\u00e3o deve receber duas listas de mesmo tamanho:</p> <p><code>modelos</code>: Uma lista de strings, onde cada string representa o nome de um modelo de carro. <code>consumo</code>: Uma lista de n\u00fameros (floats ou inteiros) que representam o consumo em km por litro de cada carro. O i-\u00e9simo elemento desta lista corresponde ao i-\u00e9simo elemento da lista modelos.</p> <p>Sa\u00eddas:</p> <p>A fun\u00e7\u00e3o deve retornar uma string representando o modelo do carro mais econ\u00f4mico.</p> <p>Exemplo:</p> <p>Suponha que temos os seguintes modelos e consumos:</p> <pre>modelos = [\"Fusca\", \"Gol\"]\nconsumos = [8, 10]\n</pre> <p>a fun\u00e7\u00e3o retorna <code>Gol</code></p> In\u00a0[34]: Copied! <pre>def estatisticas_carros(modelos, consumos):\n    index_economico = consumos.index(max(consumos))\n    modelo_economico = modelos[index_economico]\n\n    return modelo_economico\n\nprint(estatisticas_carros(['Fusca','Gol'],[8,10]))\n</pre> def estatisticas_carros(modelos, consumos):     index_economico = consumos.index(max(consumos))     modelo_economico = modelos[index_economico]      return modelo_economico  print(estatisticas_carros(['Fusca','Gol'],[8,10]))  <pre>Gol\n</pre> <ol> <li>Resolva usando for: Fa\u00e7a uma fun\u00e7\u00e3o <code>fracao</code> que calcule e retorne o valor de</li> </ol> <p>$$   S= \\frac{1}{1}+\\frac{3}{2}+\\frac{5}{3}+\\frac{7}{4}+\\frac{9}{5}+...+\\frac{99}{50} $$</p> In\u00a0[41]: Copied! <pre>def fracao():\n    s = 0\n    for i in range(1, 51):  # denominador varia de 1 a 50\n        numerador = 2 * i - 1  # para obter a sequ\u00eancia de n\u00fameros \u00edmpares\n        s += numerador / i\n    return s\n\nresultado = fracao()\nresultado\n</pre> def fracao():     s = 0     for i in range(1, 51):  # denominador varia de 1 a 50         numerador = 2 * i - 1  # para obter a sequ\u00eancia de n\u00fameros \u00edmpares         s += numerador / i     return s  resultado = fracao() resultado Out[41]: <pre>95.5007946616706</pre> <ol> <li>Resolva usando for: Fa\u00e7a uma fun\u00e7\u00e3o <code>fracao2</code> que calcule e retorne o valor de</li> </ol> <p>$$   S= \\frac{1}{1}+\\frac{2}{4}+\\frac{3}{9}+\\frac{4}{16}+...+\\frac{10}{100} $$</p> In\u00a0[43]: Copied! <pre>def fracao2():\n    s = 0\n    for i in range(1, 11):  \n        denominador = i**2  \n        s += i / denominador\n    return s\n\nresultado = fracao2()\nresultado\n</pre> def fracao2():     s = 0     for i in range(1, 11):           denominador = i**2           s += i / denominador     return s  resultado = fracao2() resultado Out[43]: <pre>2.9289682539682538</pre> <ol> <li>Fa\u00e7a uma fun\u00e7\u00e3o <code>fracao3</code> que calcule a seguinte soma:</li> </ol> <p>$$   S= \\frac{10}{1!}-\\frac{9}{2!}+\\frac{8}{3!}-\\frac{7}{4!}+...-\\frac{1}{10!} $$</p> In\u00a0[46]: Copied! <pre>def fracao3():\n    s = 0\n    sinal = 1  # inicia com sinal positivo\n    for i in range(1, 11):  # de 1 a 10\n        numerador =  sinal * (11 - i) \n        denominador = fatorial(i)\n        s += numerador / denominador\n        sinal *= -1  # alterna o sinal\n    return s\n\n## o fatoria j\u00e1 est\u00e1 feito no come\u00e7o da lista vamos usar...\ndef fatorial(n):\n    resultado = 1\n    while n &gt; 1:\n        resultado *= n  \n        n -= 1          \n    return resultado\n\n\nresultado = fracao3()\nresultado\n</pre> def fracao3():     s = 0     sinal = 1  # inicia com sinal positivo     for i in range(1, 11):  # de 1 a 10         numerador =  sinal * (11 - i)          denominador = fatorial(i)         s += numerador / denominador         sinal *= -1  # alterna o sinal     return s  ## o fatoria j\u00e1 est\u00e1 feito no come\u00e7o da lista vamos usar... def fatorial(n):     resultado = 1     while n &gt; 1:         resultado *= n           n -= 1               return resultado   resultado = fracao3() resultado Out[46]: <pre>6.58544670414462</pre>"},{"location":"aulas/ctp/labs/solutions/solution-loop-structures-data-nivel1.html#lista-de-exercicios-loops-for-e-while-e-estruturas-de-dados-lista-e-tupla","title":"Lista de Exerc\u00edcios: Loops (<code>for</code> e <code>while</code>) e Estruturas de Dados (<code>lista</code> e <code>tupla</code>)\u00b6","text":"<p>Neste notebook, voc\u00ea encontrar\u00e1 exerc\u00edcios para praticar conceitos relacionados a loops (<code>for</code> e <code>while</code>) e estruturas de dados (<code>lista</code> e <code>tupla</code>).</p>"},{"location":"aulas/ctp/labs/solutions/solution-loop-structures-data-nivel1.html#dicas-importantes","title":"Dicas Importantes\u00b6","text":"<ul> <li>N\u00e3o altere os nomes dos arquivos ou fun\u00e7\u00f5es: Isso pode fazer com que os testes autom\u00e1ticos falhem, mesmo que sua solu\u00e7\u00e3o esteja correta.</li> <li>Leia os erros com aten\u00e7\u00e3o: Eles podem fornecer dicas sobre o que est\u00e1 errado em seu c\u00f3digo.</li> <li>Pe\u00e7a ajuda: Se estiver tendo dificuldades, n\u00e3o hesite em pedir ajuda ao professor ou colegas.</li> </ul>"},{"location":"aulas/ctp/labs/solutions/solution-search.html","title":"Solution search","text":"In\u00a0[\u00a0]: Copied! <pre>def busca_sequencial(lista, valor):\n    for i in range(len(lista)):\n        if lista[i] == valor:\n            return i\n    return -1\n\n# Teste sua fun\u00e7\u00e3o\nprint(busca_sequencial([1, 2, 3, 4, 5], 3))  # Deve retornar 2\nprint(busca_sequencial([1, 2, 3, 4, 5], 6))  # Deve retornar -1\n</pre> def busca_sequencial(lista, valor):     for i in range(len(lista)):         if lista[i] == valor:             return i     return -1  # Teste sua fun\u00e7\u00e3o print(busca_sequencial([1, 2, 3, 4, 5], 3))  # Deve retornar 2 print(busca_sequencial([1, 2, 3, 4, 5], 6))  # Deve retornar -1 In\u00a0[\u00a0]: Copied! <pre>def busca_binaria(lista, valor):\n    mini = 0\n    maxi = len(lista) - 1\n    while mini &lt;= maxi:\n        meio = (mini + maxi) // 2\n        if lista[meio] == valor:\n            return meio\n        elif lista[meio] &lt; valor:\n            mini = meio + 1\n        else:\n            maxi = meio - 1\n    return -1\n\n# Teste sua fun\u00e7\u00e3o\nprint(busca_binaria([1, 2, 3, 4, 5], 3))  # Deve retornar 2\nprint(busca_binaria([1, 2, 3, 4, 5], 6))  # Deve retornar -1\n</pre> def busca_binaria(lista, valor):     mini = 0     maxi = len(lista) - 1     while mini &lt;= maxi:         meio = (mini + maxi) // 2         if lista[meio] == valor:             return meio         elif lista[meio] &lt; valor:             mini = meio + 1         else:             maxi = meio - 1     return -1  # Teste sua fun\u00e7\u00e3o print(busca_binaria([1, 2, 3, 4, 5], 3))  # Deve retornar 2 print(busca_binaria([1, 2, 3, 4, 5], 6))  # Deve retornar -1 In\u00a0[13]: Copied! <pre>def busca_binaria_com_contagem(lista, valor):\n    minimo = 0\n    maximo = len(lista) - 1\n    contador = 0\n    while minimo &lt;= maximo:\n        chute = (minimo + maximo) // 2\n        contador += 1  # aqui tem uma compara\u00e7\u00e3o\n        if lista[chute] == valor:\n            return chute, contador\n        else:\n            contador += 1  # aqui tem outra compara\u00e7\u00e3o\n            if lista[chute] &lt; valor:\n                minimo = chute + 1\n            else:\n                maximo = chute - 1\n    return -1, contador\n\n\n# Teste sua fun\u00e7\u00e3o\nprint(busca_binaria_com_contagem([1, 2, 3, 4, 5], 2))  # Deve retornar (2, X) onde X \u00e9 o n\u00famero de compara\u00e7\u00f5es\n</pre> def busca_binaria_com_contagem(lista, valor):     minimo = 0     maximo = len(lista) - 1     contador = 0     while minimo &lt;= maximo:         chute = (minimo + maximo) // 2         contador += 1  # aqui tem uma compara\u00e7\u00e3o         if lista[chute] == valor:             return chute, contador         else:             contador += 1  # aqui tem outra compara\u00e7\u00e3o             if lista[chute] &lt; valor:                 minimo = chute + 1             else:                 maximo = chute - 1     return -1, contador   # Teste sua fun\u00e7\u00e3o print(busca_binaria_com_contagem([1, 2, 3, 4, 5], 2))  # Deve retornar (2, X) onde X \u00e9 o n\u00famero de compara\u00e7\u00f5es <pre>(1, 5)\n</pre> In\u00a0[25]: Copied! <pre>import random\n\ndef gerar_lista(tamanho, intervalo):\n    lista = []\n    for i in range(tamanho):\n        lista.append(random.randint(intervalo[0], intervalo[1]))\n    return lista\n\n# Teste sua fun\u00e7\u00e3o\nprint(gerar_lista(5, (1, 100)))  # Exemplo de sa\u00edda: [23, 67, 77, 89, 94]\n</pre> import random  def gerar_lista(tamanho, intervalo):     lista = []     for i in range(tamanho):         lista.append(random.randint(intervalo[0], intervalo[1]))     return lista  # Teste sua fun\u00e7\u00e3o print(gerar_lista(5, (1, 100)))  # Exemplo de sa\u00edda: [23, 67, 77, 89, 94] <pre>[53, 53, 78, 79, 31]\n</pre> In\u00a0[130]: Copied! <pre># esqueci de colocar um exercicio para busca_sequencial_com_contagem\n# ent\u00e3o vou fazer um exercicio para busca_sequencial_com_contagem e depois comparar com a busca bin\u00e1ria com contagem\ndef busca_sequencial_com_contagem(lista, valor):\n    contador = 0\n    for i in range(len(lista)):\n        contador += 1\n        if lista[i] == valor:\n            return i, contador\n    return -1, contador\n\n\n# cria a lista de 100 elementos entre 1 e 1000\nlista = gerar_lista(100, (1, 1000))\nlista.sort()  ### A busca bin\u00e1ria s\u00f3 funciona em listas ordenadas\n\n# Escolhe um n\u00famero aleat\u00f3rio entre 1 e 1000 para ser a chave\nchave = random.randint(1, 1000)\n\n# Realiza busca bin\u00e1ria e busca sequencial com contagem\nindice_binaria, comparacoes_binaria = busca_binaria_com_contagem(lista, chave)\nindice_sequencial, contador_sequencial = busca_sequencial_com_contagem(lista, chave)   \n\n# Exibir resultados\nprint(f\"Chave: {chave}\")\nprint(f\"Lista: {lista}\")\nif indice_binaria != -1:\n    print(f\"Elemento {chave} encontrado no \u00edndice {indice_binaria}.\")\n    print(f\"Busca bin\u00e1ria com {comparacoes_binaria} compara\u00e7\u00f5es.\")\n    print(f\"Busca sequ\u00eancial com {contador_sequencial} compara\u00e7\u00f5es.\")\nelse:\n    print(f\"Elemento {chave} n\u00e3o encontrado.\")\n    print(f\"Busca bin\u00e1ria com {comparacoes_binaria} compara\u00e7\u00f5es.\")\n    print(f\"Busca sequ\u00eancial com {contador_sequencial} compara\u00e7\u00f5es.\")\n</pre> # esqueci de colocar um exercicio para busca_sequencial_com_contagem # ent\u00e3o vou fazer um exercicio para busca_sequencial_com_contagem e depois comparar com a busca bin\u00e1ria com contagem def busca_sequencial_com_contagem(lista, valor):     contador = 0     for i in range(len(lista)):         contador += 1         if lista[i] == valor:             return i, contador     return -1, contador   # cria a lista de 100 elementos entre 1 e 1000 lista = gerar_lista(100, (1, 1000)) lista.sort()  ### A busca bin\u00e1ria s\u00f3 funciona em listas ordenadas  # Escolhe um n\u00famero aleat\u00f3rio entre 1 e 1000 para ser a chave chave = random.randint(1, 1000)  # Realiza busca bin\u00e1ria e busca sequencial com contagem indice_binaria, comparacoes_binaria = busca_binaria_com_contagem(lista, chave) indice_sequencial, contador_sequencial = busca_sequencial_com_contagem(lista, chave)     # Exibir resultados print(f\"Chave: {chave}\") print(f\"Lista: {lista}\") if indice_binaria != -1:     print(f\"Elemento {chave} encontrado no \u00edndice {indice_binaria}.\")     print(f\"Busca bin\u00e1ria com {comparacoes_binaria} compara\u00e7\u00f5es.\")     print(f\"Busca sequ\u00eancial com {contador_sequencial} compara\u00e7\u00f5es.\") else:     print(f\"Elemento {chave} n\u00e3o encontrado.\")     print(f\"Busca bin\u00e1ria com {comparacoes_binaria} compara\u00e7\u00f5es.\")     print(f\"Busca sequ\u00eancial com {contador_sequencial} compara\u00e7\u00f5es.\") <pre>Chave: 305\nLista: [13, 17, 21, 24, 46, 58, 80, 96, 99, 105, 109, 109, 130, 150, 151, 165, 168, 192, 201, 206, 223, 234, 240, 249, 254, 260, 262, 268, 276, 299, 305, 317, 323, 324, 327, 359, 361, 367, 370, 373, 374, 396, 407, 414, 416, 436, 458, 459, 477, 480, 481, 486, 512, 520, 523, 529, 541, 550, 569, 572, 596, 609, 614, 620, 627, 627, 630, 632, 636, 651, 652, 654, 670, 699, 721, 727, 743, 763, 769, 771, 786, 797, 816, 824, 824, 831, 846, 881, 890, 893, 896, 911, 921, 935, 942, 949, 965, 972, 983, 996]\nElemento 305 encontrado no \u00edndice 30.\nBusca bin\u00e1ria com 7 compara\u00e7\u00f5es.\nBusca sequ\u00eancial com 31 compara\u00e7\u00f5es.\n</pre>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicios-sobre-busca-sequencial-e-busca-binaria","title":"Exerc\u00edcios sobre Busca Sequencial e Busca Bin\u00e1ria\u00b6","text":""},{"location":"aulas/ctp/labs/solutions/solution-search.html#instrucoes","title":"Instru\u00e7\u00f5es\u00b6","text":"<p>Resolva os exerc\u00edcios propostos abaixo. Para cada exerc\u00edcio, implemente sua solu\u00e7\u00e3o em Python e teste-a com diferentes entradas de dados para garantir que est\u00e1 correto.</p>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicio-1","title":"Exerc\u00edcio 1\u00b6","text":"<p>Implemente a fun\u00e7\u00e3o <code>busca_sequencial</code> que recebe uma lista e um valor a ser procurado na lista. A fun\u00e7\u00e3o deve retornar o \u00edndice do valor na lista, se encontrado, ou <code>-1</code> caso contr\u00e1rio.</p>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicio-2","title":"Exerc\u00edcio 2\u00b6","text":"<p>Implemente a fun\u00e7\u00e3o <code>busca_binaria</code> que recebe uma lista ordenada e um valor a ser procurado na lista. A fun\u00e7\u00e3o deve retornar o \u00edndice do valor na lista, se encontrado, ou <code>-1</code> caso contr\u00e1rio.</p>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicio-3","title":"Exerc\u00edcio 3\u00b6","text":"<p>Modifique a fun\u00e7\u00e3o <code>busca_binaria</code> para que ela conte e retorne o n\u00famero de compara\u00e7\u00f5es realizadas durante a busca, al\u00e9m do \u00edndice do elemento encontrado, ou <code>-1</code> caso contr\u00e1rio.</p>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicio-4","title":"Exerc\u00edcio 4\u00b6","text":"<p>Escreva uma fun\u00e7\u00e3o <code>gerar_lista</code> que recebe dois par\u00e2metros: o tamanho da lista e o intervalo dos valores (por exemplo, entre 1 e 100). A fun\u00e7\u00e3o deve retornar uma lista contendo n\u00fameros aleat\u00f3rios dentro do intervalo especificado.</p>"},{"location":"aulas/ctp/labs/solutions/solution-search.html#exercicio-5","title":"Exerc\u00edcio 5\u00b6","text":"<p>Utilize a fun\u00e7\u00e3o <code>gerar_lista</code> para criar uma lista de 100 elementos com valores entre 1 e 1000. Em seguida, utilize a fun\u00e7\u00e3o <code>busca_binaria_com_contagem</code> para encontrar um elemento na lista. Anote o n\u00famero de compara\u00e7\u00f5es realizadas e discuta a efici\u00eancia da busca bin\u00e1ria em compara\u00e7\u00e3o com a busca sequencial.</p>"},{"location":"aulas/ctp/projects/agenda.html","title":"Agenda simples","text":""},{"location":"aulas/ctp/projects/agenda.html#agenda-de-contatos","title":"Agenda de contatos","text":""},{"location":"aulas/ctp/projects/agenda.html#implementacao-em-aula","title":"Implementa\u00e7\u00e3o em aula","text":"<p>Realizamos em aula a implementa\u00e7\u00e3o de um agenda de contatos simples. </p> <p>Com o objetivo de praticar a estrutra de dados de dicionario.</p> <p>Criamos um dicion\u00e1rio de dicion\u00e1rios, onde cada chave do dicion\u00e1rio representa o nome de um contato e o valor um dicion\u00e1rio com telefone, email e endere\u00e7o.</p> <p>A solu\u00e7\u00e3o simples e trivial est\u00e1 dispon\u00edvel em: https://github.com/arnaldojr/agenda-fiap</p>"},{"location":"aulas/ctp/projects/agenda.html#desafios","title":"Desafios","text":"<ul> <li>Refatore o c\u00f3digo para melhorar legibilidade. </li> <li>Crie as fun\u00e7\u00f5es para salvar os contatos em arquivos .txt ou json. </li> <li>Altere o c\u00f3digo para que seja possivel adicionar diversos telefones, emails e endere\u00e7os para o mesmo contato. Utilize listas para isso.</li> <li>Implemente melhorias na estrutura do c\u00f3digo para realizar valida\u00e7\u00e3o de dados: <ul> <li>Para adicionar o contato \u00e9 obrigat\u00f3rio ter pelo menos um contato.</li> <li>Validar o formato de telefone usando regex. </li> </ul> </li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html","title":"Jogo da Adivinha\u00e7\u00e3o","text":""},{"location":"aulas/ctp/projects/guessing-game.html#jogo-adivinhe-o-numero","title":"Jogo \"Adivinhe o N\u00famero\"","text":"<p>link para a base do projeto: https://classroom.github.com/a/qeE02LHt</p>"},{"location":"aulas/ctp/projects/guessing-game.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Neste projeto, voc\u00ea ser\u00e1 desafiado a criar um simples jogo de adivinha\u00e7\u00e3o chamado \"Adivinhe o N\u00famero\". O objetivo do jogo \u00e9 que o jogador adivinhe um n\u00famero secreto gerado aleatoriamente pelo programa. O jogo oferece feedback ao usu\u00e1rio ap\u00f3s cada palpite, informando se o n\u00famero secreto \u00e9 maior ou menor do que o palpite fornecido.</p>"},{"location":"aulas/ctp/projects/guessing-game.html#descricao-do-jogo","title":"Descri\u00e7\u00e3o do Jogo","text":"<ol> <li>O jogador escolhe um intervalo: [0, 100) ou [0, 1000) sendo 1 ou 2.</li> <li>Com base no intervalo escolhido, o programa determina o n\u00famero de palpites que o jogador tem.</li> <li>O programa gera um n\u00famero secreto aleat\u00f3rio dentro do intervalo escolhido.</li> <li>O jogador tenta adivinhar o n\u00famero. Ap\u00f3s cada palpite, o programa informa ao jogador se o n\u00famero secreto \u00e9 maior, menor ou igual ao palpite fornecido.</li> <li>O jogo termina quando o jogador adivinha corretamente ou esgota todos os seus palpites.</li> </ol>"},{"location":"aulas/ctp/projects/guessing-game.html#funcoes-a-serem-implementadas","title":"Fun\u00e7\u00f5es a serem Implementadas","text":""},{"location":"aulas/ctp/projects/guessing-game.html#1-escolher_intervalo","title":"1. <code>escolher_intervalo()</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Permite que o usu\u00e1rio escolha um intervalo para o n\u00famero a ser adivinhado.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: O intervalo num\u00e9rico escolhido (100 ou 1000).</li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html#2-definir_palpitesintervalo_num","title":"2. <code>definir_palpites(intervalo_num)</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Define o n\u00famero de palpites com base no intervalo escolhido.</li> <li>Entrada: Intervalo num\u00e9rico (100 ou 1000).</li> <li>Sa\u00edda: N\u00famero de palpites permitidos.</li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html#3-gerar_numero_secretointervalo_num","title":"3. <code>gerar_numero_secreto(intervalo_num)</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Gera um n\u00famero aleat\u00f3rio dentro do intervalo escolhido.</li> <li>Entrada: Intervalo num\u00e9rico (100 ou 1000).</li> <li>Sa\u00edda: N\u00famero aleat\u00f3rio gerado.</li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html#4-obter_palpite","title":"4. <code>obter_palpite()</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Permite que o usu\u00e1rio insira um palpite.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Palpite num\u00e9rico inserido pelo usu\u00e1rio.</li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html#5-avaliar_palpitepalpite-numero_secreto","title":"5. <code>avaliar_palpite(palpite, numero_secreto)</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Avalia o palpite do usu\u00e1rio em rela\u00e7\u00e3o ao n\u00famero secreto.</li> <li>Entrada: Palpite do usu\u00e1rio e n\u00famero secreto.</li> <li>Sa\u00edda: Uma das tr\u00eas strings: \"Maior\", \"Menor\" ou \"Correto\".</li> </ul>"},{"location":"aulas/ctp/projects/guessing-game.html#dicas-e-sugestoes","title":"Dicas e Sugest\u00f5es","text":"<ol> <li>Modulariza\u00e7\u00e3o: Mantenha seu c\u00f3digo organizado, separando diferentes l\u00f3gicas em fun\u00e7\u00f5es distintas.</li> <li>Tratamento de Erros: Certifique-se de tratar poss\u00edveis erros de entrada, como quando o usu\u00e1rio insere texto em vez de um n\u00famero.</li> <li>Feedback: Forne\u00e7a feedback claro e \u00fatil ao usu\u00e1rio ap\u00f3s cada a\u00e7\u00e3o.</li> <li>Teste: Depois de implementar cada fun\u00e7\u00e3o, teste-a individualmente para garantir que ela funcione como esperado.</li> </ol>"},{"location":"aulas/ctp/projects/proj1-eventos.html","title":"Projeto 1: Sistema de Reservas para Eventos","text":""},{"location":"aulas/ctp/projects/proj1-eventos.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Um programa para gerenciar reservas de ingressos para diversos eventos. O sistema permitir\u00e1 aos usu\u00e1rios adicionar eventos, comprar ingressos, cancelar reservas, visualizar eventos dispon\u00edveis e obter informa\u00e7\u00f5es detalhadas sobre os eventos.</p>"},{"location":"aulas/ctp/projects/proj1-eventos.html#descricao-do-sistema","title":"Descri\u00e7\u00e3o do Sistema","text":"<p>O sistema deve ser capaz de gerenciar eventos e reservas, proporcionando uma interface intuitiva para os usu\u00e1rios realizarem suas opera\u00e7\u00f5es. Abaixo est\u00e3o as funcionalidades principais e as fun\u00e7\u00f5es que devem ser implementadas para atingir os objetivos do sistema.</p>"},{"location":"aulas/ctp/projects/proj1-eventos.html#siga-as-instrucoes-das-funcoes-a-serem-implementadas","title":"Siga as instru\u00e7\u00f5es das fun\u00e7\u00f5es a serem Implementadas","text":""},{"location":"aulas/ctp/projects/proj1-eventos.html#criar_evento","title":"<code>criar_evento</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Permite ao usu\u00e1rio criar um novo evento, fornecendo informa\u00e7\u00f5es como nome, data, capacidade e localiza\u00e7\u00e3o.</li> <li>Entrada: Dados do evento.</li> <li>Sa\u00edda: Evento criado e armazenado no sistema.</li> <li> <p>Dicas:</p> </li> <li> <p>Forne\u00e7a feedback claro ao usu\u00e1rio ap\u00f3s a cria\u00e7\u00e3o do evento, confirmando os detalhes do evento.</p> </li> <li>Valide as entradas para garantir que todas as informa\u00e7\u00f5es necess\u00e1rias sejam fornecidas e estejam no formato correto.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#listar_eventos","title":"<code>listar_eventos</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Exibe uma lista de todos os eventos dispon\u00edveis, mostrando informa\u00e7\u00f5es b\u00e1sicas de cada um.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Lista de eventos.</li> <li> <p>Dicas:</p> </li> <li> <p>Formate a sa\u00edda para f\u00e1cil leitura, mostrando claramente as informa\u00e7\u00f5es de cada evento.</p> </li> <li>Considere a implementa\u00e7\u00e3o de pagina\u00e7\u00e3o caso a lista de eventos seja muito longa.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#reservar_vaga","title":"<code>reservar_vaga</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Permite ao usu\u00e1rio reservar uma vaga em um evento espec\u00edfico.</li> <li>Entrada: ID ou nome do evento.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o da reserva.</li> <li> <p>Dicas:</p> </li> <li> <p>Verifique se h\u00e1 vagas dispon\u00edveis antes de confirmar a reserva.</p> </li> <li>Atualize a quantidade de vagas dispon\u00edveis ap\u00f3s a reserva.</li> <li>Forne\u00e7a feedback claro ao usu\u00e1rio, indicando se a reserva foi bem-sucedida ou n\u00e3o.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#cancelar_reserva","title":"<code>cancelar_reserva</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Permite ao usu\u00e1rio cancelar uma reserva previamente feita.</li> <li>Entrada: ID ou nome do evento.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o do cancelamento.</li> <li> <p>Dicas:</p> </li> <li> <p>Verifique se o usu\u00e1rio tem uma reserva para o evento antes de tentar cancelar.</p> </li> <li>Atualize a quantidade de vagas dispon\u00edveis ap\u00f3s o cancelamento.</li> <li>Forne\u00e7a uma mensagem de confirma\u00e7\u00e3o clara ao usu\u00e1rio.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#visualizar_detalhes_evento","title":"<code>visualizar_detalhes_evento</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Exibe todos os detalhes de um evento espec\u00edfico.</li> <li>Entrada: ID ou nome do evento.</li> <li>Sa\u00edda: Detalhes do evento.</li> <li> <p>Dicas:</p> </li> <li> <p>Mostre todas as informa\u00e7\u00f5es relevantes do evento, incluindo nome, data, localiza\u00e7\u00e3o, capacidade e vagas dispon\u00edveis.</p> </li> <li>Formate a sa\u00edda para garantir que as informa\u00e7\u00f5es sejam f\u00e1ceis de ler.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#salvar_dados","title":"<code>salvar_dados</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Salva todos os dados do sistema (eventos, reservas, etc.) em um arquivo.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o de que os dados foram salvos.</li> <li> <p>Dicas:</p> </li> <li> <p>Use manipula\u00e7\u00e3o de arquivos para persistir os dados entre as sess\u00f5es do programa.</p> </li> <li>Considere o uso de formatos de arquivo como JSON ou CSV.</li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#carregar_dados","title":"<code>carregar_dados</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Carrega os dados do sistema a partir de um arquivo.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o de que os dados foram carregados.</li> <li> <p>Dicas:</p> </li> <li> <p>Implemente tratamento de erros para lidar com situa\u00e7\u00f5es em que o arquivo de dados n\u00e3o existe ou est\u00e1 corrompido.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj1-eventos.html#funcao-principal-e-modularizacao","title":"Fun\u00e7\u00e3o Principal e Modulariza\u00e7\u00e3o","text":"<ul> <li>Crie a fun\u00e7\u00e3o principal <code>main</code> que orquestrar\u00e1 a execu\u00e7\u00e3o do seu c\u00f3digo.</li> <li>\u00c9 permitido criar quantas fun\u00e7\u00f5es adicionais ou m\u00f3dulos conforme achar necess\u00e1rio para manter cada parte do c\u00f3digo focada em uma tarefa espec\u00edfica.</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html","title":"Projeto 2: Gerenciador de Finan\u00e7as Pessoais","text":""},{"location":"aulas/ctp/projects/proj2-financas.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Desenvolva um programa para ajudar os usu\u00e1rios a gerenciar suas finan\u00e7as pessoais. Os usu\u00e1rios devem ser capazes de registrar receitas e despesas, visualizar um relat\u00f3rio de suas finan\u00e7as e obter insights sobre seus h\u00e1bitos de gastos.</p>"},{"location":"aulas/ctp/projects/proj2-financas.html#siga-as-instrucoes-das-funcoes-a-serem-implementadas","title":"Siga as instru\u00e7\u00f5es das fun\u00e7\u00f5es a serem Implementadas","text":""},{"location":"aulas/ctp/projects/proj2-financas.html#adicionar_transacao","title":"<code>adicionar_transacao</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Adiciona uma nova transa\u00e7\u00e3o (receita ou despesa) ao sistema.</li> <li>Entrada: Tipo de transa\u00e7\u00e3o (receita ou despesa), valor, descri\u00e7\u00e3o e data.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o da transa\u00e7\u00e3o adicionada.</li> <li> <p>Dicas: </p> </li> <li> <p>Forne\u00e7a feedback imediato ao usu\u00e1rio ap\u00f3s a adi\u00e7\u00e3o de uma transa\u00e7\u00e3o, confirmando os detalhes da transa\u00e7\u00e3o.</p> </li> <li>Certifique-se de validar o tipo de transa\u00e7\u00e3o e o valor (n\u00e3o deve ser negativo).</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#remover_transacao","title":"<code>remover_transacao</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Remove uma transa\u00e7\u00e3o existente.</li> <li>Entrada: ID ou detalhes da transa\u00e7\u00e3o.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o da transa\u00e7\u00e3o removida.</li> <li> <p>Dicas: </p> </li> <li> <p>Implemente uma busca por transa\u00e7\u00f5es para facilitar a remo\u00e7\u00e3o.</p> </li> <li>Forne\u00e7a uma confirma\u00e7\u00e3o antes de remover uma transa\u00e7\u00e3o, para evitar remo\u00e7\u00f5es acidentais.</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#visualizar_relatorio","title":"<code>visualizar_relatorio</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Exibe um relat\u00f3rio das transa\u00e7\u00f5es, mostrando receitas, despesas e saldo total.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Relat\u00f3rio financeiro.</li> <li> <p>Dicas: </p> </li> <li> <p>Formate a sa\u00edda para f\u00e1cil leitura.</p> </li> <li>Considere oferecer op\u00e7\u00f5es para visualizar o relat\u00f3rio por per\u00edodo (mensal, anual, etc.).</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#obter_insights","title":"<code>obter_insights</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Fornece insights sobre os h\u00e1bitos de gastos do usu\u00e1rio.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Insights financeiros.</li> <li> <p>Dicas: </p> </li> <li> <p>Analise as transa\u00e7\u00f5es para identificar padr\u00f5es ou sugest\u00f5es de economia.</p> </li> <li>Utilize t\u00e9cnicas simples de an\u00e1lise de dados para fornecer insights \u00fateis.</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#salvar_dados","title":"<code>salvar_dados</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Salva todas as transa\u00e7\u00f5es em um arquivo.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o de que os dados foram salvos.</li> <li> <p>Dicas: </p> </li> <li> <p>Use manipula\u00e7\u00e3o de arquivos para armazenar os dados.</p> </li> <li>Considere o uso de formatos de arquivo como JSON ou CSV para salvar os dados.</li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#carregar_dados","title":"<code>carregar_dados</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Carrega as transa\u00e7\u00f5es salvas anteriormente.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Confirma\u00e7\u00e3o de que os dados foram carregados.</li> <li> <p>Dicas: </p> </li> <li> <p>Adicione tratamento de erros para lidar com situa\u00e7\u00f5es onde o arquivo de dados est\u00e1 corrompido.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj2-financas.html#funcao-principal-e-modularizacao","title":"Fun\u00e7\u00e3o Principal e Modulariza\u00e7\u00e3o","text":"<ul> <li>Crie a fun\u00e7\u00e3o principal <code>main</code> que orquestrar\u00e1 a execu\u00e7\u00e3o do seu c\u00f3digo.</li> <li>\u00c9 permitido criar quantas fun\u00e7\u00f5es adicionais ou m\u00f3dulos conforme achar necess\u00e1rio para manter cada parte do c\u00f3digo focada em uma tarefa espec\u00edfica.</li> </ul>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html","title":"Proj3 pedra papel tesoura","text":""},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#projeto-3-jogo-de-pedra-papel-ou-tesoura","title":"Projeto 3: Jogo de Pedra, Papel ou Tesoura","text":""},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Crie um jogo simples de pedra, papel ou tesoura, onde o usu\u00e1rio joga contra o computador.</p>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#siga-as-instrucoes-das-funcoes-a-serem-implementadas","title":"Siga as instru\u00e7\u00f5es das fun\u00e7\u00f5es a serem Implementadas","text":""},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#obter_escolha_usuario","title":"<code>obter_escolha_usuario</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Obt\u00e9m a escolha do usu\u00e1rio.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Escolha do usu\u00e1rio (pedra, papel ou tesoura).</li> <li> <p>Dicas: </p> </li> <li> <p>Implemente uma interface de usu\u00e1rio amig\u00e1vel.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#gerar_escolha_computador","title":"<code>gerar_escolha_computador</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Gera uma escolha aleat\u00f3ria para o computador.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Escolha do computador.</li> <li> <p>Dicas: </p> </li> <li> <p>Use a biblioteca <code>random</code> para gerar uma escolha aleat\u00f3ria.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#determinar_vencedor","title":"<code>determinar_vencedor</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Determina o vencedor do jogo.</li> <li>Entrada: Escolha do usu\u00e1rio e escolha do computador.</li> <li>Sa\u00edda: Resultado do jogo (vit\u00f3ria, derrota ou empate).</li> <li> <p>Dicas: </p> </li> <li> <p>Forne\u00e7a feedback ao usu\u00e1rio.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#jogar_novamente","title":"<code>jogar_novamente</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Pergunta ao usu\u00e1rio se ele quer jogar novamente.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Resposta do usu\u00e1rio (sim ou n\u00e3o).</li> <li> <p>Dicas: </p> </li> <li> <p>Mantenha o jogo envolvente.</p> </li> </ul>"},{"location":"aulas/ctp/projects/proj3-pedra-papel-tesoura.html#funcao-principal-e-modularizacao","title":"Fun\u00e7\u00e3o Principal e Modulariza\u00e7\u00e3o","text":"<ul> <li>Crie a fun\u00e7\u00e3o principal <code>main</code> que orquestrar\u00e1 a execu\u00e7\u00e3o do seu c\u00f3digo.</li> <li>\u00c9 permitido criar quantas fun\u00e7\u00f5es adicionais ou m\u00f3dulos conforme achar necess\u00e1rio para manter cada parte do c\u00f3digo focada em uma tarefa espec\u00edfica.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html","title":"Projeto 4: Jogo da Velha","text":""},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Desenvolva uma vers\u00e3o simples do jogo da velha, onde dois jogadores podem jogar um contra o outro.</p>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#siga-as-instrucoes-das-funcoes-a-serem-implementadas","title":"Siga as instru\u00e7\u00f5es das fun\u00e7\u00f5es a serem Implementadas","text":""},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#inicializar_tabuleiro","title":"<code>inicializar_tabuleiro()</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Inicializa o tabuleiro de jogo.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Tabuleiro inicializado.</li> <li> <p>Dicas: </p> </li> <li> <p>Considere usar uma lista de listas para representar o tabuleiro.</p> </li> <li>Considere a cria\u00e7\u00e3o de uma fun\u00e7\u00e3o separada para limpar o console, mantendo a interface do usu\u00e1rio limpa.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#exibir_tabuleiro","title":"<code>exibir_tabuleiro</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Exibe o estado atual do tabuleiro.</li> <li>Entrada: Tabuleiro.</li> <li>Sa\u00edda: Nenhuma (apenas exibe o tabuleiro).</li> <li> <p>Dicas: </p> </li> <li> <p>Formate a sa\u00edda para f\u00e1cil leitura.</p> </li> <li>Adicione coordenadas ao tabuleiro para ajudar os jogadores a identificar facilmente onde fazer sua jogada.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#fazer_jogada","title":"<code>fazer_jogada</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Realiza a jogada de um jogador.</li> <li>Entrada: Tabuleiro, jogador ('X' ou 'O') e posi\u00e7\u00e3o da jogada.</li> <li>Sa\u00edda: Tabuleiro atualizado.</li> <li> <p>Dicas: </p> </li> <li> <p>Valide a jogada para garantir que a posi\u00e7\u00e3o est\u00e1 livre.</p> </li> <li>Implemente uma checagem para garantir que a posi\u00e7\u00e3o escolhida est\u00e1 dentro dos limites do tabuleiro.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#verificar_vencedor","title":"<code>verificar_vencedor</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Verifica se h\u00e1 um vencedor.</li> <li>Entrada: Tabuleiro.</li> <li>Sa\u00edda: Vencedor ('X', 'O' ou 'Empate') ou <code>None</code> se o jogo ainda n\u00e3o terminou.</li> <li> <p>Dicas: </p> </li> <li> <p>Implemente a l\u00f3gica para verificar linhas, colunas e diagonais.</p> </li> <li>Forne\u00e7a uma mensagem clara indicando qual jogador venceu ou se o jogo terminou em empate.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#jogar_novamente","title":"<code>jogar_novamente</code>","text":"<ul> <li>Descri\u00e7\u00e3o: Pergunta aos jogadores se eles querem jogar novamente.</li> <li>Entrada: Nenhuma.</li> <li>Sa\u00edda: Resposta dos jogadores (sim ou n\u00e3o).</li> <li> <p>Dicas: </p> </li> <li> <p>Valide a entrada dos jogadores.</p> </li> <li>Considere adicionar uma contagem de vit\u00f3rias para cada jogador, incentivando a competi\u00e7\u00e3o amig\u00e1vel.</li> </ul>"},{"location":"aulas/ctp/projects/proj4-jogo-da-velha.html#funcao-principal-e-modularizacao","title":"Fun\u00e7\u00e3o Principal e Modulariza\u00e7\u00e3o","text":"<ul> <li>Crie a fun\u00e7\u00e3o principal <code>main</code> que orquestrar\u00e1 a execu\u00e7\u00e3o do seu c\u00f3digo.</li> <li>\u00c9 permitido criar quantas fun\u00e7\u00f5es adicionais ou m\u00f3dulos conforme achar necess\u00e1rio para manter cada parte do c\u00f3digo focada em uma tarefa espec\u00edfica.</li> </ul>"},{"location":"aulas/ctp/python/data-types.html","title":"Tipos de Dados e Vari\u00e1veis","text":""},{"location":"aulas/ctp/python/data-types.html#tipos-de-dados-em-python","title":"Tipos de Dados em Python","text":"<p>O Python \u00e9 uma linguagem de tipagem din\u00c2mica, ou seja, o tipo de uma vari\u00e1vel \u00e9 determinado em tempo de execu\u00e7\u00e3o, com base no valor que ela cont\u00e9m. Isso significa que as vari\u00e1veis n\u00e3o precisam ser explicitamente declaradas com um tipo espec\u00edfico. </p> <p>Tip</p> <p>Vale a pena mensionar que no Python, tudo \u00e9 considerado um objeto. Isso significa que todos os valores, vari\u00e1veis, fun\u00e7\u00f5es e at\u00e9 mesmo tipos de dados s\u00e3o tratados como objetos. Mais adiante no curso vamos voltar e falar mais sobre isso.</p>"},{"location":"aulas/ctp/python/data-types.html#tipos-built-in","title":"Tipos built-in","text":"<p>Os tipos primitivos em Python se referem aos tipos de dados b\u00e1sicos e fundamentais que s\u00e3o usados para representar valores simples. Vamos dar uma olhada e conhecer os principais. </p> <p>Tip</p> <p>Como sugest\u00e3o leia a documenta\u00e7\u00e3o oficial do python que trata deste assunto: https://docs.python.org/pt-br/3.5/library/stdtypes.html </p>"},{"location":"aulas/ctp/python/data-types.html#numeros","title":"N\u00fameros","text":"<p>Os n\u00fameros s\u00e3o uma parte essencial de qualquer linguagem de programa\u00e7\u00e3o. Em Python, eles s\u00e3o definidos como objetos imut\u00e1veis, o que significa que seu valor n\u00e3o pode ser alterado ap\u00f3s a cria\u00e7\u00e3o.</p> <ul> <li>Inteiros (int): S\u00e3o n\u00fameros sem uma parte decimal e podem ser positivos, negativos ou zero. Em Python, os inteiros s\u00e3o representados em base decimal por padr\u00e3o, mas tamb\u00e9m podem ser expressos em base bin\u00e1ria, octal ou hexadecimal.</li> </ul> <pre><code>decimal = 10\nbinario = 0b10\noctal = 0o10\nhexadecimal = 0x10\n</code></pre> <ul> <li>Ponto Flutuante (float): Representam n\u00fameros reais e s\u00e3o escritos com uma parte decimal. Eles s\u00e3o especificados em nota\u00e7\u00e3o decimal ou em nota\u00e7\u00e3o cient\u00edfica.</li> </ul> <pre><code>decimal = 3.14\nnotacao_cientifica = 2.5e3\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#strings","title":"Strings","text":"<p>Strings s\u00e3o sequ\u00eancias de caracteres Unicode. Em Python, as strings s\u00e3o imut\u00e1veis, o que significa que uma vez definidas, seus valores n\u00e3o podem ser alterados. Elas podem ser indexadas e fatiadas para obter sub-strings.</p> <pre><code>texto = \"Python\"\nprimeira_letra = texto[0]  # Resultado: 'P'\nsub_string = texto[1:4]  # Resultado: 'yth'\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#booleanos","title":"Booleanos","text":"<p>Os booleanos s\u00e3o usados para representar valores de verdade. Em Python, eles s\u00e3o subtipos de inteiros e t\u00eam apenas dois valores poss\u00edveis: <code>True</code> e <code>False</code>.</p> <pre><code>verdadeiro = True\nfalso = False\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#variaveis-e-atribuicao","title":"Vari\u00e1veis e Atribui\u00e7\u00e3o","text":"<p>Vari\u00e1veis em Python s\u00e3o refer\u00eancias a objetos na mem\u00f3ria. A atribui\u00e7\u00e3o em Python \u00e9 din\u00e2mica, o que significa que o tipo de uma vari\u00e1vel \u00e9 determinado em tempo de execu\u00e7\u00e3o.</p> <pre><code>idade = 30\nnome = \"Maria\"\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#convencao-para-nomes","title":"Conven\u00e7\u00e3o para Nomes:","text":"<p>Nomes de vari\u00e1veis devem ser min\u00fasculos com palavras separadas por underlines.</p> <pre><code>nome_completo = \"Jo\u00e3o Silva\"\nidade_pessoa = 25\nvalor_total_compra = 150.50\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#erros-de-nomes","title":"Erros de Nomes:","text":"<p>No Python, cada vari\u00e1vel deve ser atribu\u00edda antes de ser acessada. Se voc\u00ea tentar acessar uma vari\u00e1vel que n\u00e3o foi atribu\u00edda, receber\u00e1 um erro.</p> <pre><code># Isto causar\u00e1 um erro porque a vari\u00e1vel 'salario' n\u00e3o foi definida antes de ser usada.\nprint(salario)\nsalario = 1000\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#atribuicao-aumentada","title":"Atribui\u00e7\u00e3o Aumentada","text":"<p>A atribui\u00e7\u00e3o aumentada \u00e9 a combina\u00e7\u00e3o, em uma \u00fanica instru\u00e7\u00e3o, de uma opera\u00e7\u00e3o bin\u00e1ria e uma instru\u00e7\u00e3o de atribui\u00e7\u00e3o:</p> Opera\u00e7\u00e3o Exemplo Equivalente += a += b a = a + b -= a -= b a = a - b *= a *= b a = a * b /= a /= b a = a / b"},{"location":"aulas/ctp/python/data-types.html#conversao-de-tipos","title":"Convers\u00e3o de Tipos","text":"<p>Python permite a convers\u00e3o expl\u00edcita entre diferentes tipos de dados. Isso \u00e9 \u00fatil quando voc\u00ea precisa operar valores de diferentes tipos juntos.</p> <pre><code># Convertendo float para int\nnumero_inteiro = int(7.8)  # Resultado: 7\n\n# Convertendo int para float\nnumero_float = float(4)  # Resultado: 4.0\n\n# Convertendo n\u00famero para string\ntexto_numero = str(25)  # Resultado: '25'\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#entrada-e-saida","title":"Entrada e Sa\u00edda","text":"<p>A intera\u00e7\u00e3o com o usu\u00e1rio \u00e9 fundamental para muitos programas. Python fornece fun\u00e7\u00f5es simples para entrada e sa\u00edda de dados. A fun\u00e7\u00e3o <code>input()</code> sempre retorna uma string, se queremos armazenar um valor numerico precisamos converter esse valor.</p> <pre><code>nome_usuario = input(\"Qual \u00e9 o seu nome? \")\nprint(f\"Ol\u00e1, {nome_usuario}!\")\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#operadores","title":"Operadores","text":"<p>Os operadores s\u00e3o s\u00edmbolos especiais que realizam opera\u00e7\u00f5es em vari\u00e1veis e valores.</p>"},{"location":"aulas/ctp/python/data-types.html#operadores-aritmeticos","title":"Operadores Aritm\u00e9ticos","text":"<p>Os operadores aritm\u00e9ticos s\u00e3o usados para realizar opera\u00e7\u00f5es matem\u00e1ticas b\u00e1sicas. Eles seguem a ordem padr\u00e3o de opera\u00e7\u00f5es matem\u00e1ticas.</p> Operador Significado Exemplo + Adi\u00e7\u00e3o a + b - Subtra\u00e7\u00e3o a - b * Multiplica\u00e7\u00e3o a * b / Divis\u00e3o a / b % M\u00f3dulo a % b ** Exponencia\u00e7\u00e3o a ** b // Divis\u00e3o Inteira a // b"},{"location":"aulas/ctp/python/data-types.html#operadores-aritmeticos_1","title":"Operadores Aritm\u00e9ticos","text":"<p>Os operadores aritm\u00e9ticos s\u00e3o usados para realizar opera\u00e7\u00f5es matem\u00e1ticas b\u00e1sicas. Durante o c\u00e1lculo de uma express\u00e3o, o Python precisa decidir tamb\u00e9m o tipo do valor calculado.</p> <p>Por exemplo, ao avaliar a express\u00e3o \u201c5 * 3\u201d, o Python tenta manter o tipo dos operandos. Neste caso, ambos os operandos s\u00e3o do tipo <code>int</code>, ent\u00e3o o resultado \u00e9 <code>15</code>, que tamb\u00e9m \u00e9 do tipo <code>int</code>.</p> <p>No entanto, a express\u00e3o \u201c8 / 2\u201d resulta em <code>4.0</code>, que \u00e9 do tipo <code>float</code>. Isso ocorre porque a divis\u00e3o em Python sempre retorna um n\u00famero de ponto flutuante, mesmo que o resultado seja um n\u00famero inteiro. Contudo, se usarmos o operador de divis\u00e3o inteira <code>//</code>, o resultado ser\u00e1 <code>4</code>, que \u00e9 do tipo <code>int</code>.</p> <pre><code># Exemplos:\nsoma = 5 + 3  # 8\nsubtracao = 5 - 3  # 2\nmultiplicacao = 5 * 3  # Resultado: 15 (int)\ndivisao = 8 / 2  # Resultado: 4.0 (float)\ndivisao_inteira = 8 // 2 # Resultado: 4 (int)\n</code></pre> <p>Uma regra geral no Python \u00e9 que, quando os operandos s\u00e3o de tipos distintos, como <code>int</code> e <code>float</code>, o operando de tipo \"menor\" \u00e9 promovido ao tipo \"maior\" (ou mais abrangente, no caso o <code>float</code>). Assim, a opera\u00e7\u00e3o \u00e9 realizada no tipo mais abrangente.</p> <p>A convers\u00e3o entre tipos nativos do Python pode ser realizada usando fun\u00e7\u00f5es com o nome do tipo desejado. Veja os exemplos abaixo:</p> <pre><code>numero_float = float(4)         # Resultado: 4.0\nnumero_int = int(4.5)           # Resultado: 4\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#operadores-relacionais","title":"Operadores Relacionais","text":"<p>Os operadores relacionais s\u00e3o usados para comparar valores. Eles retornam um valor booleano (<code>True</code> ou <code>False</code>) com base na compara\u00e7\u00e3o.</p> Operador Significado Exemplo == Igual a a == b != Diferente de a != b &gt; Maior que a &gt; b &lt; Menor que a &lt; b &gt;= Maior ou igual a a &gt;= b &lt;= Menor ou igual a a &lt;= b <pre><code># Exemplos:\nigual = (5 == 5)  # True\ndiferente = (5 != 3)  # True\nmenor = (3 &lt; 5)  # True\nmaior = (5 &gt; 3)  # True\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#operadores-logicos","title":"Operadores L\u00f3gicos","text":"<p>Os operadores l\u00f3gicos s\u00e3o usados para combinar m\u00faltiplas condi\u00e7\u00f5es. Eles s\u00e3o fundamentais em estruturas de decis\u00e3o e loops. Verdadeiro (V), Falso (F).</p>"},{"location":"aulas/ctp/python/data-types.html#operador-and-e-logico","title":"Operador <code>and</code> (E l\u00f3gico)","text":"A B Resultado V V V V F F F V F F F F <p>Exemplo: <code>a and b</code></p>"},{"location":"aulas/ctp/python/data-types.html#operador-or-ou-logico","title":"Operador <code>or</code> (OU l\u00f3gico)","text":"A B Resultado V V V V F V F V V F F F <p>Exemplo: <code>a or b</code></p>"},{"location":"aulas/ctp/python/data-types.html#operador-not-nao-logico-barrado-inversor","title":"Operador <code>not</code> (N\u00c3O l\u00f3gico, barrado, inversor)","text":"A Resultado V F F V <p>Exemplo: <code>not a</code></p> <pre><code># Exemplos:\nresultado1 = True and False  # False\nresultado2 = True or False  # True\nresultado3 = not True  # False\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#exercicio-problema","title":"Exercicio problema","text":"<p>C\u00e1lculo de Juros Compostos Voc\u00ea est\u00e1 planejando fazer um dep\u00f3sito em uma conta poupan\u00e7a que paga juros compostos mensalmente. Para ajud\u00e1-lo a entender quanto dinheiro voc\u00ea ter\u00e1 ap\u00f3s um determinado per\u00edodo, voc\u00ea decide escrever um programa.</p> <p>Instru\u00e7\u00f5es:</p> <ul> <li>O programa deve come\u00e7ar perguntando quanto voc\u00ea planeja depositar inicialmente.</li> <li>Em seguida, o programa deve perguntar a taxa de juros anual (em porcentagem) que ser\u00e1 paga.</li> <li>Por fim, o programa deve perguntar por quantos anos o dinheiro ficar\u00e1 depositado.</li> <li> <p>O programa ent\u00e3o calcular\u00e1 o montante final usando a f\u00f3rmula de juros compostos e exibir\u00e1 o resultado.</p> </li> <li> <p>F\u00f3rmula de Juros Compostos: $$ A = P(1 + \\frac{r}{n})^{nt} $$</p> </li> </ul> <p>Onde:</p> <ul> <li> A  \u00e9 o valor futuro do investimento/empr\u00e9stimo, incluindo juros.</li> <li> P  \u00e9 o valor principal do investimento (dep\u00f3sito inicial ou valor do empr\u00e9stimo).</li> <li> r  \u00e9 a taxa de juro anual (em formato decimal).</li> <li> n  \u00e9 o n\u00famero de vezes que o juro \u00e9 capitalizado por ano.</li> <li> t  \u00e9 o n\u00famero de anos que o dinheiro \u00e9 investido ou emprestado.</li> </ul> <p>Teste o seu c\u00f3digo com: </p> <pre><code>- Deposito inicial = 1000\n- taxa de juros = 5\n- tempo = 2\n- O resultado esperado \u00e9: 1104.94\n</code></pre>"},{"location":"aulas/ctp/python/data-types.html#uma-possivel-solucao-e","title":"Uma possivel solu\u00e7\u00e3o \u00e9:","text":"<pre><code>P = float(input(\"Quanto voc\u00ea planeja depositar inicialmente? \"))\nr = float(input(\"Qual a taxa de juros anual (em porcentagem)? \"))\nt = float(input(\"Por quantos anos o dinheiro ficar\u00e1 depositado? \"))\n\nr = r/100 # Converte a taxa de juros de % para decimal dividindo por 100\nA = P * (1 + r/12)**(12*t) # equa\u00e7\u00e3o de juros compostos\nA = round(A, 2) # arredonda o valor com 2 casas decimais\nprint(\"Total ap\u00f3s \" + str(t) + \" anos: \" + str(A))\n</code></pre>"},{"location":"aulas/ctp/python/decision-structures.html","title":"if-elif-else","text":"Estruturas de Decis\u00e3o <p>Em Python, as estruturas de decis\u00e3o s\u00e3o fundamentais para controlar o fluxo de execu\u00e7\u00e3o de um programa. Elas permitem que o c\u00f3digo tome decis\u00f5es e execute diferentes blocos de instru\u00e7\u00f5es com base em diferentes condi\u00e7\u00f5es. Estas estruturas s\u00e3o essenciais para a l\u00f3gica de programa\u00e7\u00e3o e representam a base de muitos algoritmos.</p> Entendendo Condi\u00e7\u00f5es <p>As estruturas de decis\u00e3o em Python dependem das condi\u00e7\u00f5es que s\u00e3o avaliadas como verdadeiras (<code>True</code>) ou falsas (<code>False</code>). Estas condi\u00e7\u00f5es s\u00e3o frequentemente baseadas em operadores de compara\u00e7\u00e3o e l\u00f3gicos.</p> Operadores de Compara\u00e7\u00e3o <p>Estes operadores s\u00e3o usados para comparar valores:</p> <ul> <li><code>==</code>: Igual a</li> <li><code>!=</code>: Diferente de</li> <li><code>&lt;</code>: Menor que</li> <li><code>&gt;</code>: Maior que</li> <li><code>&lt;=</code>: Menor ou igual a</li> <li><code>&gt;=</code>: Maior ou igual a</li> </ul> Exerc\u00edcios sobre Operadores de Compara\u00e7\u00e3o Dado `x = 5` e `y = 10`, qual das seguintes afirma\u00e7\u00f5es \u00e9 verdadeira?`x &lt; y``x &gt; y``x == y``x &gt;= y`Enviar`x &lt; y` \u00e9 verdadeiro porque 5 \u00e9 menor que 10. Se `a = \"hello\"` e `b = \"world\"`, qual das seguintes condi\u00e7\u00f5es \u00e9 verdadeira?`a == b``a != b``a &gt; b``a &lt; b`Enviar`a != b` \u00e9 verdadeiro porque \"hello\" \u00e9 diferente de \"world\". Operadores L\u00f3gicos <p>Estes operadores s\u00e3o usados para combinar condi\u00e7\u00f5es:</p> <ul> <li><code>and</code>: Retorna verdadeiro se ambas as condi\u00e7\u00f5es forem verdadeiras</li> <li><code>or</code>: Retorna verdadeiro se pelo menos uma das condi\u00e7\u00f5es for verdadeira</li> <li><code>not</code>: Inverte o resultado da condi\u00e7\u00e3o</li> </ul> Exerc\u00edcios sobre Operadores L\u00f3gicos Dado `x = True` e `y = False`, qual das seguintes express\u00f5es retorna `True`?`x and not y``not x and y``x and y``not x or y`Enviar`x and not y` retorna `True` porque `x` \u00e9 verdadeiro e `y` \u00e9 falso (e `not y` \u00e9 verdadeiro). Se `m = False` e `n = False`, qual das seguintes express\u00f5es \u00e9 `True`?`m and n``m or n``not m and not n``not m or n`Enviar`not m and not n` \u00e9 verdadeiro porque ambos `m` e `n` s\u00e3o falsos e a nega\u00e7\u00e3o de ambos \u00e9 verdadeira. <p>!!! progress     Continuar...</p> A Estrutura <code>if</code> <p>A estrutura <code>if</code> \u00e9 a base das estruturas de decis\u00e3o em Python. Ela avalia uma condi\u00e7\u00e3o e, se essa condi\u00e7\u00e3o for verdadeira, executa o bloco de c\u00f3digo indentado sob ela.</p> <pre><code>temperatura = 30\nif temperatura &gt; 25:\n    print(\"Est\u00e1 quente!\")\n</code></pre> Exerc\u00edcios sobre <code>if</code> <p> Qual ser\u00e1 a sa\u00edda do seguinte c\u00f3digo se `valor = 50`? <pre><code>a = 10\nvalor = a\nvalor = a**2\nif valor &lt; 100:\n    print(\"Baixo\")\n</code></pre> `Alto` `Baixo` N\u00e3o haver\u00e1 sa\u00edda Ocorrer\u00e1 um erro Enviar </p> A Estrutura <code>else</code> <p>O <code>else</code> captura qualquer condi\u00e7\u00e3o que n\u00e3o tenha sido capturada pelas cl\u00e1usulas <code>if</code> e <code>elif</code>. N\u00e3o tem uma condi\u00e7\u00e3o associada a ela, pois serve como um coletor padr\u00e3o.</p> Exerc\u00edcios sobre <code>else</code> <p> Dado o c\u00f3digo abaixo, qual ser\u00e1 a sa\u00edda se `num = 10`? <pre><code>if num % 2 == 0:\n    print(\"Par\")\nelse:\n    print(\"\u00cdmpar\")\n</code></pre> `Par` `Impar` N\u00e3o haver\u00e1 sa\u00edda Ocorrer\u00e1 um erro Enviar </p> Usando o mesmo c\u00f3digo, qual ser\u00e1 a sa\u00edda se `num = 15`?`Par``\u00cdmpar`N\u00e3o haver\u00e1 sa\u00eddaOcorrer\u00e1 um erroEnviarA sa\u00edda ser\u00e1 `\u00cdmpar` porque 15 n\u00e3o \u00e9 divis\u00edvel por 2. A Estrutura <code>elif</code> <p>A palavra-chave <code>elif</code> \u00e9 uma abrevia\u00e7\u00e3o de \"else if\". \u00c9 \u00fatil quando voc\u00ea precisa verificar v\u00e1rias condi\u00e7\u00f5es em sequ\u00eancia. Ela segue um <code>if</code> ou outro <code>elif</code> e sua condi\u00e7\u00e3o \u00e9 avaliada apenas se as condi\u00e7\u00f5es anteriores n\u00e3o forem satisfeitas.</p> <pre><code>temperatura = 20\nif temperatura &gt; 25:\n    print(\"Est\u00e1 quente!\")\nelif temperatura &lt; 18:\n    print(\"Est\u00e1 frio!\")\nelse:\n    print(\"Est\u00e1 ameno!\")\n</code></pre> Exerc\u00edcios sobre <code>elif</code> <p> Dado o c\u00f3digo abaixo, qual ser\u00e1 a sa\u00edda se `pontos = 75`? <pre><code>```python\n</code></pre> <p>if pontos &gt; 90:     print(\"Excelente!\") elif pontos &gt; 80:     print(\"Muito bom!\") elif pontos &gt; 70:     print(\"Bom!\") else:     print(\"Tente novamente\") ```</p> `Bom!` `Excelente!` Tente novamente Muito bom! Enviar </p> Considerando o c\u00f3digo da quest\u00e3o anterior, qual ser\u00e1 a sa\u00edda se `pontos = 50`?`Excelente!``Muito bom!``Bom!``Tente novamente`EnviarA sa\u00edda ser\u00e1 `Tente novamente` porque 50 \u00e9 menor do que todos os pontos de corte especificados. Aninhamento <p>\u00c9 poss\u00edvel aninhar estruturas <code>if</code> dentro de outras estruturas <code>if</code>. Isso permite criar avalia\u00e7\u00f5es mais complexas. No entanto, \u00e9 importante garantir que o c\u00f3digo permane\u00e7a leg\u00edvel e evitar aninhamentos excessivamente profundos.</p> <pre><code>idade = 15\nacompanhado = True\n\nif idade &lt; 18:\n    if acompanhado:\n        print(\"Menor de idade, mas est\u00e1 acompanhado.\")\n    else:\n        print(\"Menor de idade e desacompanhado.\")\nelse:\n    print(\"Maior de idade.\")\n</code></pre> Exerc\u00edcios sobre Aninhamento Usando o c\u00f3digo acima, qual ser\u00e1 a sa\u00edda se `idade = 13` e `acompanhado = False`?`Menor de idade, mas est\u00e1 acompanhado.``Menor de idade e desacompanhado.``Maior de idade.`N\u00e3o haver\u00e1 sa\u00eddaEnviarA sa\u00edda ser\u00e1 `Menor de idade e desacompanhado.` porque a idade \u00e9 menor que 18 e a vari\u00e1vel `acompanhado` \u00e9 `False`. Dicas e Boas Pr\u00e1ticas <ol> <li>Mantenha a legibilidade: Evite aninhar muitos n\u00edveis de condi\u00e7\u00f5es. Se um <code>if</code> tem muitos <code>elif</code> ou n\u00edveis profundos de aninhamento, pode ser um sinal de que o c\u00f3digo precisa ser refatorado.</li> <li>Evite condi\u00e7\u00f5es complexas: Se uma condi\u00e7\u00e3o est\u00e1 se tornando muito complexa, considere dividi-la ou use vari\u00e1veis intermedi\u00e1rias para tornar a l\u00f3gica mais clara.</li> <li>Use par\u00eanteses para clareza: Em condi\u00e7\u00f5es complexas com m\u00faltiplos operadores l\u00f3gicos, use par\u00eanteses para tornar a ordem das avalia\u00e7\u00f5es clara.</li> </ol>"},{"location":"aulas/ctp/python/dict-sets.html","title":"Dicion\u00e1rios e Conjuntos","text":"Dicion\u00e1rios em Python <p>Dicion\u00e1rios s\u00e3o estruturas de dados que permitem armazenar pares de <code>chave-valor</code>. Em Python, dicion\u00e1rios s\u00e3o delimitados por chaves <code>{}</code>. As strings, listas e tuplas utilizam inteiros como indices. Se voce tentar utilizar qualquer outro tipo como indice, voce receber\u00e1 um erro. O dicionario vai nos ajudar nisso.</p> Cria\u00e7\u00e3o de Dicion\u00e1rios <p>Dicion\u00e1rios s\u00e3o criados usando chaves <code>{}</code>, contendo pares chave-valor separados por dois pontos <code>:</code>.</p> <p><pre><code>meu_dict = dict()    # primeira forma de inicializar um dicionario\nmeu_dict = {}        # segunda forma de inicializar um dicionario\n</code></pre> Podemos inicializar um dicion\u00e1rio com valores</p> <pre><code>pessoa = {\"nome\": \"Alice\", \"idade\": 30, \"profiss\u00e3o\": \"Engenheira\"}\n</code></pre> Qual alternativa indica um dicion\u00e1rio?['nome': 'arnaldo', 'idade': 10, 'sexo': 'masculino']{'nome': 'arnaldo', 'idade': 10, 'sexo': 'masculino'}('nome': 'arnaldo'), ('idade': 10), ('sexo': 'masculino')[['nome': 'arnaldo'], ['idade': 10], ['sexo': 'masculino']]EnviarA sa\u00edda \u00e9 {'nome': 'arnaldo', 'idade': 10, 'sexo': 'masculino'}. Acesso a Elementos <p>Para acessar o valor associado a uma chave, use a chave como \u00edndice.</p> <pre><code>pessoa = {\"nome\": \"Alice\", \"idade\": 30, \"profiss\u00e3o\": \"Engenheira\"}\n\nprint(pessoa[\"idade\"])  # Sa\u00edda: 30\n</code></pre> <p>Se tentarmos acessar uma chave que n\u00e3o existe, obteremos um <code>KeyError</code>.</p> <p> Qual \u00e9 a sa\u00edda do c\u00f3digo a seguir? <pre><code>    d = {\"a\": 1, \"b\": 2, \"c\": 3}\n    print(d[\"b\"])\n</code></pre> 1 2 3 KeyError Enviar </p> Adi\u00e7\u00e3o, Remo\u00e7\u00e3o e Altera\u00e7\u00e3o de Elementos <p>Dicion\u00e1rios em Python s\u00e3o mut\u00e1veis, o que significa que voc\u00ea pode adicionar, alterar ou remover pares chave-valor ap\u00f3s sua cria\u00e7\u00e3o.</p> Adi\u00e7\u00e3o <p>Para adicionar um novo par chave-valor a um dicion\u00e1rio, voc\u00ea simplesmente atribui um valor a uma nova chave:</p> <pre><code>pessoa = {}\npessoa[\"nome\"] = \"Carlos\"\n</code></pre> <p>Ap\u00f3s executar o c\u00f3digo acima, o dicion\u00e1rio pessoa conter\u00e1 <code>{\"nome\": \"Carlos\"}</code>.</p> Altera\u00e7\u00e3o <p>Se voc\u00ea atribuir um valor a uma chave j\u00e1 existente, o valor anterior associado a essa chave ser\u00e1 substitu\u00eddo:</p> <p><pre><code>pessoa[\"nome\"] = \"Roberto\"\n</code></pre> Agora, o dicion\u00e1rio <code>pessoa</code> foi atualizado para <code>{\"nome\": \"Roberto\"}</code>.</p> <p>O m\u00e9todo <code>update()</code> \u00e9 usado para inserir pares chave-valor de um dicion\u00e1rio em outro dicion\u00e1rio. Se a chave j\u00e1 existir no dicion\u00e1rio original, o valor para essa chave ser\u00e1 atualizado. Se a chave n\u00e3o existir, o par chave-valor ser\u00e1 adicionado.</p> Remo\u00e7\u00e3o <p>Para remover um par chave-valor de um dicion\u00e1rio, voc\u00ea pode usar a instru\u00e7\u00e3o <code>del</code> seguida da chave que deseja remover:</p> <p><pre><code>del pessoa[\"nome\"]\n</code></pre> Ap\u00f3s a execu\u00e7\u00e3o deste c\u00f3digo, a chave \"nome\" e seu valor associado ser\u00e3o removidos do dicion\u00e1rio pessoa, deixando-o vazio.</p> <p> Qual \u00e9 a sa\u00edda do c\u00f3digo a seguir? <pre><code>dados = {\n    \"alunos\": {\n        \"Ana\": {\"idade\": 20, \"curso\": \"Engenharia\"},\n        \"Pedro\": {\"idade\": 25, \"curso\": \"Matem\u00e1tica\"},\n    },\n    \"professores\": {\n        \"Dr. Silva\": {\"idade\": 40, \"disciplina\": \"F\u00edsica\"},\n        \"Dra. Fernanda\": {\"idade\": 35, \"disciplina\": \"Qu\u00edmica\"},\n    },\n}\nprint(dados[\"alunos\"][\"Pedro\"][\"curso\"])\n</code></pre> Engenharia Matem\u00e1tica 20 Dra. Fernanda Enviar Qual \u00e9 a sa\u00edda do c\u00f3digo a seguir? <pre><code>d1 = {\"a\": 1, \"b\": 2, \"c\": 3} \nd2 = {\"b\": 3, \"c\": 4, \"d\": 5}\n\nd1.update(d2) \n</code></pre> 1 3 4 5 Enviar </p> M\u00e9todos mais utilizados de Dicion\u00e1rios <p>Os dicion\u00e1rios possuem uma s\u00e9rie de m\u00e9todos incorporados que facilitam a manipula\u00e7\u00e3o e intera\u00e7\u00e3o com os dados. Vamos abordar alguns dos m\u00e9todos mais usados:</p> <ul> <li><code>keys()</code>: Retorna uma lista de todas as chaves.</li> <li><code>values()</code>: Retorna uma lista de todos os valores.</li> <li><code>items()</code>: Retorna uma lista de tuplas (chave, valor).</li> <li><code>get(key, default)</code>: Retorna o valor para a chave especificada ou o valor default.</li> </ul> <p>Vamos usar o dicionario <code>d</code> neste exemplo:</p> <pre><code>d = {\"nome\": \"Alice\", \"idade\": 31, \"nacionalidade\": \"Brasileira\"}\n</code></pre> <p><code>keys()</code></p> <pre><code>d = {\"nome\": \"Alice\", \"idade\": 31, \"nacionalidade\": \"Brasileira\"}\nprint(d.keys())  # Sa\u00edda: dict_keys(['nome', 'idade', 'nacionalidade'])\n</code></pre> <p><code>value()</code></p> <pre><code>print(d.values())  # Sa\u00edda: dict_values(['Alice', 31, 'Brasileira'])\n</code></pre> <p><code>items()</code></p> <pre><code># Jeito simples\nprint(d.items()) \n</code></pre> <p><code>get()</code></p> <p>O m\u00e9todo get() \u00e9 uma maneira segura de acessar os valores de um dicion\u00e1rio. Se a chave especificada n\u00e3o for encontrada, ele retorna o valor default especificado (ou None se nenhum valor default for fornecido).</p> <p><pre><code>cidade = d.get(\"cidade\", \"N\u00e3o especificado\")\nprint(cidade)  # Sa\u00edda: N\u00e3o especificado\n</code></pre> !!! Tip     Note que usar <code>d[\"cidade\"]</code> diretamente causaria um <code>KeyError</code>, mas com <code>get()</code>, evitamos esse erro e temos uma sa\u00edda controlada.</p> <p> Dado o dicion\u00e1rio:  <pre><code>produtos = {\n    \"ma\u00e7\u00e3\": {\"pre\u00e7o\": 0.5, \"estoque\": 100},\n    \"banana\": {\"pre\u00e7o\": 0.3, \"estoque\": 50},\n    \"cereja\": {\"pre\u00e7o\": 2.0, \"estoque\": 20}\n}\n</code></pre>  Qual ser\u00e1 a sa\u00edda do c\u00f3digo a seguir? <pre><code>print(produtos.get(\"p\u00eassego\", {}).get(\"pre\u00e7o\", \"Produto n\u00e3o encontrado\"))\n</code></pre> 0.5 0.3 2.0 Produto n\u00e3o encontrado Enviar </p> <p> Considerando o seguinte dicion\u00e1rio:  <pre><code>alunos = {\n    \"Ana\": [8.5, 9.0, 7.5],\n    \"Pedro\": [6.0, 7.0, 8.0],\n    \"Mariana\": [9.5, 8.5, 9.0]\n}\n</code></pre>  Ap\u00f3s executar o c\u00f3digo abaixo, qual ser\u00e1 a sa\u00edda? <pre><code>notas = alunos.get(\"Ana\") \nmedia = sum(notas) / len(notas)\nprint(media)\n</code></pre> 8.33 7.0 8.5 9.0 Enviar </p> Iterando em Dicion\u00e1rios <p>Podemos iterar pelas chaves, valores ou pares chave-valor de um dicion\u00e1rio.</p> <p>Considerando o dicion\u00e1rio pessoa:</p> <pre><code>pessoa = {\"nome\": \"Alice\", \"idade\": 30, \"profiss\u00e3o\": \"Engenheira\"}\n</code></pre> <pre><code>for chave in pessoa.keys():\n    print(chave)\n\nfor valor in pessoa.values():\n    print(valor)\n\nfor chave, valor in pessoa.items():\n    print(chave, \":\", valor)\n</code></pre> <p>!!! Tip     Ao usar o m\u00e9todo <code>items()</code> em um dicion\u00e1rio e <code>desempacotar</code> os resultados em <code>chave</code> e <code>valor</code>, voc\u00ea obt\u00e9m acesso direto a ambos os componentes do <code>par chave-valor</code> durante a itera\u00e7\u00e3o.</p> Aninhamento em Dicion\u00e1rios <p>Podemos encontrar estruturas de Dicion\u00e1rios que conter outros dicion\u00e1rios, um conceito conhecido como aninhamento. Isso \u00e9 especialmente \u00fatil quando se deseja representar informa\u00e7\u00f5es estruturadas de forma hier\u00e1rquica.</p> <p>Por exemplo, suponha que queremos representar informa\u00e7\u00f5es sobre uma pessoa, incluindo seu endere\u00e7o:</p> <pre><code>pessoa = {\n    \"nome\": \"Alice\",\n    \"idade\": 30,\n    \"endere\u00e7o\": {\n        \"rua\": \"Av. Central\",\n        \"n\u00famero\": 123,\n        \"cidade\": \"Campinas\",\n        \"estado\": \"SP\"\n    }\n}\n</code></pre> <p>Para acessar informa\u00e7\u00f5es aninhadas, voc\u00ea pode encadear os \u00edndices:</p> <pre><code>print(pessoa[\"endere\u00e7o\"][\"cidade\"])  # Sa\u00edda: Campinas\n</code></pre> <p>!!! Tip     Dicion\u00e1rios aninhados s\u00e3o comuns ao trabalhar com dados estruturados, como <code>arquivos JSON</code>.</p> Listas de Dicion\u00e1rios <p>Listas de dicion\u00e1rios s\u00e3o uma estrutura de dados comum em Python. Elas permitem armazenar um conjunto de registros, onde cada registro \u00e9 um dicion\u00e1rio com pares chave-valor.</p> <p>Consideremos uma lista que representa uma s\u00e9rie de produtos:</p> <pre><code>produtos = [\n    {\"nome\": \"camiseta\", \"pre\u00e7o\": 29.99, \"estoque\": 100},\n    {\"nome\": \"cal\u00e7a\", \"pre\u00e7o\": 59.99, \"estoque\": 50},\n    {\"nome\": \"t\u00eanis\", \"pre\u00e7o\": 129.99, \"estoque\": 25}\n]\n</code></pre> Iterando pela Lista <p>Para iterar pela lista e acessar cada dicion\u00e1rio:</p> <pre><code>for produto in produtos:\n    print(produto[\"nome\"], \"-\", produto[\"pre\u00e7o\"])\n</code></pre> Adicionando um Novo Dicion\u00e1rio <p>Para adicionar um novo produto:</p> <pre><code>novo_produto = {\"nome\": \"bon\u00e9\", \"pre\u00e7o\": 19.99, \"estoque\": 30}\nprodutos.append(novo_produto)\n</code></pre> Atualizando um Dicion\u00e1rio <p>Para atualizar o pre\u00e7o do primeiro produto:</p> <pre><code>produtos[0][\"pre\u00e7o\"] = 24.99\n</code></pre> Removendo um Dicion\u00e1rio <p>Para remover um produto da lista (por exemplo, o terceiro produto):</p> <pre><code>del produtos[2]\n</code></pre> <p>Ou, se voc\u00ea quiser remover um produto com base em um crit\u00e9rio espec\u00edfico:</p> <pre><code>produtos = [produto for produto in produtos if produto[\"nome\"] != \"t\u00eanis\"]\n</code></pre> <p>Este \u00faltimo exemplo utiliza <code>list comprehension</code> para criar uma nova lista, excluindo o produto cujo nome \u00e9 \"t\u00eanis\".</p> <p> Considerando a seguinte lista de dicion\u00e1rios:  <pre><code>biblioteca = [\n    {\n        \"t\u00edtulo\": \"Orgulho e Preconceito\",\n        \"autor\": \"Jane Austen\",\n        \"ano\": 1813,\n        \"categoria\": \"Romance\"\n    },\n    {\n        \"t\u00edtulo\": \"1984\",\n        \"autor\": \"George Orwell\",\n        \"ano\": 1949,\n        \"categoria\": \"Fic\u00e7\u00e3o dist\u00f3pica\"\n    },\n    {\n        \"t\u00edtulo\": \"Moby Dick\",\n        \"autor\": \"Herman Melville\",\n        \"ano\": 1851,\n        \"categoria\": \"Aventura\"\n    }\n]\n</code></pre>  Ap\u00f3s executar o c\u00f3digo abaixo, qual ser\u00e1 a sa\u00edda? <pre><code>```python\nresultado = [livro[\"t\u00edtulo\"] for livro in biblioteca if livro[\"categoria\"] == \"Romance\"]\nprint(resultado)\n```\n</code></pre> [\"Orgulho e Preconceito\"] [\"Orgulho e Preconceito\", \"1984\"] [\"Moby Dick\", \"1984\"] [\"Moby Dick\"] Enviar </p> Conjuntos em Python <p>Conjuntos s\u00e3o uma cole\u00e7\u00e3o de <code>elementos \u00fanicos</code>. Em Python, conjuntos s\u00e3o similares a listas ou dicion\u00e1rios, mas <code>n\u00e3o podem ter elementos duplicados</code> e <code>n\u00e3o s\u00e3o ordenados</code>.</p> Cria\u00e7\u00e3o de Conjuntos <p>Conjuntos s\u00e3o criados usando chaves <code>{}</code> ou a fun\u00e7\u00e3o <code>set()</code>.</p> <pre><code>moradia = set()\n\nfrutas = {\"ma\u00e7\u00e3\", \"banana\", \"cereja\"}\n</code></pre> <p>!!! Tip      Cuidado para n\u00e3o confundir conjunto com dicionario.      Diferentemente dos dicionarios, os conjuntos n\u00e3o s\u00e3o ordenados e n\u00e3o possuem pares de chave-valor. </p> Opera\u00e7\u00f5es com Conjuntos <p>Podemos realizar opera\u00e7\u00f5es t\u00edpicas de conjuntos, como uni\u00e3o, interse\u00e7\u00e3o e diferen\u00e7a.</p> <pre><code>a = {1, 2, 3}\nb = {3, 4, 5}\nprint(a | b)  # Uni\u00e3o: {1, 2, 3, 4, 5}\nprint(a &amp; b)  # Interse\u00e7\u00e3o: {3}\nprint(a - b)  # Diferen\u00e7a: {1, 2}\n</code></pre> M\u00e9todos mais utilizados de Conjuntos <ul> <li><code>add(elem)</code>: Adiciona um elemento ao conjunto.</li> <li><code>remove(elem)</code>: Remove um elemento do conjunto.</li> <li><code>pop()</code>: Remove e retorna um elemento do conjunto.</li> <li><code>clear()</code>: Limpa todos os elementos do conjunto.</li> </ul> <pre><code>frutas.add(\"uva\")\nfrutas.remove(\"banana\")\nprint(frutas)  # Sa\u00edda: {\"ma\u00e7\u00e3\", \"cereja\", \"uva\"}\n</code></pre> Iterando em Conjuntos <p>Assim como listas e dicion\u00e1rios, podemos iterar pelos elementos de um conjunto.</p> <pre><code>for fruta in frutas:\n    print(fruta)\n</code></pre> <p> Considere os conjuntos `a` e `b` definidos abaixo. Qual \u00e9 a sa\u00edda do c\u00f3digo? <pre><code>a = {1, 2, 3, 4}\nb = {3, 4, 5, 6}\nprint(a &amp; b)\n</code></pre> {1, 2} {5, 6} {3, 4} {1, 2, 3, 4, 5, 6} Enviar </p>"},{"location":"aulas/ctp/python/errors-exceptions.html","title":"Tratamento de Erros - Try, Except","text":""},{"location":"aulas/ctp/python/errors-exceptions.html#erros-e-excecoes-em-python","title":"Erros e Exce\u00e7\u00f5es em Python","text":"<p>Ao escrever programas em Python, \u00e9 comum encontrar situa\u00e7\u00f5es em que o c\u00f3digo n\u00e3o se comporta como esperado. Essas situa\u00e7\u00f5es indesejadas s\u00e3o geralmente resultado de 'erros e exce\u00e7\u00f5es'. Entender e lidar adequadamente com esses problemas \u00e9 crucial para desenvolver programas robustos e confi\u00e1veis.</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#por-que-ocorrem-erros","title":"Por que ocorrem erros?","text":"<p>Erros podem ocorrer por diversos motivos, incluindo:</p> <p><code>Erros de Sintaxe</code>: Ocorrem quando o c\u00f3digo n\u00e3o segue as regras gramaticais da linguagem Python. S\u00e3o os erros mais f\u00e1ceis de corrigir, pois o interpretador aponta exatamente onde est\u00e1 o problema.</p> <p>Exemplo:</p> <pre><code>while True print('Hello world')\n</code></pre> <p>Neste caso, o interpretador indica exatamente onde o erro foi encontrado com uma seta apontando para o local. O erro \u00e9 causado pelo fato de que falta um dois-pontos (':') antes do <code>print</code>.</p> <p><code>Erros L\u00f3gicos</code>: S\u00e3o erros que ocorrem quando o programa \u00e9 sintaticamente correto, mas n\u00e3o produz o resultado esperado. Esses erros s\u00e3o mais dif\u00edceis de detectar e corrigir, pois exigem uma compreens\u00e3o profunda da l\u00f3gica do programa.</p> <p>Exemplo:</p> <pre><code># Fun\u00e7\u00e3o para calcular a m\u00e9dia de dois n\u00fameros\ndef calcular_media(a, b):\n    media = (a * b) / 2 # Erro l\u00f3gico: deveria ser (a + b) / 2\n    return media\n\n# Testando a fun\u00e7\u00e3o com valores esperados\nresultado = calcular_media(4, 6)\nprint(f\"A m\u00e9dia de 4 e 6 \u00e9 {resultado}\")\n\n# Sa\u00edda esperada: A m\u00e9dia de 4 e 6 \u00e9 5\n# Sa\u00edda real: A m\u00e9dia de 4 e 6 \u00e9 12.0\n</code></pre> <p><code>Exce\u00e7\u00f5es</code>: S\u00e3o erros detectados durante a execu\u00e7\u00e3o do programa. Diferentemente dos erros de sintaxe, as exce\u00e7\u00f5es podem ocorrer mesmo quando o c\u00f3digo est\u00e1 gramaticalmente correto. Exemplos comuns de exce\u00e7\u00f5es incluem tentativas de divis\u00e3o por zero, acesso a um \u00edndice fora dos limites de uma lista e abertura de um arquivo que n\u00e3o existe.</p> <p>Note que neste c\u00f3digo temos um problema. N\u00e3o podemos fazer divis\u00e3o por zero. Imagine esse c\u00f3digo rodando em um servidor, esse erro vai fazer o nosso programa python 'quebrar' e parar de executar. E agora como podemos resolver de forma a evitar que o programa pare de funcionar. </p> <p>Tip</p> <p>Queremos garantir que nosso programa possa lidar com situa\u00e7\u00f5es inesperadas sem 'quebrar'.\"</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#como-os-erros-prejudicam-a-performance-do-sistema","title":"Como os erros prejudicam a performance do sistema?","text":"<p>Quando ocorrem podem ter v\u00e1rias consequ\u00eancias negativas para um sistema, tais como:</p> <p><code>Interrup\u00e7\u00e3o do Programa</code>: Um erro n\u00e3o tratado pode causar a interrup\u00e7\u00e3o abrupta do programa, o que pode ser particularmente problem\u00e1tico em sistemas cr\u00edticos ou em produ\u00e7\u00e3o.</p> <p><code>Comportamento Inesperado</code>: Erros l\u00f3gicos podem levar a comportamentos inesperados, o que pode resultar em decis\u00f5es incorretas ou em falhas de seguran\u00e7a.</p> <p><code>Consumo Excessivo de Recursos</code>: Alguns erros, como vazamentos de mem\u00f3ria, podem levar ao consumo excessivo de recursos do sistema, afetando a performance e a estabilidade.</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#a-importancia-do-tratamento-de-erros-e-excecoes","title":"A import\u00e2ncia do tratamento de erros e exce\u00e7\u00f5es","text":"<p>Tratar adequadamente os erros e exce\u00e7\u00f5es \u00e9 essencial para garantir a confiabilidade e a robustez do sistema. Ao prever e lidar com situa\u00e7\u00f5es de erro, \u00e9 poss\u00edvel:</p> <p><code>Melhorar a Usabilidade</code>: Programas que tratam erros de forma elegante proporcionam uma experi\u00eancia de usu\u00e1rio mais amig\u00e1vel, evitando mensagens de erro confusas ou interrup\u00e7\u00f5es inesperadas.</p> <p><code>Aumentar a Seguran\u00e7a</code>: Um tratamento cuidadoso de exce\u00e7\u00f5es pode prevenir falhas de seguran\u00e7a, como a exposi\u00e7\u00e3o de informa\u00e7\u00f5es sens\u00edveis atrav\u00e9s de mensagens de erro.</p> <p><code>Facilitar a Manuten\u00e7\u00e3o</code>: C\u00f3digos que incluem um tratamento claro e consistente de erros s\u00e3o mais f\u00e1ceis de entender e manter.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#excecoes","title":"Exce\u00e7\u00f5es","text":"<p>Mesmo que um comando ou express\u00e3o estejam sintaticamente corretos, pode ocorrer um erro durante sua execu\u00e7\u00e3o. Erros detectados durante a execu\u00e7\u00e3o s\u00e3o chamados de exce\u00e7\u00f5es e n\u00e3o s\u00e3o necessariamente fatais.</p> <p>Exemplos de exce\u00e7\u00f5es:</p> <pre><code>10 * (1/0)   # ZeroDivisionError\n4 + spam*3   # NameError\n'2' + 2      # TypeError\n</code></pre>"},{"location":"aulas/ctp/python/errors-exceptions.html#tratamento-de-excecoes","title":"Tratamento de Exce\u00e7\u00f5es","text":"<p>Em python, \u00e9 poss\u00edvel escrever programas que tratam exce\u00e7\u00f5es espec\u00edficas usando os blocos <code>try</code> e <code>except</code>:</p> <pre><code>try:\n    # bloco de c\u00f3digo que pode gerar um erro\nexcept:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro\n</code></pre> <ul> <li>O bloco <code>try</code> cont\u00e9m o c\u00f3digo que pode gerar um erro. Se ocorrer um erro durante a execu\u00e7\u00e3o desse bloco, o bloco except ser\u00e1 executado.</li> <li>O bloco <code>except</code> \u00e9 utilizado para tratar o erro de uma forma adequada, seja exibindo uma mensagem de erro para o usu\u00e1rio ou realizando alguma outra a\u00e7\u00e3o para corrigir o problema.</li> </ul>"},{"location":"aulas/ctp/python/errors-exceptions.html#tipos-de-erros-except-excecoes","title":"Tipos de Erros (Except) Exce\u00e7\u00f5es","text":"<p>Tratar qualquer tipo de exce\u00e7\u00e3o da mesma maneira n\u00e3o \u00e9 considerado uma boa pr\u00e1tica de programa\u00e7\u00e3o. \u00c9 recomend\u00e1vel especificar o tipo de erro exato que a cl\u00e1usula <code>except</code> ir\u00e1 capturar. Por isso, o comando try pode ter <code>mais de um except associado ao tipo de errro</code>, caso o programador queira associar um tratamento diferente para cada um deles.</p> <p>O formato geral do comando \u00e9:</p> <pre><code>try:\n    # bloco de c\u00f3digo que pode gerar um erro\nexcept tipo_de_erro1:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nexcept tipo_de_erro2:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nexcept tipo_de_erro3:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\n</code></pre> <p>Alguns tipos de exce\u00e7\u00e3o mais comuns:</p> <p><code>NameError</code>: exce\u00e7\u00e3o gerada quando o programa n\u00e3o consegue encontrar um nome de vari\u00e1vel local ou global. <code>TypeError</code>: exce\u00e7\u00e3o gerada quando \u00e9 passado um objeto de um tipo diferente do tipo que a fun\u00e7\u00e3o espera como argumento. <code>ValueError</code>: essa exce\u00e7\u00e3o ocorre quando um argumento de uma fun\u00e7\u00e3o tem o tipo certo, mas um valor inadequado. <code>ZeroDivisionError</code>: exce\u00e7\u00e3o gerada quando voc\u00ea fornece um zero como segundo argumento para uma divis\u00e3o ou m\u00f3dulo. <code>FileNotFoundError</code>: essa exce\u00e7\u00e3o \u00e9 gerada quando o arquivo ou diret\u00f3rio que o programa solicitou n\u00e3o existe.</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#exercicios-sobre-tipos-de-erros","title":"Exerc\u00edcios sobre tipos de erros","text":"<p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>ZeroDivisionError</code> em Python?</p> <ul> <li> <code>print(10 / 2)</code></li> <li> <code>print(5 * 0)</code></li> <li> <code>print(1 / 0)</code></li> <li> <code>print(0 + 10)</code></li> </ul> <p>Answer</p> <p><code>print(1 / 0)</code> causar\u00e1 um erro <code>ZeroDivisionError</code>, pois n\u00e3o \u00e9 poss\u00edvel dividir um n\u00famero por zero.</p> <p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>NameError</code> em Python?</p> <ul> <li> <code>x = 5</code></li> <li> <code>print(y)</code></li> <li> <code>print(\"Hello, world!\")</code></li> <li> <code>x = \"Python\"</code></li> </ul> <p>Answer</p> <p><code>print(y)</code> causar\u00e1 um erro <code>NameError</code>, pois a vari\u00e1vel <code>y</code> n\u00e3o foi definida antes de ser usada.</p> <p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>TypeError</code> em Python?</p> <ul> <li> <code>print(10 + 5)</code></li> <li> <code>print(\"Python\" * 3)</code></li> <li> <code>print(\"Python\" + 3)</code></li> <li> <code>print(len(\"Python\"))</code></li> </ul> <p>Answer</p> <p><code>print(\"Python\" + 3)</code> causar\u00e1 um erro <code>TypeError</code>, pois n\u00e3o \u00e9 poss\u00edvel concatenar uma string com um n\u00famero inteiro.</p> <p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>IndexError</code> em Python?</p> <ul> <li> <code>lista = [1, 2, 3]</code></li> <li> <code>print(lista[1])</code></li> <li> <code>lista.append(4)</code></li> <li> <code>print(lista[3])</code></li> </ul> <p>Answer</p> <p><code>print(lista[3])</code> causar\u00e1 um erro <code>IndexError</code>, pois o \u00edndice 3 est\u00e1 fora do alcance da lista <code>lista</code> que tem apenas 3 elementos.</p> <p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>KeyError</code> em Python?</p> <ul> <li> <code>dicionario = {\"nome\": \"Jo\u00e3o\", \"idade\": 30}</code></li> <li> <code>print(dicionario[\"nome\"])</code></li> <li> <code>print(dicionario[\"altura\"])</code></li> <li> <code>dicionario[\"cidade\"] = \"S\u00e3o Paulo\"</code></li> </ul> <p>Answer</p> <p><code>print(dicionario[\"altura\"])</code> causar\u00e1 um erro <code>KeyError</code>, pois a chave <code>altura</code> n\u00e3o existe no dicion\u00e1rio <code>dicionario</code>.</p> <p>Question</p> <p>Qual linha de c\u00f3digo abaixo causar\u00e1 um erro <code>AttributeError</code> em Python?</p> <ul> <li> <code>import math</code></li> <li> <code>print(math.sqrt(16))</code></li> <li> <code>print(math.PI)</code></li> <li> <code>print(math.pow(2, 3))</code></li> </ul> <p>Answer</p> <p><code>print(math.PI)</code> causar\u00e1 um erro <code>AttributeError</code>, pois o m\u00f3dulo <code>math</code> n\u00e3o possui um atributo chamado <code>PI</code>.</p> <p>Progress</p> <p>Continuar...</p> <p>Al\u00e9m disso, \u00e9 poss\u00edvel utilizar a cl\u00e1usula <code>else</code> para executar um bloco de c\u00f3digo caso n\u00e3o ocorra nenhum erro no bloco try. </p> <pre><code>try:\n    # bloco de c\u00f3digo que pode gerar um erro\nexcept tipo_de_erro1:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nexcept tipo_de_erro2:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nelse:\n    # bloco de c\u00f3digo que ser\u00e1 executado se nenhum erro ocorrer no bloco try\n</code></pre> <p>E tamb\u00e9m \u00e9 poss\u00edvel utilizar a cl\u00e1usula <code>finally</code> para executar um bloco de c\u00f3digo que sempre ser\u00e1 executado, independentemente de ter ocorrido um erro ou n\u00e3o. Por exemplo:</p> <pre><code>try:\n    # bloco de c\u00f3digo que pode gerar um erro\nexcept tipo_de_erro1:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nexcept tipo_de_erro2:\n    # bloco de c\u00f3digo que ser\u00e1 executado em caso de erro do tipo 1\nelse:\n    # bloco de c\u00f3digo que ser\u00e1 executado se nenhum erro ocorrer no bloco try\nfinally:\n    # bloco de c\u00f3digo que sempre ser\u00e1 executado, independentemente de ter ocorrido um erro ou n\u00e3o\n</code></pre> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Iniciando...\")\n    x = 1 / \"texto\"\nexcept TypeError:\n    print(\"Erro de tipo.\")\n</code></pre> <ul> <li> <code>Iniciando...</code></li> <li> <code>Iniciando...\\nErro de tipo.</code></li> <li> <code>Erro de tipo.</code></li> <li> <code>Iniciando...\\nErro de tipo.\\nFinalizando...</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Iniciando...\\nErro de tipo.</code> pois ocorre um erro de tipo e o bloco <code>except</code> \u00e9 executado.</p> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Tentando...\")\n    x = 10 / 2\nexcept ZeroDivisionError:\n    print(\"Erro de divis\u00e3o por zero.\")\nelse:\n    print(\"Nenhum erro ocorreu.\")\n</code></pre> <ul> <li> <code>Tentando...\\nErro de divis\u00e3o por zero.</code></li> <li> <code>Tentando...\\nNenhum erro ocorreu.</code></li> <li> <code>Nenhum erro ocorreu.</code></li> <li> <code>Tentando...</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Tentando...\\nNenhum erro ocorreu.</code> pois n\u00e3o ocorre nenhum erro e o bloco <code>else</code> \u00e9 executado.</p> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Iniciando...\")\n    x = int(\"texto\")\nexcept ValueError:\n    print(\"Erro de valor.\")\nelse:\n    print(\"Convers\u00e3o bem-sucedida.\")\n</code></pre> <ul> <li> <code>Iniciando...\\nConvers\u00e3o bem-sucedida.</code></li> <li> <code>Erro de valor.</code></li> <li> <code>Iniciando...\\nErro de valor.</code></li> <li> <code>Iniciando...</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Iniciando...\\nErro de valor.</code> pois ocorre um erro de valor e o bloco <code>except</code> \u00e9 executado.</p> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Iniciando...\")\n    x = 1 / 0\nexcept ZeroDivisionError:\n    print(\"Erro de divis\u00e3o por zero.\")\nelse:\n    print(\"Nenhum erro ocorreu.\")\nfinally:\n    print(\"Finalizando...\")\n</code></pre> <ul> <li> <code>Iniciando...\\nNenhum erro ocorreu.\\nFinalizando...</code></li> <li> <code>Iniciando...\\nErro de divis\u00e3o por zero.\\nFinalizando...</code></li> <li> <code>Erro de divis\u00e3o por zero.\\nFinalizando...</code></li> <li> <code>Iniciando...\\nFinalizando...</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Iniciando...\\nErro de divis\u00e3o por zero.\\nFinalizando...</code> pois ocorre um erro de divis\u00e3o por zero, o bloco <code>except</code> \u00e9 executado, e o bloco <code>finally</code> \u00e9 executado independentemente do que acontece antes.</p> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Tentando...\")\n    x = 1 / 1\nexcept ZeroDivisionError:\n    print(\"Erro de divis\u00e3o por zero.\")\nelse:\n    print(\"Nenhum erro ocorreu.\")\nfinally:\n    print(\"Finalizando...\")\n</code></pre> <ul> <li> <code>Tentando...\\nErro de divis\u00e3o por zero.\\nFinalizando...</code></li> <li> <code>Tentando...\\nFinalizando...</code></li> <li> <code>Nenhum erro ocorreu.\\nFinalizando...</code></li> <li> <code>Tentando...\\nNenhum erro ocorreu.\\nFinalizando...</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Tentando...\\nNenhum erro ocorreu.\\nFinalizando...</code> pois n\u00e3o ocorre nenhum erro, o bloco <code>else</code> \u00e9 executado, e o bloco <code>finally</code> \u00e9 executado independentemente do que acontece antes.</p> <p>Question</p> <p>Qual \u00e9 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>try:\n    print(\"Iniciando...\")\n    x = \"texto\" + 5\nexcept TypeError:\n    print(\"Erro de tipo.\")\nfinally:\n    print(\"Finalizando...\")\n</code></pre> <ul> <li> <code>Iniciando...\\nFinalizando...</code></li> <li> <code>Erro de tipo.\\nFinalizando...</code></li> <li> <code>Iniciando...\\nErro de tipo.\\nFinalizando...</code></li> <li> <code>Iniciando...\\nErro de tipo.</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Iniciando...\\nErro de tipo.\\nFinalizando...</code> pois ocorre um erro de tipo, o bloco <code>except</code> \u00e9 executado, e o bloco <code>finally</code> \u00e9 executado independentemente do que acontece antes.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/errors-exceptions.html#desafios","title":"Desafios","text":"<ol> <li> <p>Refa\u00e7a o desafios do inicio da aula para encontrar o angulo da reta entre os pontos utilizando as tratativas de erros e exce\u00e7\u00f5es.</p> </li> <li> <p>Responda: </p> </li> </ol> <p>Question</p> <p>Considere a seguinte fun\u00e7\u00e3o que realiza uma opera\u00e7\u00e3o de divis\u00e3o e trata poss\u00edveis erros:</p> <pre><code>def safe_division(numerator, denominator):\n    try:\n        result = numerator / denominator\n    except ZeroDivisionError:\n        print(\"Erro: Divis\u00e3o por zero n\u00e3o \u00e9 permitida.\")\n        return None\n    except TypeError:\n        print(\"Erro: Os tipos dos argumentos devem ser num\u00e9ricos.\")\n        return None\n    else:\n        return result\n    finally:\n        print(\"Opera\u00e7\u00e3o conclu\u00edda.\")\n</code></pre> <p>Qual ser\u00e1 a sa\u00edda ao executar a seguinte linha de c\u00f3digo:</p> <pre><code>print(safe_division(10, \"5\"))\n</code></pre> <ul> <li> <code>2.0\\nOpera\u00e7\u00e3o conclu\u00edda.</code></li> <li> <code>Erro: Divis\u00e3o por zero n\u00e3o \u00e9 permitida.\\nOpera\u00e7\u00e3o conclu\u00edda.</code></li> <li> <code>Erro: Os tipos dos argumentos devem ser num\u00e9ricos.\\nOpera\u00e7\u00e3o conclu\u00edda.\\nNone</code></li> <li> <code>Opera\u00e7\u00e3o conclu\u00edda.\\nNone</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>Erro: Os tipos dos argumentos devem ser num\u00e9ricos.\\nOpera\u00e7\u00e3o conclu\u00edda.\\nNone</code> porque o denominador n\u00e3o \u00e9 um n\u00famero, causando um <code>TypeError</code>, e a fun\u00e7\u00e3o retorna <code>None</code> ap\u00f3s imprimir a mensagem de erro. O bloco <code>finally</code> \u00e9 executado independentemente, imprimindo \"Opera\u00e7\u00e3o conclu\u00edda.\"</p> <ol> <li> <p>Para o c\u00f3digo a seguir, responda onde e porque \u00e9 necess\u00e1rio adicionar ao c\u00f3digo algum controle de erro exce\u00e7\u00e3o:</p> <pre><code>def adicionar_tarefa(tarefas, tarefa):\n    tarefas.append(tarefa)\n    print(\"Tarefa adicionada com sucesso!\")\n\ndef remover_tarefa(tarefas, tarefa):\n    tarefas.remove(tarefa)\n    print(\"Tarefa removida com sucesso!\")\n\ndef visualizar_tarefas(tarefas):\n    if len(tarefas) == 0:\n        print(\"Nenhuma tarefa na lista.\")\n    else:\n        print(\"Tarefas na lista:\")\n        for tarefa in tarefas:\n            print(tarefa)\n\ndef main():\n    tarefas = []\n\n    while True:\n        print(\"\\n1 - Adicionar tarefa\")\n        print(\"2 - Remover tarefa\")\n        print(\"3 - Visualizar tarefas\")\n        print(\"4 - Sair\")\n\n        opcao = input(\"Escolha uma op\u00e7\u00e3o: \")\n\n        if opcao == \"1\":\n            tarefa = input(\"Digite a tarefa: \")\n            adicionar_tarefa(tarefas, tarefa)\n        elif opcao == \"2\":\n            tarefa = input(\"Digite a tarefa a ser removida: \")\n            remover_tarefa(tarefas, tarefa)\n        elif opcao == \"3\":\n            visualizar_tarefas(tarefas)\n        elif opcao == \"4\":\n            print(\"Saindo do programa...\")\n            break\n        else:\n            print(\"Op\u00e7\u00e3o inv\u00e1lida.\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> </li> </ol>"},{"location":"aulas/ctp/python/files-maniputation.html","title":"Manipula\u00e7\u00e3o de arquivos","text":""},{"location":"aulas/ctp/python/files-maniputation.html#trabalhando-com-arquivos-em-python","title":"Trabalhando com Arquivos em Python","text":"<p>Em Python, fa manipula\u00e7\u00e3o de arquivos \u00e9 muito simples, al\u00e9m de ser uma habilidade essencial, pois permite que os programas interajam com dados persistentes, realizem an\u00e1lises, modifiquem e armazenem resultados para uso futuro. </p> <p>Note que, neste conte\u00fado, estamos focando na manipula\u00e7\u00e3o de arquivos locais, e n\u00e3o abordaremos banco de dados.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#introducao-ao-trabalho-com-arquivos","title":"Introdu\u00e7\u00e3o ao Trabalho com Arquivos","text":"<p>Em Python, os arquivos s\u00e3o objetos que oferecem uma interface para interagir com conte\u00fado armazenado no sistema de arquivos do computador. A manipula\u00e7\u00e3o de arquivos \u00e9 fundamental para muitas opera\u00e7\u00f5es, desde a simples leitura de dados at\u00e9 opera\u00e7\u00f5es mais complexas de processamento de dados.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#objeto-de-arquivo","title":"Objeto de Arquivo","text":"<p>Quando abrimos um arquivo em Python usando a fun\u00e7\u00e3o <code>open()</code>, obtemos um objeto de arquivo. Este objeto fornece m\u00e9todos e atributos que nos permitem realizar opera\u00e7\u00f5es como ler, escrever e fechar o arquivo.</p> <p><pre><code># Abre um arquivo chamado \"exemplo.txt\" para leitura\narquivo = open(\"exemplo.txt\", \"r\")\n\n# L\u00ea o conte\u00fado do arquivo\nconteudo = arquivo.read()\n\n# Fecha o arquivo ap\u00f3s a leitura\narquivo.close()\n\n# Agora voc\u00ea pode usar o conte\u00fado do arquivo\nprint(conteudo)\n</code></pre> A partir do Python 3.3, \u00e9 recomendado usar a sintaxe <code>with open</code> para abrir arquivos, pois ele garante que o arquivo seja fechado automaticamente ap\u00f3s a conclus\u00e3o das opera\u00e7\u00f5es.</p> <pre><code># Abre um arquivo chamado \"exemplo.txt\" para leitura usando o bloco with\nwith open(\"exemplo.txt\", \"r\") as arquivo:\n    conteudo = arquivo.read()\n\n# O arquivo \u00e9 automaticamente fechado quando o bloco with \u00e9 conclu\u00eddo\nprint(conteudo)\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/files-maniputation.html#modos-de-abertura","title":"Modos de Abertura","text":"<p>Existem v\u00e1rios modos em que um arquivo pode ser aberto:</p> <ul> <li>'r': Modo de leitura. (padr\u00e3o)</li> <li>'w': Modo de escrita. Cria um novo arquivo ou sobrescreve um existente.</li> <li>'a': Modo de anexa\u00e7\u00e3o. Escreve no final do arquivo sem sobrescrever o conte\u00fado existente. </li> </ul> <p>Podemos especificar se o arquivo deve ser tratado como modo bin\u00e1rio ou texto.</p> <ul> <li>'b': Modo bin\u00e1rio. Usado para arquivos n\u00e3o-textuais como imagens ou arquivos bin\u00e1rios.</li> <li>'t': Modo de texto. (padr\u00e3o) Usado para arquivos de texto.</li> </ul>"},{"location":"aulas/ctp/python/files-maniputation.html#exemplos-simples-e-praticos","title":"Exemplos Simples e Pr\u00e1ticos","text":"<ol> <li>Ler um arquivo e imprimir seu conte\u00fado:</li> </ol> <pre><code>with open(\"exemplo.txt\", \"r\") as file:\n    conteudo = file.read()\n    print(conteudo)\n</code></pre> <ol> <li>Ler uma imagem e imprimir seu conte\u00fado:</li> </ol> <pre><code>with open(\"exemplo.jpg\", \"rb\") as file:\n    conteudo = file.read()\n    print(conteudo)\n</code></pre> <ol> <li>Escrever uma strings em um arquivo:</li> </ol> <pre><code># Abre o arquivo para escrita\nwith open(\"exemplo.txt\", \"w\") as file:\n    file.write(\"Conte\u00fado de exemplo.\")\n</code></pre> <ol> <li>Escrever uma lista de strings em um arquivo:</li> </ol> <pre><code>lines = [\"Linha 1\", \"Linha 2\", \"Linha 3\"]\nwith open(\"exemplo.txt\", \"w\") as file:\n    for line in lines:\n        file.write(line + \"\\n\")\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/files-maniputation.html#lendo-e-escrevendo-arquivos-de-texto-txt","title":"Lendo e Escrevendo Arquivos de Texto (<code>.txt</code>)","text":""},{"location":"aulas/ctp/python/files-maniputation.html#leitura","title":"Leitura:","text":"<p>Para entender como utilizar os m\u00e9todos de leitura vamos assumir que j\u00e1 exite o arquivo <code>exemplo.txt</code>, com o seguinte conte\u00fado.</p> <pre><code>Ol\u00e1 universo!\nPensamento computacional\nCom Python \u00e9 facil.\n</code></pre> <p>Usamos <code>read()</code> para ler todo o arquivo, por padr\u00e3o o arquivo \u00e9 lido como string (texto).  </p> <pre><code>with open(\"exemplo.txt\", \"r\") as file:\n    conteudo = file.read()\nprint(conteudo)\n</code></pre> <p>Tip</p> <p>O erro <code>FileNotFoundError: [Errno 2] No such file or directory: 'exemplo.txt'</code> significa que ou o arquivo n\u00e3o existe ou est\u00e1 em um diret\u00f3rio diferente do script python.</p> <p>Abrindo um arquivo de um diret\u00f3rio diferente: Caso o script python e o arquivo n\u00e3o estejam no mesmo diret\u00f3rio \u00e9 necess\u00e1rio passar o caminho <code>path</code> relativo ou completo na hora da leitura.</p> <pre><code>with open(\"c:\\\\&lt;caminho_ate_o_arquivo&gt;\\exemplo.txt\", \"r\") as file:\n    conteudo = file.read()\nprint(conteudo)\n</code></pre> <p>Podemos ler apenas uma parte do arquivo:</p> <ul> <li>Definindo a quantidade de caracteres: <code>read(10)</code> retorna os 10 primeiros caracteres do arquivo <code>Ol\u00e1 unive</code>.</li> </ul> <p><pre><code>with open(\"exemplo.txt\", \"r\") as file:\n    conteudo = file.read(10)\nprint(conteudo)\n</code></pre> O resultado \u00e9: <code>Ol\u00e1 unive</code>.</p> <ul> <li>Lendo uma linha inteira: <code>readline()</code> retorna o conteudo da linha toda <code>\\n</code>.  </li> </ul> <pre><code>with open(\"exemplo.txt\", \"r\") as file:\n    conteudo = file.readline()\nprint(conteudo)\n</code></pre> <p>Se tudo deu certo, o resultado ser\u00e1: <code>Ol\u00e1 universo!</code>. </p> <p>Para para ler mais uma linha do arquivo temos que realizar mais um <code>readline()</code>, para facilitar pode ser iterado em um la\u00e7o for.</p> <pre><code>with open(\"exemplo.txt\", \"r\") as file:\n    conteudo = []\n    for linha in file:\n        conteudo.append(linha.strip())\nprint(conteudo)\n</code></pre> <p>O resultado ser\u00e1: <code>['Ol\u00e1 universo!', 'Pensamento computacional', 'Com Python \u00e9 facil.']</code></p> <p>Tip</p> <p>Para ler o arquivo e remover o caractere de nova linha <code>\\n</code> de cada linha, voc\u00ea pode usar o m\u00e9todo <code>strip()</code>. Esse m\u00e9todo retorna uma c\u00f3pia da string original, removendo os espa\u00e7os em branco no in\u00edcio e no final da string. No contexto de leitura de arquivos, ele efetivamente remove os caracteres de nova linha <code>\\n</code> do final das linhas.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#escrita","title":"Escrita:","text":"<p>Ao escrever em um arquivo, temos que saber que:</p> <ul> <li>Se tentarmos abrir um arquivo que n\u00e3o existe, um novo arquivo ser\u00e1 criado;</li> <li>Se um arquivo j\u00e1 existir, seu conte\u00fado ser\u00e1 apagado e um novo conte\u00fado ser\u00e1 adicionado ao arquivo.</li> <li>Pode ser utilizado <code>\\n</code> para dar quebra de linha ao escrever no arquivo.</li> <li>Para escrever em um arquivo em Python, precisamos abri-lo no modo de grava\u00e7\u00e3o passando <code>w</code> dentro de <code>open()</code> como segundo argumento.</li> </ul> <p>Se o arquivo <code>exemplo2.txt</code> n\u00e3o existe. Vamos ver o que acontece se escrevermos conte\u00fado nele.</p> <pre><code>with open(\"exemplo2.txt\", \"w\") as file:\n    file.write(\"Ol\u00e1, Mundo!\\n\")\n    file.write(\"Pensamento Computacional\")\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/files-maniputation.html#trabalhando-com-csvs","title":"Trabalhando com CSVs","text":"<p>O m\u00f3dulo <code>csv</code> do Python facilita a leitura e a escrita de arquivos CSV.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#leitura_1","title":"Leitura:","text":"<pre><code>import csv\nwith open('exemplo.csv', 'r') as file:\n    reader = csv.reader(file)\n    for row in reader:\n        print(row)\n</code></pre>"},{"location":"aulas/ctp/python/files-maniputation.html#escrita_1","title":"Escrita:","text":"<pre><code>import csv\nwith open('exemplo.csv', 'w', newline='') as file:\n    writer = csv.writer(file)\n    writer.writerow([\"nome\", \"idade\", \"profiss\u00e3o\"])\n    writer.writerow([\"Jo\u00e3o\", 30, \"Engenheiro\"])\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/files-maniputation.html#trabalhando-com-arquivos-json","title":"Trabalhando com Arquivos JSON","text":"<p>JSON (JavaScript Object Notation) \u00e9 um formato leve de troca de dados que \u00e9 f\u00e1cil de ler e escrever para humanos e f\u00e1cil de analisar e gerar para m\u00e1quinas. Em Python, o m\u00f3dulo <code>json</code> facilita a leitura e escrita de arquivos JSON.</p> <p>Ao trabalhar com JSON em Python, os objetos JSON s\u00e3o convertidos em tipos de dados Python, como dicion\u00e1rios, listas, strings, n\u00fameros, booleanos (<code>true</code>/<code>false</code> em JSON se tornam <code>True</code>/<code>False</code> em Python) e <code>null</code> (em JSON) se torna <code>None</code> em Python.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#lendo-de-um-arquivo-json","title":"Lendo de um Arquivo JSON","text":"<p>Para ler dados de um arquivo JSON, voc\u00ea pode usar o m\u00e9todo <code>load()</code> do m\u00f3dulo <code>json</code>.</p> <pre><code>import json\n\nwith open(\"dados.json\", \"r\") as file:\n    data = json.load(file)\nprint(data)\n</code></pre>"},{"location":"aulas/ctp/python/files-maniputation.html#escrevendo-em-um-arquivo-json","title":"Escrevendo em um Arquivo JSON","text":"<p>Para escrever dados em um arquivo JSON, voc\u00ea pode usar o m\u00e9todo <code>dump()</code> do m\u00f3dulo <code>json</code>.</p> <pre><code>import json\n\npizza = {\n    \"marguerita\": {\n        \"tamanho\": \"m\u00e9dio\",\n        \"pre\u00e7o\": 22.99,\n        \"ingredientes\": [\"tomate\", \"mu\u00e7arela\", \"manjeric\u00e3o\"],\n        \"queijo_extra\": False\n    },\n    \"pepperoni\": {\n        \"tamanho\": \"grande\",\n        \"pre\u00e7o\": 55.67,\n        \"ingredientes\": [\"pepperoni\", \"mu\u00e7arela\"],\n        \"queijo_extra\": True\n    },\n    \"vegetariana\": {\n        \"tamanho\": \"pequena\",\n        \"pre\u00e7o\": 10.5,\n        \"ingredientes\": [\"cogumelos\", \"piment\u00e3o verde\", \"cebolas\"],\n        \"queijo_extra\": False\n    },\n    \"cliente\": {\n        \"nome\": \"Janaina Faminta\",\n        \"telefone\": None,\n        \"email\": \"jana@email.com\"\n    }\n}\n\n\nwith open(\"dados_pizza.json\", \"w\") as file:\n    json.dump(pizza, file)\n</code></pre>"},{"location":"aulas/ctp/python/files-maniputation.html#trabalhando-com-strings-json","title":"Trabalhando com Strings JSON","text":"<ul> <li>Para converter uma string JSON em um objeto Python:</li> </ul> <pre><code>import json\n\ndata_string = '{\"nome\": \"Renato\", \"idade\": 30, \"cidade\": \"S\u00e3o Paulo\"}'\ndata_object = json.loads(data_string)\nprint(data_object)\n</code></pre> <ul> <li>Para converter um objeto Python em uma string JSON:</li> </ul> <pre><code>data_object = {\"nome\": \"Arnaldo\", \"idade\": 25, \"cidade\": \"Rio de Janeiro\"}\ndata_string = json.dumps(data_object, indent=4)\nprint(data_string)\n</code></pre> <p>Tip</p> <p>O argumento <code>indent</code> em <code>dumps()</code> \u00e9 usado para formatar a sa\u00edda JSON, tornando-a mais leg\u00edvel.</p>"},{"location":"aulas/ctp/python/files-maniputation.html#diferenca-entre-load-e-loads","title":"Diferen\u00e7a entre <code>load()</code> e <code>loads()</code>","text":"<ul> <li> <p><code>json.load()</code>: Este m\u00e9todo \u00e9 usado para ler dados JSON de um arquivo. Ele l\u00ea o arquivo e converte o conte\u00fado JSON em um objeto Python.</p> </li> <li> <p><code>json.loads()</code>: Este m\u00e9todo \u00e9 usado para analisar uma string JSON e convert\u00ea-la em um objeto Python.</p> </li> </ul>"},{"location":"aulas/ctp/python/files-maniputation.html#diferenca-entre-dump-e-dumps","title":"Diferen\u00e7a entre <code>dump()</code> e <code>dumps()</code>","text":"<ul> <li> <p><code>json.dump()</code>: Este m\u00e9todo \u00e9 usado para escrever dados JSON em um arquivo.</p> </li> <li> <p><code>json.dumps()</code>: Este m\u00e9todo converte um objeto Python em uma string JSON.</p> </li> </ul> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/files-maniputation.html#arquivos-binarios","title":"Arquivos Bin\u00e1rios","text":"<p>Ao trabalhar com arquivos n\u00e3o-textuais, como imagens ou execut\u00e1veis, utilizamos o modo bin\u00e1rio. </p> <pre><code># Lendo um arquivo bin\u00e1rio\nwith open(\"imagem.jpg\", \"rb\") as file:\n    data = file.read()\n</code></pre>"},{"location":"aulas/ctp/python/files-maniputation.html#tratamento-de-excecoes","title":"Tratamento de Exce\u00e7\u00f5es","text":"<p>\u00c9 importante tratar exce\u00e7\u00f5es ao trabalhar com arquivos para evitar falhas no programa. O erro mais comum \u00e9 o <code>FileNotFoundError</code>.</p> <pre><code>try:\n    with open(\"arquivo_inexistente.txt\", \"r\") as file:\n        content = file.read()\nexcept FileNotFoundError:\n    print(\"Arquivo n\u00e3o encontrado.\")\n</code></pre>"},{"location":"aulas/ctp/python/files-maniputation.html#boas-praticas-ao-trabalhar-com-arquivos","title":"Boas Pr\u00e1ticas ao Trabalhar com Arquivos","text":"<ul> <li>Sempre use o gerenciador de contexto <code>with</code> ao abrir arquivos para garantir que eles sejam fechados corretamente.</li> <li>Manipule exce\u00e7\u00f5es ao trabalhar com arquivos para lidar com poss\u00edveis erros.</li> <li>Evite a leitura de arquivos inteiros na mem\u00f3ria se eles forem muito grandes. Existem tecnicas e bibliotecas mais apropriadas para isso, como <code>Pandas</code></li> </ul>"},{"location":"aulas/ctp/python/functions-modules.html","title":"Fun\u00e7\u00f5es","text":""},{"location":"aulas/ctp/python/functions-modules.html#funcoes-em-python","title":"Fun\u00e7\u00f5es em Python","text":"<p>Fun\u00e7\u00f5es s\u00e3o blocos de c\u00f3digo que s\u00e3o projetados para fazer uma coisa espec\u00edfica. Se voc\u00ea precisar executar essa tarefa v\u00e1rias vezes durante o seu programa, voc\u00ea n\u00e3o precisa digitar todo o c\u00f3digo para aquela tarefa novamente. Basta chamar a fun\u00e7\u00e3o dedicada a ela.</p>"},{"location":"aulas/ctp/python/functions-modules.html#objetivos","title":"Objetivos","text":"<p>Se familiarizar com os conceitos b\u00e1sicos das fun\u00e7\u00f5es em Python:</p> <ul> <li>Como definir e chamar fun\u00e7\u00f5es.</li> <li>Usando par\u00e2metros e valores de retorno.</li> <li>Definindo valores padr\u00e3o para par\u00e2metros.</li> </ul>"},{"location":"aulas/ctp/python/functions-modules.html#por-que-usar-funcoes","title":"Por que usar fun\u00e7\u00f5es?","text":"<ul> <li>Modularidade: Permite segmentar um programa longo em fun\u00e7\u00f5es menores e gerenci\u00e1veis.</li> <li>Reusabilidade: Permite reutilizar uma fun\u00e7\u00e3o em diferentes programas.</li> <li>Economia de tempo: Voc\u00ea n\u00e3o precisa escrever o mesmo c\u00f3digo repetidamente.</li> <li>Manuten\u00e7\u00e3o de programas: Se uma l\u00f3gica precisa ser alterada, voc\u00ea pode fazer a mudan\u00e7a na fun\u00e7\u00e3o espec\u00edfica, em vez de alterar o c\u00f3digo repetido em v\u00e1rios lugares.</li> </ul>"},{"location":"aulas/ctp/python/functions-modules.html#1-criando-uma-funcao","title":"1. Criando uma Fun\u00e7\u00e3o","text":"<p>Uma fun\u00e7\u00e3o \u00e9 definida usando a palavra-chave <code>def</code>, seguida pelo nome da fun\u00e7\u00e3o, par\u00eanteses <code>()</code> e dois pontos <code>:</code>. O c\u00f3digo dentro da fun\u00e7\u00e3o \u00e9 indentado.</p> <pre><code>def nome_da_funcao():\n    print(\"Ol\u00e1, sou uma fun\u00e7\u00e3o!\")\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#2-chamando-uma-funcao","title":"2. Chamando uma Fun\u00e7\u00e3o","text":"<p>Depois de definir uma fun\u00e7\u00e3o, voc\u00ea pode \\\"cham\u00e1-la\\\" ou \\\"invoc\u00e1-la\\\" usando seu nome seguido de par\u00eanteses.</p> <pre><code>nome_da_funcao()  # Isso imprimir\u00e1: Ol\u00e1, sou uma fun\u00e7\u00e3o!\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#3-passando-parametros","title":"3. Passando Par\u00e2metros","text":"<p>Informa\u00e7\u00f5es podem ser passadas para as fun\u00e7\u00f5es por meio de par\u00e2metros. Par\u00e2metros s\u00e3o especificados ap\u00f3s o nome da fun\u00e7\u00e3o, entre os par\u00eanteses.</p> <pre><code>def saudacao(nome):\n    print(f\"Ol\u00e1, {nome}!\")\n</code></pre> <p>Ao chamar essa fun\u00e7\u00e3o, voc\u00ea pode passar um valor (argumento) para o par\u00e2metro <code>nome</code>:</p> <pre><code>saudacao(\"Alice\")  # Isso imprimir\u00e1: Ol\u00e1, Alice!\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#4-retorno-de-funcao","title":"4. Retorno de Fun\u00e7\u00e3o","text":"<p>Uma fun\u00e7\u00e3o pode retornar um valor usando a instru\u00e7\u00e3o <code>return</code>.</p> <pre><code>def somar(a, b):\n    return a + b\n</code></pre> <p>Voc\u00ea pode armazenar o valor retornado em uma vari\u00e1vel:</p> <pre><code>resultado = somar(5, 3)  # resultado ser\u00e1 8\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#5-valores-padrao-para-parametros","title":"5. Valores Padr\u00e3o para Par\u00e2metros","text":"<p>Voc\u00ea pode definir um valor padr\u00e3o para um par\u00e2metro para que, se um argumento n\u00e3o for fornecido ao chamar a fun\u00e7\u00e3o, ela use o valor padr\u00e3o:</p> <pre><code>def saudacao_avancada(nome=\"Visitante\"):\n    return f\"Ol\u00e1, {nome}!\"\n</code></pre> <p>Chamando essa fun\u00e7\u00e3o sem fornecer um argumento:</p> <pre><code>saudacao_avancada()  # Isso retornar\u00e1: Ol\u00e1, Visitante!\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#6-funcoes-com-numero-arbitrario-de-argumentos","title":"6. Fun\u00e7\u00f5es com N\u00famero Arbitr\u00e1rio de Argumentos","text":"<p>\u00c0s vezes, em programa\u00e7\u00e3o, nos deparamos com situa\u00e7\u00f5es em que o n\u00famero exato de argumentos que uma fun\u00e7\u00e3o deve receber n\u00e3o \u00e9 conhecido antecipadamente. Python oferece uma maneira flex\u00edvel de lidar com isso atrav\u00e9s do uso de <code>*args</code>e<code>**kwargs</code>.</p>"},{"location":"aulas/ctp/python/functions-modules.html#utilizando-args","title":"Utilizando *args","text":"<p>Quando voc\u00ea deseja que sua fun\u00e7\u00e3o aceite um n\u00famero indefinido de argumentos posicionais, utiliza-se <code>*args</code>. O termo args \u00e9 apenas uma conven\u00e7\u00e3o, e voc\u00ea pode nome\u00e1-lo como desejar, desde que esteja precedido por um asterisco <code>*</code>.</p> <pre><code>def lista_nomes(*nomes):\n    return f\"Lista de nomes: {', '.join(nomes)}\"\n</code></pre> <p>Chamando essa fun\u00e7\u00e3o:</p> <pre><code>lista_nomes(\"Alice\", \"Bob\", \"Charlie\")  # Isso retornar\u00e1: Lista de nomes: Alice, Bob, Charlie\n</code></pre> <p>Tip</p> <p>Nota: Embora a conven\u00e7\u00e3o mais comum seja usar <code>*args</code>, voc\u00ea pode substituir \"<code>args</code>\" por qualquer nome que achar adequado.</p>"},{"location":"aulas/ctp/python/functions-modules.html#utilizando-kwargs","title":"Utilizando  **kwargs","text":"<p>Para situa\u00e7\u00f5es em que voc\u00ea deseja aceitar um n\u00famero indefinido de argumentos de palavra-chave, Python oferece  <code>**kwargs</code>. Novamente, \"<code>kwargs</code>\" \u00e9 apenas uma conven\u00e7\u00e3o e pode ser substitu\u00eddo por qualquer nome, desde que esteja precedido por dois asteriscos <code>**</code>.</p> <p>Os argumentos passados s\u00e3o armazenados em um dicion\u00e1rio, facilitando seu acesso e manipula\u00e7\u00e3o.</p> <p>Se voc\u00ea n\u00e3o souber quantos argumentos de palavra-chave ser\u00e3o passados para sua fun\u00e7\u00e3o, pode adicionar um <code>**</code> antes do nome do par\u00e2metro. Isso permitir\u00e1 que voc\u00ea passe m\u00faltiplos argumentos de palavra-chave para a fun\u00e7\u00e3o e os receba como um dicion\u00e1rio.</p> <pre><code>def apresentacao(**pessoa):\n    return f\"{pessoa['nome']} tem {pessoa['idade']} anos e mora em {pessoa['cidade']}.\"\n</code></pre> <pre><code>apresentacao(nome=\"Jo\u00e3o\", idade=30, cidade=\"Rio de Janeiro\") # Isso retornar\u00e1: Jo\u00e3o tem 30 anos e mora em Rio de Janeiro.\n</code></pre> <p>Tip</p> <p>Nota: Semelhante ao <code>*args</code>, <code>**kwargs</code> \u00e9 apenas uma conven\u00e7\u00e3o. Voc\u00ea \u00e9 livre para usar qualquer nome que desejar, mas \u00e9 recomendado seguir essa conven\u00e7\u00e3o para manter a legibilidade e compreensibilidade do c\u00f3digo.</p>"},{"location":"aulas/ctp/python/functions-modules.html#7-funcoes-lambda","title":"7. Fun\u00e7\u00f5es Lambda","text":"<p>Uma fun\u00e7\u00e3o lambda \u00e9 uma pequena fun\u00e7\u00e3o an\u00f4nima. Uma fun\u00e7\u00e3o lambda pode ter qualquer n\u00famero de argumentos, mas s\u00f3 pode ter uma express\u00e3o. A express\u00e3o \u00e9 avaliada e retornada. As fun\u00e7\u00f5es lambda podem ser usadas onde objetos de fun\u00e7\u00e3o s\u00e3o necess\u00e1rios.</p> <p>Exemplo:</p> <pre><code>f = lambda x, y: x + y\nf(5, 3)  # Isso retornar\u00e1 8\n</code></pre>"},{"location":"aulas/ctp/python/functions-modules.html#e-o-que-mais","title":"E o que mais??","text":"<p>Esse assunto n\u00e3o se esgota aqui... mas j\u00e1 \u00e9 um bom inicio para o nosso aprendizado.</p>"},{"location":"aulas/ctp/python/intro-python.html","title":"Introdu\u00e7\u00e3o ao Python","text":""},{"location":"aulas/ctp/python/intro-python.html#introducao-ao-python","title":"Introdu\u00e7\u00e3o ao Python","text":""},{"location":"aulas/ctp/python/intro-python.html#o-que-e-python","title":"O que \u00e9 Python?","text":"<p>De acordo com o proprio site do Pyhton a defini\u00e7\u00e3o \u00e9 de que:  <code>Python \u00e9 uma linguagem de programa\u00e7\u00e3o interpretada, interativa e orientada a objetos. Ele incorpora m\u00f3dulos, exce\u00e7\u00f5es, tipagem din\u00e2mica, tipos de dados din\u00e2micos de alto n\u00edvel e classes. Ele oferece suporte a v\u00e1rios paradigmas de programa\u00e7\u00e3o al\u00e9m da programa\u00e7\u00e3o orientada a objetos, como programa\u00e7\u00e3o procedural e funcional. Python combina um poder not\u00e1vel com uma sintaxe muito clara. Possui interfaces para muitas chamadas de sistema e bibliotecas, bem como para v\u00e1rios sistemas de janelas, e \u00e9 extens\u00edvel em C ou C++. Tamb\u00e9m pode ser usado como uma linguagem de extens\u00e3o para aplicativos que precisam de uma interface program\u00e1vel. Por fim, o Python \u00e9 port\u00e1til: ele roda em muitas variantes do Unix, incluindo Linux e macOS, e no Windows</code>.</p>"},{"location":"aulas/ctp/python/intro-python.html#por-que-o-python-e-tao-popular","title":"Por que o Python \u00e9 t\u00e3o popular?","text":"<p>Python \u00e9 considerada como uma das linguagens de programa\u00e7\u00e3o mais populares do mundo. Vamos examinar algumas das raz\u00f5es para sua popularidade:</p> <ul> <li>Python \u00e9 vers\u00e1til: Sendo uma linguagem de prop\u00f3sito geral, Python pode ser usado para criar e fazer muitas coisas diferentes, desde visualiza\u00e7\u00f5es de dados, modelos aprendizado de maquina at\u00e9 desenvolvimento web.</li> <li>Python \u00e9 simples e f\u00e1cil de aprender: Sua sintaxe \u00e9 simples, os comandos s\u00e3o baseados em ingl\u00eas, e seu layout \u00e9 direto.</li> <li>Python \u00e9 open-source: Isso significa que \u00e9 gratuito para todos usarem. Al\u00e9m disso, qualquer pessoa pode criar ferramentas adicionais, bibliotecas e frameworks para Python.</li> </ul>"},{"location":"aulas/ctp/python/intro-python.html#python-e-amplamente-utilizado","title":"Python \u00e9 amplamente utilizado","text":"<p>Empresas como Google, NASA, Spotify e JP Morgan Chase usam Python diariamente. Conhe\u00e7a um pouco mais.</p> <pre><code>- Instagram (utiliza Django como backend, um framework Pyrhon para a web)\n- Google (grande parte do algoritmo de busca \u00e9 escrito em Python)\n- Spotify (o aplicativo \u00e9 constru\u00eddo em Python)\n- Netflix (utiliza muitas bibliotecas Python)\n- Uber (boa parte do aplicativo \u00e9 feita com Python)\n- Dropobox (contratou o criador da linguagem Python, Guido van Rossum)\n- Pinterest (utiliza Python e Django)\n- Reddit (utiliza bibliotecas Python)\n</code></pre>"},{"location":"aulas/ctp/python/intro-python.html#um-pouquinho-da-historia","title":"Um pouquinho da hist\u00f3ria...","text":"<p>Python foi concebido no final dos anos 1980 e foi inicialmente projetado para ser um sucessor da linguagem de programa\u00e7\u00e3o ABC.</p> <p></p> <p><code>Guido van Rossum</code> \u00e9 o criador do Python. Ele come\u00e7ou a trabalhar na linguagem durante suas f\u00e9rias de Natal em 1989. Van Rossum nomeou sua linguagem de Python porque era f\u00e3 do grupo de com\u00e9dia brit\u00e2nico, Monty Python.</p> <p>Python passou por muitas mudan\u00e7as ao longo de sua vida. Desde sua primeira vers\u00e3o em 1991 at\u00e9 as vers\u00f5es mais recentes, a linguagem tem se adaptado \u00e0s necessidades dos desenvolvedores e \u00e0s tecnologias em evolu\u00e7\u00e3o.</p>"},{"location":"aulas/ctp/python/intro-python.html#para-saber-mais-curiosidades-sobre-o-python","title":"Para saber mais curiosidades sobre o Python","text":"<ul> <li>fatos interessantes</li> <li>7 curiosidades</li> <li>10 fatos sobre python</li> </ul>"},{"location":"aulas/ctp/python/lists-tuples.html","title":"Listas e Tuplas","text":""},{"location":"aulas/ctp/python/lists-tuples.html#listas-e-tuplas-em-python","title":"Listas e Tuplas em Python","text":"<p>Python oferece uma variedade de estruturas de dados compostas usadas para agrupar outros valores. As mais vers\u00e1teis s\u00e3o as <code>listas</code> e as <code>tuplas</code>, que podem ser compostas por itens de diferentes tipos.</p> <p>Tip</p> <p>Tanto listas quanto tuplas s\u00e3o parte integrante da linguagem Python e s\u00e3o usadas em uma variedade de aplica\u00e7\u00f5es.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#listas","title":"Listas","text":"<p>Uma lista (<code>list</code>) uma lista \u00e9 uma estrutura de dados que pode armazenar m\u00faltiplos itens (cole\u00e7\u00e3o de itens) em uma \u00fanica vari\u00e1vel (vetor). Em outras palavras, trata-se de uma sequ\u00eancia ordenada de objetos que podem ser acessados por meio de seu \u00edndice (<code>index</code>), um marcador de sua posi\u00e7\u00e3o. </p>"},{"location":"aulas/ctp/python/lists-tuples.html#criacao-de-listas","title":"Cria\u00e7\u00e3o de Listas","text":"<p>Em Python, as listas s\u00e3o delimitadas por colchetes (<code>[]</code>) e separadas por vigulas (<code>,</code>). Esses itens podem ser de qualquer tipo, incluindo n\u00fameros, strings e at\u00e9 outras listas</p> <pre><code>n\u00fameros = [1, 2, 3, 4, 5]\nnomes = [\"Alice\", \"Bob\", \"Charlie\"]\nmisturada = [1, \"Alice\", [2, 3, 4]]\nfrutas = [\"ma\u00e7\u00e3\", \"banana\", \"cereja\"]  # exemplo de uma lista com 3 valores\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#acesso-a-elementos","title":"Acesso a Elementos","text":"<p>Cada item em uma lista tem um \u00edndice, come\u00e7ando do zero. Voc\u00ea pode acessar itens individuais usando esse \u00edndice.</p> <pre><code>print(frutas[1])  # Sa\u00edda: banana\nprint(nomes[0])  # Sa\u00edda: Alice\nprint(misturada[2][1])  # ATENC\u00c3O nesta Sa\u00edda: 3\n</code></pre> <p>Tip</p> <p>Em python assim como em outras linguagens de programa\u00e7\u00e3o, come\u00e7amos a contar o indice a partir de zero, isso significa que o valor da primeira posi\u00e7\u00e3o da lista possui indice <code>0</code> (zero).</p> <p>Quando criamos uma lista em Python, al\u00e9m de poder manipular essa estrutura pelo seu indice, ela j\u00e1 vem equipada com diversos m\u00e9todos predefinidos que nos ajudam a operar e manipular essa estrutura de forma mais facil, vamos ver alguns deles.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#adicao-remocao-e-alteracao-de-elementos","title":"Adi\u00e7\u00e3o, Remo\u00e7\u00e3o e Altera\u00e7\u00e3o de Elementos","text":"<p>Listas s\u00e3o estruturas de dados <code>mut\u00e1veis</code>, o que significa dizer que podemos alterar (editar), adicionar (expandir) e remover (reduzir) itens ap\u00f3s a lista ser criada.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#adicionar","title":"Adicionar","text":"<p>M\u00e9todo para adicionar item a uma lista</p> <pre><code>- append(): Adiciona um item ao final da lista.\n- insert(): Insere um item em uma posi\u00e7\u00e3o espec\u00edfica.\n</code></pre> <pre><code>frutas = [\"ma\u00e7\u00e3\", \"banana\"]\n\nfrutas.append(\"uva\")\nfrutas.insert(1, \"laranja\")\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#remocao","title":"Remo\u00e7\u00e3o","text":"<p>M\u00e9todo para remo\u00e7\u00e3o de item da lista:</p> <pre><code>- remove(): Remove o primeiro item com o valor especificado.\n- pop(): Remove o item em um \u00edndice espec\u00edfico (ou o \u00faltimo item se o \u00edndice n\u00e3o for especificado).\n- clear(): Limpa todos os itens da lista.\n</code></pre> <p>Tip</p> <p>Cuidado com o m\u00e9todo <code>remove()</code>,  quando o item n\u00e3o existe na lista vai gerar o erro <code>ValueError</code></p> <pre><code>frutas.remove(\"banana\")\nfrutas.pop()\nfrutas.clear()\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#alteracao","title":"Altera\u00e7\u00e3o","text":"<p>Voc\u00ea pode alterar um item referenciando seu \u00edndice.</p> <pre><code>frutas[0] = \"manga\"\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#metodos-mais-utilizados-de-listas","title":"M\u00e9todos mais utilizados de Listas","text":"<p>Alguns dos m\u00e9todos mais utilizados s\u00e3o:</p> <pre><code>- len(): Retorna o n\u00famero de itens em uma lista.\n- extend(): Adiciona elementos de outra lista (ou qualquer iter\u00e1vel) ao final da lista atual.\n- index(): Retorna o \u00edndice do primeiro item com o valor especificado.\n- count(): Retorna o n\u00famero de vezes que um valor aparece na lista.\n- sort(): Ordena a lista.\n- reverse(): Inverte a ordem da lista.\n</code></pre> <p>Tip</p> <p>\u00c9 importante mencionar que o m\u00e9todo <code>sort()</code> altera a lista original, enquanto a fun\u00e7\u00e3o incorporada <code>sorted()</code> retorna uma nova lista ordenada.</p> <p>Teste o c\u00f3digo a seguir:</p> <p><pre><code># definimos uma lista de listas (com nome e senha)\nusuarios = [\n    ['alberto', '1234'],\n    ['mario', '6282'],\n    ['maria', '5274'],\n    ['joana', '9943']\n]\n\nnome = input('Nome do usu\u00e1rio: ')\nsenha = input('Senha: ')\n\n# Verificando se a combina\u00e7\u00e3o nome e senha est\u00e1 na lista de usu\u00e1rios\nusuario_encontrado = [nome, senha] in usuarios\n\nif usuario_encontrado:\n    msg = 'Acesso liberado'\nelse:\n    msg = 'Acesso negado'\n\nprint(msg)\n</code></pre> Neste c\u00f3digo estamos usando a express\u00e3o <code>[nome, senha] in usuarios</code> para verificar se a combina\u00e7\u00e3o de nome e senha existe na lista usuarios. Esta express\u00e3o retornar\u00e1 True se a combina\u00e7\u00e3o for encontrada e False caso contr\u00e1rio.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#fatiamento-slices","title":"Fatiamento (slices)","text":"<p>Al\u00e9m de acessar elementos da lista por meio de \u00edndices, podemos realizar o fatiamento de listas. O fatiamento \u00e9 uma opera\u00e7\u00e3o que permite extrair uma sublista de uma lista. A sintaxe de fatiamento \u00e9 representada por colchetes <code>[]</code> e dois pontos <code>:</code>.</p> <p>A nota\u00e7\u00e3o b\u00e1sica do fatiamento \u00e9: <code>lista[in\u00edcio:fim]</code>, onde:</p> <ul> <li>in\u00edcio: \u00e9 o \u00edndice inicial do fatiamento (inclusivo).</li> <li>fim: \u00e9 o \u00edndice final do fatiamento (exclusivo).</li> </ul> <p>Por exemplo, <code>lista[1:4]</code> retorna uma sublista que come\u00e7a no \u00edndice 1 e vai at\u00e9 (mas n\u00e3o inclui) o \u00edndice 4.</p> <p>A nota\u00e7\u00e3o <code>[ : ]</code> pode ser expandida para incluir um terceiro par\u00e2metro, <code>o passo</code>, usando a sintaxe <code>lista[in\u00edcio:fim:passo]</code>:</p> <ul> <li>passo: especifica a \"dist\u00e2ncia\" entre os \u00edndices. Por exemplo, um passo de 2 pula um \u00edndice entre cada item inclu\u00eddo na sublista.</li> </ul> <p>A nota\u00e7\u00e3o <code>[ : ]</code> por si s\u00f3 cria uma c\u00f3pia superficial da lista original. Isso significa que voc\u00ea obt\u00e9m uma nova lista com os mesmos elementos, mas \u00e9 uma lista diferente em termos de identidade (ou seja, est\u00e1 armazenada em um local diferente da mem\u00f3ria).</p> <p>Alguns exemplos comuns incluem:</p> <p>lista[::2]: retorna todos os elementos em \u00edndices pares. lista[::-1]: inverte a lista. lista[1:5:2]: retorna os elementos nos \u00edndices 1 e 3 (come\u00e7a no \u00edndice 1, termina antes do \u00edndice 5, com um passo de 2).</p> <pre><code>n\u00fameros = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\nsub_lista = n\u00fameros[2:7]  # [2, 3, 4, 5, 6]\n</code></pre> <p>juntando as coisas, varrendo uma lista com while. Exemplo de como usar um loop while para iterar atrav\u00e9s de uma lista</p> <pre><code>primos = [2, 3, 5, 7, 11]\ni = 0\nwhile i &lt; len(primos):\n    print( \"elemento de indice %d = %d\"%(i, primos[i]) )\n    i = i + 1\n</code></pre> <p>Esse \u00e9 um exemplo b\u00e1sico de como usar um loop while para iterar atrav\u00e9s de uma lista em Python. No entanto, em muitos casos, um <code>loop for</code> seria uma escolha mais razo\u00e1vel para essa tarefa.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#tuplas","title":"Tuplas","text":"<p>Tuplas s\u00e3o uma estrutura de dados em Python semelhante \u00e0s listas. No entanto, enquanto as listas s\u00e3o mut\u00e1veis (ou seja, podem ser alteradas ap\u00f3s a cria\u00e7\u00e3o), as tuplas s\u00e3o <code>imut\u00e1veis</code>. Isso significa que, uma vez que uma tupla \u00e9 criada, seus elementos n\u00e3o podem ser modificados, adicionados ou removidos.</p> <p>Tip</p> <p>A principal diferen\u00e7a entre listas e tuplas \u00e9 que listas s\u00e3o mut\u00e1veis, enquanto tuplas s\u00e3o imut\u00e1veis.</p>"},{"location":"aulas/ctp/python/lists-tuples.html#definindo-tuplas","title":"Definindo Tuplas","text":"<p>Uma tupla \u00e9 definida colocando-se uma sequ\u00eancia de valores separados por v\u00edrgulas entre par\u00eanteses <code>()</code>:</p> <pre><code>variavel = [2,2,2,2]\na = tuple(variavel)\n\ntupla_exemplo = (1, 2, 3, 4, 5)\nprint(tupla_exemplo)  # Sa\u00edda: (1, 2, 3, 4, 5)\n</code></pre> <p>\u00c9 poss\u00edvel definir uma tupla sem par\u00eanteses, usando apenas v\u00edrgulas:</p> <pre><code>tupla_simples = 1, 2, 3\nprint(tupla_simples)  # Sa\u00edda: (1, 2, 3)\n</code></pre> <p>Para tuplas com um \u00fanico elemento, \u00e9 necess\u00e1rio incluir uma v\u00edrgula ap\u00f3s o elemento:</p> <pre><code>tupla_simples = 1,\nprint(tupla_simples)  # Sa\u00edda: (1,)\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#acessando-elementos-de-tuplas","title":"Acessando Elementos de Tuplas","text":"<p>Assim como as listas, as tuplas s\u00e3o ordenadas e indexadas. Voc\u00ea pode acessar elementos de uma tupla usando \u00edndices:</p> <pre><code>tupla = (10, 20, 30, 40, 50)\nprint(tupla[1])  # Sa\u00edda: 20\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#imutabilidade-das-tuplas","title":"Imutabilidade das Tuplas","text":"<p>A principal caracter\u00edstica das tuplas \u00e9 sua imutabilidade:</p> <pre><code>tupla = (1, 2, 3)\n# tupla[1] = 4  # Isso causar\u00e1 um TypeError\n</code></pre> <p>Mesmo que voc\u00ea n\u00e3o possa modificar os elementos de uma tupla ap\u00f3s sua cria\u00e7\u00e3o, voc\u00ea pode concatenar ou repetir tuplas para formar novas tuplas:</p> <pre><code>tupla1 = (1, 2, 3)\ntupla2 = (4, 5, 6)\ntupla3 = tupla1 + tupla2\nprint(tupla3)  # Sa\u00edda: (1, 2, 3, 4, 5, 6)\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#fatiamento-em-tuplas","title":"Fatiamento em Tuplas","text":"<p>Assim como as listas, as tuplas tamb\u00e9m suportam opera\u00e7\u00f5es de fatiamento:</p> <pre><code>tupla = (0, 1, 2, 3, 4, 5, 6, 7, 8, 9)\nfatiado = tupla[2:6]\nprint(fatiado)  # Sa\u00edda: (2, 3, 4, 5)\n</code></pre>"},{"location":"aulas/ctp/python/lists-tuples.html#funcoes-com-tuplas","title":"Fun\u00e7\u00f5es com Tuplas","text":"<p>V\u00e1rias fun\u00e7\u00f5es que funcionam com listas tamb\u00e9m s\u00e3o aplic\u00e1veis \u00e0s tuplas:</p> <ul> <li>len(tupla): Retorna o n\u00famero de itens na tupla.</li> <li>min(tupla): Retorna o menor item da tupla.</li> <li>max(tupla): Retorna o maior item da tupla.</li> </ul>"},{"location":"aulas/ctp/python/lists-tuples.html#e-agora-qual-eu-escolho-por-que-usar-listas-ou-tuplas","title":"E agora qual eu escolho?? Por que usar Listas ou Tuplas?","text":"<p>Estudamos duas estruturas de dados muito utlizadas em programa\u00e7\u00e3o, mas... Voc\u00ea pode se perguntar: <code>\"Por que usar tuplas se as listas s\u00e3o mais flex\u00edveis?\"</code>. </p> <p>A escolha entre lista e tupla depender\u00e1 do contexto e das necessidades espec\u00edficas do seu programa. Vamos tentar listar algumas caracteristicas de cada uma delas.</p> Caracter\u00edstica Lista Tupla Mutabilidade Mut\u00e1vel (itens podem ser adicionados, removidos ou alterados). Imut\u00e1vel (n\u00e3o pode ser alterada ap\u00f3s a cria\u00e7\u00e3o). Sintaxe Usa colchetes <code>[]</code>: <code>[1, 2, 3]</code> Usa par\u00eanteses <code>()</code>: <code>(1, 2, 3)</code> Performance Geralmente mais lenta para algumas opera\u00e7\u00f5es devido \u00e0 mutabilidade. Geralmente mais r\u00e1pida por ser imut\u00e1vel. Utiliza\u00e7\u00e3o em dicion\u00e1rios N\u00e3o pode ser usada como chave devido \u00e0 mutabilidade. Pode ser usada como chave por ser imut\u00e1vel. M\u00e9todos integrados V\u00e1rios, como <code>append()</code>, <code>remove()</code>, <code>pop()</code>, <code>reverse()</code>, <code>extend()</code>. Limitados, como <code>count()</code> e <code>index()</code>. Tamanho (uso de mem\u00f3ria) Geralmente ocupa mais mem\u00f3ria devido \u00e0 sobrecarga associada \u00e0 mutabilidade. Ocupa menos mem\u00f3ria devido \u00e0 sua estrutura fixa e imut\u00e1vel. Casos de uso comuns Dados din\u00e2micos, armazenamento tempor\u00e1rio, onde a mutabilidade \u00e9 necess\u00e1ria. Representa\u00e7\u00f5es imut\u00e1veis, como pontos em geometria, chaves de dicion\u00e1rios. <p>Se voc\u00ea precisa de mutabilidade, v\u00e1 de lista. Se voc\u00ea quer imutabilidade (por raz\u00f5es de seguran\u00e7a, performance ou sem\u00e2ntica), escolha tupla.</p> <p>Em geral, as tuplas s\u00e3o usadas em situa\u00e7\u00f5es onde a imutabilidade \u00e9 necess\u00e1ria ou ben\u00e9fica. Por exemplo, tuplas podem ser usadas como chaves em dicion\u00e1rios (veremos isso em breve no curso ), enquanto listas n\u00e3o podem. Al\u00e9m disso, as tuplas, por serem imut\u00e1veis, podem ser mais seguras para certos tipos de opera\u00e7\u00f5es onde n\u00e3o queremos que os dados sejam alterados acidentalmente. Vamos tentar ver algumas aplica\u00e7\u00f5es.</p> Aplica\u00e7\u00e3o Escolha Justificativa Mantendo uma lista de tarefas pendentes Lista As tarefas podem ser adicionadas, removidas ou reordenadas dinamicamente. Representando um ponto no espa\u00e7o 3D Tupla Um ponto no espa\u00e7o \u00e9 imut\u00e1vel. Chaves para coordenadas geogr\u00e1ficas em dicion\u00e1rios Tupla Dicion\u00e1rios requerem que as chaves sejam imut\u00e1veis. Coletar e processar dados em tempo real Lista Dados podem precisar ser constantemente atualizados, adicionados ou removidos. Retorno de m\u00faltiplos valores de fun\u00e7\u00e3o Tupla Retorna um grupo fixo de valores que representam diferentes coisas. Edi\u00e7\u00e3o de Strings por Caractere Lista Strings s\u00e3o imut\u00e1veis em Python, ent\u00e3o para edi\u00e7\u00e3o eficiente \u00e9 convertido para lista e depois de volta para string."},{"location":"aulas/ctp/python/modules.html","title":"M\u00f3dulos e Pacotes","text":""},{"location":"aulas/ctp/python/modules.html#modulos-em-python","title":"M\u00f3dulos em Python","text":"<p>M\u00f3dulos em Python s\u00e3o simplesmente arquivos (scripts Python) que cont\u00eam defini\u00e7\u00f5es e instru\u00e7\u00f5es Python. Ao dividir o c\u00f3digo em m\u00f3dulos, podemos reutilizar c\u00f3digo, organizar melhor nosso programa e manter uma manuten\u00e7\u00e3o mais eficiente.</p>"},{"location":"aulas/ctp/python/modules.html#por-que-usar-modulos","title":"Por que usar m\u00f3dulos?","text":"<ul> <li>Reutiliza\u00e7\u00e3o de c\u00f3digo: Evita a repeti\u00e7\u00e3o de c\u00f3digo, permitindo que uma <code>fun\u00e7\u00e3o</code> ou <code>classe</code> seja definida uma vez e usada em muitos lugares.</li> <li>Organiza\u00e7\u00e3o: Ajuda a segmentar e organizar o c\u00f3digo, tornando-o mais leg\u00edvel e gerenci\u00e1vel.</li> <li>Manuten\u00e7\u00e3o: Facilita a corre\u00e7\u00e3o de bugs e a adi\u00e7\u00e3o de novos recursos, pois as altera\u00e7\u00f5es podem ser feitas em um m\u00f3dulo espec\u00edfico sem afetar o restante do programa.</li> </ul>"},{"location":"aulas/ctp/python/modules.html#importando-modulos","title":"Importando M\u00f3dulos","text":""},{"location":"aulas/ctp/python/modules.html#a-sintaxe-basica","title":"A sintaxe b\u00e1sica","text":"<p>Para usar um m\u00f3dulo em Python, primeiro precisamos import\u00e1-lo usando a palavra-chave <code>import</code>:</p> <pre><code>import nome_do_modulo\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#importando-multiplos-modulos","title":"Importando m\u00faltiplos m\u00f3dulos","text":"<p>Podemos importar v\u00e1rios m\u00f3dulos em uma \u00fanica linha:</p> <pre><code>import modulo1, modulo2, modulo3\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#renomeando-modulos-na-importacao","title":"Renomeando m\u00f3dulos na importa\u00e7\u00e3o","text":"<p>Para tornar o c\u00f3digo mais conciso ou evitar conflitos de nomes, podemos renomear o m\u00f3dulo durante a importa\u00e7\u00e3o:</p> <pre><code>import nome_do_modulo as nm\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#importando-funcoes-ou-classes-especificas","title":"Importando fun\u00e7\u00f5es ou classes espec\u00edficas","text":"<p>Para importar apenas fun\u00e7\u00f5es ou classes espec\u00edficas de um m\u00f3dulo:</p> <pre><code>from nome_do_modulo import nome_da_funcao\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#importando-todos-os-membros-de-um-modulo","title":"Importando todos os membros de um m\u00f3dulo","text":"<p>Embora n\u00e3o seja recomendado (pode levar a conflitos de nomes), \u00e9 poss\u00edvel importar todos os membros de um m\u00f3dulo:</p> <pre><code>from nome_do_modulo import *\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#criando-seus-proprios-modulos","title":"Criando Seus Pr\u00f3prios M\u00f3dulos","text":"<p>Para criar um m\u00f3dulo, simplesmente escreva o c\u00f3digo Python em um arquivo e salve-o com a extens\u00e3o <code>.py</code>. Por exemplo, se tivermos um arquivo chamado <code>meu_modulo.py</code> contendo:</p> <pre><code>def minha_funcao():\n    return \"Ol\u00e1, sou uma fun\u00e7\u00e3o do meu_modulo!\"\n</code></pre> <p>Podemos importar e usar essa fun\u00e7\u00e3o em outro arquivo:</p> <pre><code>import meu_modulo\n\nprint(meu_modulo.minha_funcao())\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#pacotes-em-python","title":"Pacotes em Python","text":""},{"location":"aulas/ctp/python/modules.html#o-que-sao-pacotes","title":"O que s\u00e3o pacotes?","text":"<p>Pacotes s\u00e3o uma maneira de organizar m\u00f3dulos relacionados em um \u00fanico diret\u00f3rio. Esse diret\u00f3rio cont\u00e9m um arquivo especial chamado <code>__init__.py</code> (que pode estar vazio) e um ou mais m\u00f3dulos.</p>"},{"location":"aulas/ctp/python/modules.html#como-criar-e-estruturar-pacotes","title":"Como criar e estruturar pacotes","text":"<p>Para criar um pacote chamado \"meu_pacote\" com dois m\u00f3dulos (<code>modulo_a.py</code> e <code>modulo_b.py</code>):</p> <pre><code>meu_pacote/\n|-- __init__.py\n|-- modulo_a.py\n|-- modulo_b.py\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#importando-modulos-de-um-pacote","title":"Importando m\u00f3dulos de um pacote","text":"<p>Para importar um m\u00f3dulo de um pacote:</p> <pre><code>from meu_pacote import modulo_a\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#boas-praticas-ao-usar-modulos","title":"Boas Pr\u00e1ticas ao Usar M\u00f3dulos","text":"<ul> <li>Evite usar <code>from nome_do_modulo import *</code> para prevenir conflitos de nomes.</li> <li>Mantenha m\u00f3dulos e fun\u00e7\u00f5es pequenos e focados em uma \u00fanica responsabilidade.</li> <li>Documente seus m\u00f3dulos, fun\u00e7\u00f5es e classes para facilitar a compreens\u00e3o por outros desenvolvedores.</li> </ul>"},{"location":"aulas/ctp/python/modules.html#exemplo-construindo-uma-calculadora","title":"Exemplo: Construindo uma Calculadora","text":""},{"location":"aulas/ctp/python/modules.html#passo-1-criar-o-modulo-da-calculadora","title":"Passo 1: Criar o M\u00f3dulo da Calculadora","text":"<p>Vamos come\u00e7ar criando um m\u00f3dulo chamado <code>calculadora.py</code> que fornecer\u00e1 as fun\u00e7\u00f5es b\u00e1sicas de uma calculadora.</p> <p>calculadora.py:</p> <pre><code>def adicionar(x, y):\n    return x + y\n\ndef subtrair(x, y):\n    return x - y\n\ndef multiplicar(x, y):\n    return x * y\n\ndef dividir(x, y):\n    if y == 0:\n        return \"Erro: Divis\u00e3o por zero!\"\n    return x / y\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#passo-2-usando-o-modulo-da-calculadora","title":"Passo 2: Usando o M\u00f3dulo da Calculadora","text":"<p>Em um novo arquivo, por exemplo <code>app.py</code>, vamos importar e usar o m\u00f3dulo da calculadora.</p> <p>app.py:</p> <pre><code>import calculadora\n\n# Testando as fun\u00e7\u00f5es da calculadora\nprint(calculadora.adicionar(5, 3))  # Resultado: 8\nprint(calculadora.subtrair(5, 3))  # Resultado: 2\nprint(calculadora.multiplicar(5, 3))  # Resultado: 15\nprint(calculadora.dividir(5, 3))  # Resultado: 1.666...\n</code></pre>"},{"location":"aulas/ctp/python/modules.html#passo-3-expandindo-a-calculadora","title":"Passo 3: Expandindo a Calculadora","text":"<p>Vamos expandir nossa calculadora para incluir algumas fun\u00e7\u00f5es avan\u00e7adas. Edite o m\u00f3dulo <code>calculadora.py</code> para adicionar as seguintes fun\u00e7\u00f5es:</p> <pre><code>def raiz_quadrada(x):\n    if x &lt; 0:\n        return \"Erro: Valor negativo!\"\n    return x ** 0.5\n\ndef potencia(base, expoente):\n    return base ** expoente\n</code></pre> <p>Agora, no arquivo <code>app.py</code>, voc\u00ea pode testar as novas fun\u00e7\u00f5es:</p> <pre><code>print(calculadora.raiz_quadrada(9))  # Resultado: 3\nprint(calculadora.potencia(2, 3))  # Resultado: 8\n</code></pre> <p>Recursos adicionais: - Documenta\u00e7\u00e3o oficial do Python sobre m\u00f3dulos - Python Module of the Week - Uma vis\u00e3o geral de muitos m\u00f3dulos da biblioteca padr\u00e3o.</p>"},{"location":"aulas/ctp/python/modules2.html","title":"M\u00f3dulos externos","text":""},{"location":"aulas/ctp/python/modules2.html#modulos-e-blibliotecas-em-python","title":"M\u00f3dulos e blibliotecas em Python","text":"<p>M\u00f3dulos e bibliotecas s\u00e3o o meio de estender as funcionalidades b\u00e1sicas da linguagem. Permitem que n\u00f3s programadores utilizem c\u00f3digo previamente escrito, evitando a necessidade de reinventar a roda a cada novo projeto.</p>"},{"location":"aulas/ctp/python/modules2.html#objetivos","title":"Objetivos","text":"<ul> <li>Explorar as bibliotecas padr\u00e3o do Python e o que elas oferecem.</li> <li>Aprender a instalar e usar bibliotecas de terceiros.</li> </ul>"},{"location":"aulas/ctp/python/modules2.html#modulos-mais-conhecidos","title":"M\u00f3dulos mais conhecidos","text":"<ol> <li>Bibliotecas padr\u00e3o de Python:</li> </ol> <p><code>os</code>: Para interagir com o sistema operacional. <code>datetime</code>: Para manipular datas e horas. <code>collections</code>: Cont\u00e9m alternativas especializadas para containers padr\u00e3o (como namedtuple, deque, Counter, etc.). <code>math</code>: Fun\u00e7\u00f5es matem\u00e1ticas. <code>json</code>: Para ler e escrever arquivos JSON. <code>re</code>: Para trabalhar com express\u00f5es regulares.</p> <ol> <li>Desenvolvimento web:</li> </ol> <p><code>Flask</code>: Um micro-framework para desenvolvimento web. <code>Django</code>: Um framework de alto n\u00edvel para desenvolvimento web. <code>FastAPI</code>:  Estrutura web moderna para constru\u00e7\u00e3o de APIs RESTful</p> <ol> <li>Desenvolvimento de GUI:</li> </ol> <p><code>tkinter</code>: Biblioteca padr\u00e3o para desenvolvimento de GUI. <code>PyQt</code> ou <code>PySide</code>: Para criar interfaces de usu\u00e1rio modernas. <code>Flet</code>: Interface cross plataforma <code>Kivy</code>: Desenvolvimento de aplicativos m\u00f3veis ou desktop.</p> <ol> <li>Automatiza\u00e7\u00e3o e scraping:</li> </ol> <p><code>selenium</code>: Para automatiza\u00e7\u00e3o de navegadores web. <code>BeautifulSoup</code>: Para parsing de HTML e XML.</p> <ol> <li>Conex\u00e3o com bancos de dados:</li> </ol> <p><code>sqlite3</code>: Interface para SQLite, um banco de dados relacional embutido. <code>SQLAlchemy</code>: Um toolkit SQL e ORM (Object-Relational Mapping).</p> <p>E muitoooo maissss.....</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#importando-modulos","title":"Importando M\u00f3dulos","text":"<p>Para usar um m\u00f3dulo padr\u00e3o do python, primeiro voc\u00ea precisa import\u00e1-lo. Isso \u00e9 feito usando a palavra-chave <code>import</code>.</p> <pre><code>import datetime\nimport calendar\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#instalando-bibliotecas-externas","title":"Instalando bibliotecas externas","text":"<p>Al\u00e9m das bibliotecas padr\u00e3o, voc\u00ea pode instalar bibliotecas externas. Essas s\u00e3o cole\u00e7\u00f5es de m\u00f3dulos escritos por terceiros que fornecem funcionalidades adicionais, desde manipula\u00e7\u00e3o de dados, web, interface at\u00e9 aprendizado de m\u00e1quina. Antes de realizar o <code>import</code> dessas bibliotecas \u00e9 necess\u00e1rio realizar a sua instala\u00e7\u00e3o.</p> <p>O <code>pip</code> \u00e9 o gerenciador de pacotes do Python que facilita a instala\u00e7\u00e3o e gerenciamento dessas bibliotecas. Ele vem pr\u00e9-instalado com o Python.</p>"},{"location":"aulas/ctp/python/modules2.html#instalar-uma-biblioteca","title":"Instalar uma biblioteca:","text":"<p>Use o comando <code>pip install nome_da_biblioteca</code>. Por exemplo, para instalar a biblioteca de requisi\u00e7\u00f5es HTTP requests, voc\u00ea usaria <code>pip install requests</code>.</p>"},{"location":"aulas/ctp/python/modules2.html#listar-bibliotecas-instaladas","title":"Listar bibliotecas instaladas:","text":"<p>Use <code>pip list</code>.</p> Package Version numpy 1.20.1 requests 2.31.0 <p>Ou <code>pip freeze</code>.</p> <pre><code>numpy==1.20.1\nrequests==2.31.0\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#desinstalar-uma-biblioteca","title":"Desinstalar uma biblioteca:","text":"<p>Use <code>pip uninstall nome_da_biblioteca</code>.</p>"},{"location":"aulas/ctp/python/modules2.html#instalar-bibliotecas-de-um-arquivo-de-requisitos","title":"Instalar bibliotecas de um arquivo de requisitos:","text":"<p>Para projetos maiores, \u00e9 comum especificar todas as depend\u00eancias em um arquivo de requisitos, geralmente chamado <code>requirements.txt</code>. Para instalar todas as bibliotecas listadas neste arquivo, use <code>pip install -r requirements.txt</code>.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#modulo-datetime","title":"M\u00f3dulo <code>datetime</code>","text":"<p>O m\u00f3dulo <code>datetime</code> \u00e9 built-in do Python e fornece classes para manipular <code>datas e horas</code>.</p>"},{"location":"aulas/ctp/python/modules2.html#classes-principais","title":"Classes Principais","text":"<ul> <li>date: Representa uma data (ano, m\u00eas e dia).</li> <li>time: Representa uma hora do dia.</li> <li>datetime: Combina uma data e uma hora.</li> <li>timedelta: Representa a diferen\u00e7a entre duas datas ou horas.</li> </ul>"},{"location":"aulas/ctp/python/modules2.html#criando-objetos","title":"Criando Objetos","text":"<p>Para criar uma data:</p> <pre><code>import datetime\n\nd = datetime.date(2023, 10, 20)\nprint(d)  # Sa\u00edda: 2023-10-20\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#diferenca-entre-datas","title":"Diferen\u00e7a entre datas","text":"<p>Voc\u00ea pode subtrair duas datas para obter um objeto <code>timedelta</code>:</p> <pre><code>d1 = datetime.date(2023, 10, 20)\nd2 = datetime.date(2023, 11, 20)\ndelta = d2 - d1\nprint(delta.days)  # Sa\u00edda: 31\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#adicionando-ou-subtraindo-de-uma-data","title":"Adicionando ou subtraindo de uma data","text":"<p>Use <code>timedelta</code>:</p> <pre><code>d = datetime.date(2023, 10, 20)\ndelta = datetime.timedelta(days=10)\nnew_date = d + delta\nprint(new_date)  # Sa\u00edda: 2023-10-30\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#modulo-calendar","title":"M\u00f3dulo <code>calendar</code>","text":"<p>O m\u00f3dulo <code>calendar</code>  built-in do Python e fornece fun\u00e7\u00f5es e classes para trabalhar com calend\u00e1rios.</p>"},{"location":"aulas/ctp/python/modules2.html#funcoes-uteis","title":"Fun\u00e7\u00f5es \u00dateis","text":"<ul> <li>weekday(): Retorna o dia da semana de uma data. 0 \u00e9 segunda-feira e 6 \u00e9 domingo.</li> </ul> <pre><code>import calendar\n\nprint(calendar.weekday(2023, 10, 20))  # Sa\u00edda: 4 (pois 20 de outubro de 2023 \u00e9 uma sexta-feira)\n</code></pre> <ul> <li>monthrange(): Retorna o dia da semana do primeiro dia e o n\u00famero de dias do m\u00eas, para o ano e m\u00eas especificados.</li> </ul> <pre><code>print(calendar.monthrange(2023, 10))  # Sa\u00edda: (6, 31) (pois outubro de 2023 come\u00e7a em um domingo e tem 31 dias)\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#dicas-e-truques","title":"Dicas e Truques","text":"<ol> <li>O m\u00f3dulo <code>datetime</code> \u00e9 mais adequado para manipula\u00e7\u00e3o de datas e horas, enquanto o m\u00f3dulo <code>calendar</code> \u00e9 mais voltado para opera\u00e7\u00f5es relacionadas a calend\u00e1rios.</li> <li>Ao lidar com fusos hor\u00e1rios, considere usar o m\u00f3dulo <code>pytz</code>.</li> <li>Lembre-se de que a indexa\u00e7\u00e3o dos dias da semana no m\u00f3dulo <code>calendar</code> come\u00e7a em 0 para segunda-feira e vai at\u00e9 6 para domingo.</li> </ol> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#desafio","title":"Desafio","text":"<p>Esse foi uma breve descri\u00e7\u00e3o de utiliza\u00e7\u00e3o dos m\u00f3dulos <code>datetime</code> e <code>calendar</code>. Ambos os m\u00f3dulos t\u00eam muitas outras funcionalidades que podem ser exploradas na documenta\u00e7\u00e3o oficial do Python. O seu <code>desafio</code> \u00e9:</p> <p>Gest\u00e3o de Datas</p> <p>Crie um programa Python que lida com opera\u00e7\u00f5es de data e calend\u00e1rio. Este programa ser\u00e1 interativo e solicitar\u00e1 ao usu\u00e1rio que insira dados para processamento.</p> <p>O seu programa Python dever\u00e1:</p> <pre><code>- Solicitar ao usu\u00e1rio que insira uma data no formato DD/MM/YYYY.\n</code></pre> <p>Uma vez fornecida a <code>data</code>, o programa dever\u00e1:</p> <pre><code>- Mostrar o dia da semana correspondente \u00e0 data inserida.\n- Calcular e exibir o n\u00famero de dias que faltam at\u00e9 o final do ano a partir da data fornecida.\n- Converter a data para o fuso hor\u00e1rio GMT+3 e mostrar o resultado.\n</code></pre> <p>Em seguida, o programa dever\u00e1 usar o m\u00f3dulo <code>calendar</code> para:</p> <pre><code>- Exibir o calend\u00e1rio do m\u00eas da data fornecida.\n- Determinar e informar se o ano da data fornecida \u00e9 bissexto.\n- Listar todas as segundas-feiras do m\u00eas da data fornecida.\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#interacao-com-sistemas-de-arquivos","title":"Intera\u00e7\u00e3o com Sistemas de Arquivos","text":"<p>Python tamb\u00e9m oferece m\u00f3dulos, como <code>os</code>, para interagir com sistemas de arquivos. Ele permite navegar, criar, modificar e deletar arquivos e diret\u00f3rios, entre outras opera\u00e7\u00f5es.</p> <p>Vamos conhecer apenas ver alguns m\u00e9todos, sugiro se aprofundar lendo a documenta\u00e7\u00e3o https://docs.python.org/pt-br/3/library/os.html.</p>"},{"location":"aulas/ctp/python/modules2.html#navegando-pelo-sistema-de-arquivos","title":"Navegando pelo Sistema de Arquivos","text":"<ul> <li>Obter o diret\u00f3rio atual:</li> </ul> <pre><code>import os\nprint(os.getcwd())\n</code></pre> <ul> <li>Mudar de diret\u00f3rio:</li> </ul> <pre><code>os.chdir('/path/to/directory')\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#manipulando-diretorios","title":"Manipulando Diret\u00f3rios","text":"<ul> <li>Criar um diret\u00f3rio:</li> </ul> <pre><code>os.mkdir('nome_do_diretorio')\n</code></pre> <ul> <li>Criar m\u00faltiplos diret\u00f3rios:</li> </ul> <pre><code>os.makedirs('dir1/dir2/dir3')\n</code></pre> <ul> <li>Renomear um diret\u00f3rio:</li> </ul> <pre><code>os.rename('nome_atual', 'novo_nome')\n</code></pre> <ul> <li>Remover um diret\u00f3rio:</li> </ul> <pre><code>os.rmdir('nome_do_diretorio')\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#manipulando-arquivos","title":"Manipulando Arquivos","text":"<ul> <li>Listar arquivos e diret\u00f3rios:</li> </ul> <pre><code>print(os.listdir('.'))\n</code></pre> <ul> <li>Verificar a exist\u00eancia de um arquivo ou diret\u00f3rio:</li> </ul> <pre><code>print(os.path.exists('nome_do_arquivo.txt'))\n</code></pre> <ul> <li>Obter informa\u00e7\u00f5es sobre o arquivo:</li> </ul> <pre><code>info = os.stat('nome_do_arquivo.txt')\nprint(info)\n</code></pre> <ul> <li>Remover um arquivo:</li> </ul> <pre><code>os.remove('nome_do_arquivo.txt')\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/modules2.html#exemplos-praticos","title":"Exemplos Pr\u00e1ticos","text":"<ol> <li>Listar todos os arquivos de texto em um diret\u00f3rio:</li> </ol> <pre><code>txt_files = [f for f in os.listdir('.') if f.endswith('.txt')]\nprint(txt_files)\n</code></pre> <ol> <li>automa\u00e7\u00e3o de tarefas</li> </ol> <p><code>Cen\u00e1rio</code>: Imagine que voc\u00ea tenha uma pasta chamada \"documentos\" que cont\u00e9m v\u00e1rios arquivos de texto. Sua tarefa \u00e9 criar uma automa\u00e7\u00e3o que fa\u00e7a o seguinte:</p> <ol> <li>Verifique se a pasta \"documentos\" existe. Se n\u00e3o existir, crie-a.</li> <li>Navegue at\u00e9 a pasta \"documentos\".</li> <li>Crie tr\u00eas arquivos de texto com conte\u00fados diferentes.</li> <li>Liste todos os arquivos na pasta.</li> <li>Renomeie um dos arquivos.</li> <li>Verifique o tamanho de cada arquivo.</li> <li>Mova um dos arquivos para uma subpasta chamada \"arquivados\".</li> <li>Liste novamente todos os arquivos na pasta \"documentos\".</li> </ol> <pre><code>import os\n\n# Passo 1: Verifique se a pasta \"documentos\" existe. Se n\u00e3o, crie-a.\nif not os.path.exists(\"documentos\"):\n    os.mkdir(\"documentos\")\n\n# Passo 2: Navegue at\u00e9 a pasta \"documentos\".\nos.chdir(\"documentos\")\n\n# Passo 3: Crie tr\u00eas arquivos de texto com conte\u00fados diferentes.\nwith open(\"documento1.txt\", \"w\") as file:\n    file.write(\"Conte\u00fado do Documento 1.\")\nwith open(\"documento2.txt\", \"w\") as file:\n    file.write(\"Conte\u00fado do Documento 2.\")\nwith open(\"documento3.txt\", \"w\") as file:\n    file.write(\"Conte\u00fado do Documento 3.\")\n\n# Passo 4: Liste todos os arquivos na pasta.\nlista_arquivos = os.listdir('.')\nprint(lista_arquivos)\n\n# Passo 5: Renomeie um dos arquivos.\nos.rename(\"documento2.txt\", \"documento_renomeado.txt\")\n\n# Passo 6: Verifique o tamanho de cada arquivo.\ntamanho_arquivos = {file: os.stat(file).st_size for file in os.listdir('.') if os.path.isfile(file)}\nprint(tamanho_arquivos)\n\n# Passo 7: Mova um dos arquivos para uma subpasta chamada \"arquivados\".\nif not os.path.exists(\"arquivados\"):\n    os.mkdir(\"arquivados\")\nos.rename(\"documento3.txt\", \"arquivados/documento3.txt\")\n\n# Passo 8: Liste todos os arquivos na pasta \"documentos\" novamente.\nlista_arquivos = os.listdir('.')\nprint(lista_arquivos)\n</code></pre>"},{"location":"aulas/ctp/python/modules2.html#desafio_1","title":"Desafio","text":"<p>Pratique o uso de modulos alterando o exemplo <code>automa\u00e7\u00e3o de tarefas</code> para que ele organize os arquivos do seu computador. Esse script deve ser capaz de organizar os arquivos por extens\u00e3o em diret\u00f3rios diferentes. Por exemplo: imagens .jpg ou .png para a parta <code>img</code> arquivos .pdf para a pasta <code>pdf</code> e assim por diante. ATEN\u00c7\u00c3O: Muiti cuidado para n\u00e3o excluir seus arquivos pessoais.</p>"},{"location":"aulas/ctp/python/oop-classes-objects.html","title":"Introdu\u00e7\u00e3o: Orienta\u00e7\u00e3o a Objetos em Python","text":"<p>Python \u00e9 uma linguagem de programa\u00e7\u00e3o que suporta v\u00e1rias abordagens de programa\u00e7\u00e3o, incluindo a <code>programa\u00e7\u00e3o orientada a objetos (OOP)</code>. A OOP \u00e9 um paradigma de programa\u00e7\u00e3o baseado no conceito de <code>objetos</code>, que podem conter dados na forma de campos, frequentemente conhecidos como <code>atributos</code>; e c\u00f3digos, na forma de procedimentos, frequentemente conhecidos como <code>m\u00e9todos</code>.</p>"},{"location":"aulas/ctp/python/oop-classes-objects.html#conceitos-basicos-de-oop","title":"Conceitos B\u00e1sicos de OOP","text":""},{"location":"aulas/ctp/python/oop-classes-objects.html#classes-e-instancias","title":"Classes e Inst\u00e2ncias","text":"<ul> <li>Classes: Um modelo para criar objetos que definem um conjunto de atributos e m\u00e9todos correspondentes a um tipo de objeto.</li> <li>Inst\u00e2ncias: Um objeto individual constru\u00eddo a partir de uma classe.</li> </ul>"},{"location":"aulas/ctp/python/oop-classes-objects.html#atributos-e-metodos","title":"Atributos e M\u00e9todos","text":"<ul> <li>Atributos: Vari\u00e1veis pertencentes a uma classe ou inst\u00e2ncia.</li> <li>M\u00e9todos: Fun\u00e7\u00f5es pertencentes a uma classe ou inst\u00e2ncia.</li> </ul>"},{"location":"aulas/ctp/python/oop-classes-objects.html#heranca","title":"Heran\u00e7a","text":"<ul> <li>Heran\u00e7a: A capacidade de uma classe herdar atributos e m\u00e9todos de outra classe.</li> </ul>"},{"location":"aulas/ctp/python/oop-classes-objects.html#encapsulamento","title":"Encapsulamento","text":"<ul> <li>Encapsulamento: A pr\u00e1tica de ocultar detalhes internos ou dados de uma classe, expondo apenas interfaces seguras.</li> </ul>"},{"location":"aulas/ctp/python/oop-classes-objects.html#polimorfismo","title":"Polimorfismo","text":"<ul> <li>Polimorfismo: A capacidade de apresentar a mesma interface para diferentes tipos fundamentais.</li> </ul> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/oop-classes-objects.html#definindo-uma-classe","title":"Definindo uma Classe","text":"<p>Uma classe \u00e9 definida usando a palavra-chave <code>class</code>, seguida pelo nome da classe e um bloco de c\u00f3digo com m\u00e9todos e atributos.</p>"},{"location":"aulas/ctp/python/oop-classes-objects.html#estrutura-de-uma-classe","title":"Estrutura de uma Classe","text":"<p>Uma classe \u00e9 composta por atributos (vari\u00e1veis) e m\u00e9todos (fun\u00e7\u00f5es). Aqui est\u00e1 a estrutura b\u00e1sica de uma classe em Python:</p> <pre><code>class NomeDaClasse:\n    # Atributos de classe\n    atributo_de_classe = valor\n\n    def metodo1(self):\n        # C\u00f3digo do m\u00e9todo1\n        pass\n</code></pre> <p>Tip</p> <p>\u00c9 uma boa pratica iniciar o nome de uma classe com a letra maiuscula e os metodos com letra minuscula</p>"},{"location":"aulas/ctp/python/oop-classes-objects.html#atributos-e-metodos-de-instancia","title":"Atributos e M\u00e9todos de Inst\u00e2ncia","text":"<p>Atributos de inst\u00e2ncia s\u00e3o vari\u00e1veis associadas a uma inst\u00e2ncia da classe. M\u00e9todos de inst\u00e2ncia s\u00e3o fun\u00e7\u00f5es associadas a uma inst\u00e2ncia da classe e podem acessar atributos de inst\u00e2ncia atrav\u00e9s do <code>self</code>. </p> <pre><code>class NomeDaClasse:\n    # Atributos de classe\n    atributo_de_classe = valor\n\n    def metodo1(self):\n        # C\u00f3digo do m\u00e9todo1\n        pass\n\n    def metodo2(self):\n        # C\u00f3digo do m\u00e9todo2\n        pass\n</code></pre>"},{"location":"aulas/ctp/python/oop-classes-objects.html#o-metodo-__init__","title":"O M\u00e9todo <code>__init__</code>","text":"<p>O m\u00e9todo <code>__init__</code> \u00e9 um construtor em Python. \u00c9 chamado automaticamente quando um novo objeto da classe \u00e9 criado. Ele inicializa os atributos da nova inst\u00e2ncia da classe.</p> <pre><code>class NomeDaClasse:\n    # Atributos de classe\n    atributo_de_classe = valor\n\n    def __init__(self, parametro1, parametro2):\n        # Atributos de inst\u00e2ncia\n        self.atributo1 = parametro1\n        self.atributo2 = parametro2\n\n    def metodo1(self):\n        # C\u00f3digo do m\u00e9todo1\n        pass\n\n    def metodo2self):\n        # C\u00f3digo do m\u00e9todo2\n        pass\n</code></pre> <p>Agora vamos ver em um outro exemplo:</p> <pre><code>class Pessoa:\n    def __init__(self, nome, idade):\n        self.nome = nome\n        self.idade = idade\n\n    def cumprimentar(self):\n        return f\"Ol\u00e1, meu nome \u00e9 {self.nome} e eu tenho {self.idade} anos.\"\n</code></pre>"},{"location":"aulas/ctp/python/oop-classes-objects.html#criando-uma-instancia-de-uma-classe","title":"Criando uma Inst\u00e2ncia de uma Classe","text":"<p>Para criar uma inst\u00e2ncia de uma classe, voc\u00ea chama a classe usando o nome da classe seguido por par\u00eanteses, passando os argumentos que o m\u00e9todo <code>__init__</code> requer.</p> <pre><code>pessoa1 = Pessoa(\"Junior\", 18)\nprint(pessoa1.cumprimentar())\n</code></pre>"},{"location":"aulas/ctp/python/oop-classes-objects.html#exercicios","title":"Exercicios","text":"<ol> <li> <p>Restaurante: Crie uma classe chamada <code>Restaurante</code>. O m\u00e9todo <code>__init__()</code> de Restaurante deve armazenar dois atributos: <code>restaurante_nome</code> e <code>tipo_cozinha</code> . </p> <ul> <li> <p>Crie um m\u00e9todo chamado <code>descreve_restaurante()</code> que mostre essas duas informa\u00e7\u00f5es, e um m\u00e9todo de nome <code>restaurante_aberto()</code> que exiba uma mensagem informando que o restaurante est\u00e1 aberto.</p> </li> <li> <p>Crie uma inst\u00e2ncia chamada <code>restaurante</code> a partir de sua classe. Mostre os dois atributos individualmente e, em seguida, chame os dois m\u00e9todos.</p> </li> </ul> </li> <li> <p>Tr\u00eas restaurantes: Comece com a classe do Exerc\u00edcio 1. Crie tr\u00eas inst\u00e2ncias diferentes da classe e chame descreve_restaurante() para cada inst\u00e2ncia.</p> </li> <li> <p>Usu\u00e1rios: Crie uma classe chamada <code>Usuario</code>. Crie dois atributos de nomes <code>primeiro_nome</code> e <code>ultimo_nome</code> e, ent\u00e3o, crie v\u00e1rios outros atributos normalmente armazenados em um perfil de usu\u00e1rio. </p> <ul> <li> <p>Escreva um m\u00e9todo de nome <code>descreve_usuario()</code> que apresente um resumo das informa\u00e7\u00f5es do usu\u00e1rio. </p> </li> <li> <p>Escreva outro m\u00e9todo chamado <code>saudacao_usuario()</code> que mostre uma sauda\u00e7\u00e3o personalizada ao usu\u00e1rio.</p> </li> <li> <p>Crie v\u00e1rias inst\u00e2ncias que representem diferentes usu\u00e1rios e chame os dois m\u00e9todos para cada usu\u00e1rio.</p> </li> </ul> </li> </ol>"},{"location":"aulas/ctp/python/oop-inheritance.html","title":"Heran\u00e7a, Encapsulamento e M\u00e9todos Privados","text":""},{"location":"aulas/ctp/python/oop-inheritance.html#heranca-em-python","title":"Heran\u00e7a em Python","text":"<p>A heran\u00e7a permite que uma classe herde atributos e m\u00e9todos de outra classe. Uma classe base \u00e9 especificada na defini\u00e7\u00e3o de uma classe derivada.</p> <pre><code>class Estudante(Pessoa):\n    def __init__(self, nome, idade, matricula):\n        super().__init__(nome, idade)\n        self.matricula = matricula\n\n    def identificar(self):\n        return f\"Estudante: {self.nome}, Matr\u00edcula: {self.matricula}\"\n</code></pre> <p>Neste caso, a classe <code>Estudandte</code> herda da classe <code>Pessoa</code>. O metodo <code>super()</code> inicializa o construtur da classe pai para que a classe filha consiga utilizar os atributos</p> <pre><code>estudante1 = Estudante(\"Renato\", 18, 44443)\nprint(estudante1.identificar())\n\nprint(estudante1.cumprimentar()) #o metodo cumprimentar pertence a classe Pessoa \n</code></pre>"},{"location":"aulas/ctp/python/oop-inheritance.html#exercicios","title":"Exerc\u00edcios","text":"<ol> <li> <p>Sorveteria: Uma sorveteria \u00e9 um tipo espec\u00edfico de restaurante. </p> <ul> <li>screva uma classe chamada <code>IceCreamStand</code> que herde da classe Restaurante escrita no <code>Exerc\u00edcio 1</code>.</li> <li>Adicione um atributo chamado <code>sabores</code> que armazene uma lista de sabores de sorvete. </li> <li>Escreva um m\u00e9todo para mostrar esses sabores. Crie uma inst\u00e2ncia de IceCreamStand e chame esse m\u00e9todo.</li> </ul> </li> <li> <p>Admin: Um administrador \u00e9 um tipo especial de usu\u00e1rio. </p> <ul> <li>Escreva uma classe chamada <code>Admin</code> que herde da classe Usuario escrita no Exerc\u00edcio 3.</li> <li>Adicione um atributo <code>privilegios</code> que armazene uma lista de strings como \"pode adicionar postagem\", \"pode excluir postagem\" \"pode banir usu\u00e1rio\", e assim por diante. </li> <li>Escreva um m\u00e9todo chamado <code>exibir_privilegios()</code> que liste o conjunto de privil\u00e9gios de um administrador. </li> <li>Crie uma inst\u00e2ncia de Admin e chame seu m\u00e9todo.</li> </ul> </li> </ol>"},{"location":"aulas/ctp/python/oop-inheritance.html#encapsulamento-e-metodos-privados","title":"Encapsulamento e M\u00e9todos Privados","text":"<p>Vamos tentar entender...</p> <p>Imagine que voc\u00ea tem uma caixa com v\u00e1rios brinquedos. Voc\u00ea decide quais brinquedos podem ser compartilhados com seus amigos e quais s\u00e3o apenas para voc\u00ea. Encapsulamento em programa\u00e7\u00e3o \u00e9 parecido com isso. \u00c9 como criar uma \"caixa\" (que \u00e9 a classe) onde voc\u00ea coloca \"brinquedos\" (que s\u00e3o os dados e m\u00e9todos) e decide quais s\u00e3o para uso interno e quais podem ser compartilhados com outros.</p> <p>Agora, pense nos m\u00e9todos privados como seus brinquedos especiais que voc\u00ea n\u00e3o quer compartilhar com ningu\u00e9m. Na sua classe, voc\u00ea tem certas fun\u00e7\u00f5es (m\u00e9todos) que s\u00f3 devem ser usadas dentro da pr\u00f3pria classe. Elas s\u00e3o como segredos ou ferramentas especiais que ajudam a classe a funcionar, mas n\u00e3o s\u00e3o para serem usadas diretamente por outras partes do seu programa.</p> <p>Agora de uma forma um pouco mais t\u00e9cnica: O encapsulamento se refere \u00e0 restri\u00e7\u00e3o do acesso direto aos componentes de um objeto, promovendo a seguran\u00e7a do c\u00f3digo. Em Python, o encapsulamento \u00e9 realizado principalmente atrav\u00e9s do uso de m\u00e9todos e vari\u00e1veis privadas ou protegidas.</p>"},{"location":"aulas/ctp/python/oop-inheritance.html#convencoes-de-nomes-em-python","title":"Conven\u00e7\u00f5es de Nomes em Python","text":"<ul> <li>Atributos Protegidos: Em Python, um atributo protegido \u00e9 representado por um \u00fanico sublinhado <code>_</code> no in\u00edcio do seu nome (ex: _atributo). Isto \u00e9 uma conven\u00e7\u00e3o que indica que o atributo deve ser acessado apenas dentro da classe e suas subclasses.</li> <li>Atributos Privados: Para criar um atributo verdadeiramente privado em Python, voc\u00ea deve usar dois sublinhados <code>__</code> no in\u00edcio do seu nome (ex: __atributoPrivado). Isso ativa um recurso chamado <code>name mangling</code>, onde o nome do atributo \u00e9 alterado para evitar o acesso direto de fora da classe.</li> </ul>"},{"location":"aulas/ctp/python/oop-inheritance.html#exemplo-com-metodos-privados","title":"Exemplo com M\u00e9todos Privados","text":"<p>Vamos criar a classe ContaBancaria.</p> <p>M\u00e9todo P\u00fablico - Depositar: Voc\u00ea pode dizer a todos como depositar dinheiro. Isso \u00e9 como um m\u00e9todo p\u00fablico. Qualquer um pode usar. M\u00e9todo Privado - Calcular Juros: Mas, o c\u00e1lculo de quanto juros voc\u00ea ganha \u00e9 um segredo do banco. Isso \u00e9 como um m\u00e9todo privado. Ele faz um trabalho interno importante, mas os clientes da conta n\u00e3o precisam saber como ele funciona. Eles s\u00f3 veem o resultado (o saldo atualizado com os juros). M\u00e9todo P\u00fablico - Atualizar saldo com juros: Mostra o saldo atualizado com os juros.</p> <pre><code>class ContaBancaria:\n    def __init__(self, saldo_inicial):\n        self._saldo = saldo_inicial  # Atributo protegido\n\n    def depositar(self, valor):\n        if valor &gt; 0:\n            self._saldo += valor\n            return self._saldo\n        else:\n            return \"Valor inv\u00e1lido para dep\u00f3sito.\"\n\n    def _calcular_juros(self):\n        # M\u00e9todo privado\n        taxa_juros = 0.05\n        juros = self._saldo * taxa_juros\n        return juros\n\n    def atualizar_saldo_com_juros(self):\n        juros = self._calcular_juros()\n        self._saldo += juros\n        return self._saldo\n</code></pre> <p>Mais alguns detalhes.</p>"},{"location":"aulas/ctp/python/oop-inheritance.html#metodo-privado-_calcular_juros","title":"Metodo privado _calcular_juros.","text":"<p>Este m\u00e9todo calcula os juros com base no saldo atual da conta. A taxa de juros est\u00e1 fixada em 5% (0.05). </p> <p>Mas Por Que \u00e9 Privado?: Este m\u00e9todo \u00e9 considerado uma opera\u00e7\u00e3o interna da classe ContaBancaria. O c\u00e1lculo de juros \u00e9 um detalhe de implementa\u00e7\u00e3o que n\u00e3o precisa ser exposto para quem utiliza a classe. Assim, ele \u00e9 definido como privado (usando um \u00fanico sublinhado _) para indicar que deve ser usado apenas internamente pela classe.</p> <pre><code>def _calcular_juros(self):\n    taxa_juros = 0.05  # Taxa de juros fixa de 5%\n    juros = self._saldo * taxa_juros  # C\u00e1lculo dos juros com base no saldo\n    return juros\n</code></pre>"},{"location":"aulas/ctp/python/oop-inheritance.html#metodo-atualizar_saldo_com_juros","title":"Metodo atualizar_saldo_com_juros","text":"<p>Este m\u00e9todo p\u00fablico usa o m\u00e9todo privado _calcular_juros para determinar o valor dos juros e atualizar o saldo.</p> <p>Encapsulamento: Ao chamar _calcular_juros, a classe ContaBancaria <code>encapsula</code> a l\u00f3gica de como os juros s\u00e3o calculados. O usu\u00e1rio da classe n\u00e3o precisa saber como os juros s\u00e3o calculados, apenas que ele pode atualizar o saldo com juros.</p> <pre><code>def atualizar_saldo_com_juros(self):\n    juros = self._calcular_juros()  # Chama o m\u00e9todo privado para calcular os juros\n    self._saldo += juros  # Atualiza o saldo com os juros calculados\n    return self._saldo\n</code></pre>"},{"location":"aulas/ctp/python/oop-inheritance.html#beneficios-do-encapsulamento-com-metodos-privados","title":"Benef\u00edcios do Encapsulamento com M\u00e9todos Privados","text":"<ul> <li>Seguran\u00e7a: Evita que partes cr\u00edticas da l\u00f3gica interna da classe sejam alteradas ou mal utilizadas externamente.</li> <li>Manuten\u00e7\u00e3o: Facilita a manuten\u00e7\u00e3o e as futuras altera\u00e7\u00f5es no c\u00f3digo, j\u00e1 que as mudan\u00e7as internas n\u00e3o afetam o c\u00f3digo externo.</li> <li>Clareza: Torna a interface p\u00fablica da classe mais clara e mais f\u00e1cil de entender, escondendo detalhes complexos ou irrelevantes para o usu\u00e1rio da classe.</li> </ul>"},{"location":"aulas/ctp/python/oop-inheritance.html#exercicios_1","title":"Exerc\u00edcios","text":"<ol> <li> <p>Implementa\u00e7\u00e3o de Saque: Adicione um m\u00e9todo <code>sacar(valor)</code> na classe <code>ContaBancaria</code> que permita saques, mas n\u00e3o permita que o saldo fique negativo.</p> </li> <li> <p>M\u00e9todo Privado para Valida\u00e7\u00e3o: Crie um m\u00e9todo privado <code>_validar_valor(valor)</code> que verifica se um valor \u00e9 positivo e maior que zero. Utilize este m\u00e9todo nos m\u00e9todos depositar e sacar.</p> </li> <li> <p>Extens\u00e3o da Classe: Crie uma subclasse de ContaBancaria, como <code>ContaPoupanca</code>, que tenha uma taxa de juros diferente. Demonstre como os m\u00e9todos protegidos e privados da classe pai s\u00e3o acessados na subclasse.</p> </li> </ol>"},{"location":"aulas/ctp/python/oop-polymorphism.html","title":"Polimorfismo","text":""},{"location":"aulas/ctp/python/oop-polymorphism.html#polimorfismo","title":"Polimorfismo","text":"<p>Se refere \u00e0 capacidade de uma fun\u00e7\u00e3o ou m\u00e9todo de processar objetos de diferentes maneiras, dependendo da classe ou do tipo de objeto que \u00e9 fornecido a ela.</p>"},{"location":"aulas/ctp/python/oop-polymorphism.html#tipos-de-polimorfismo","title":"Tipos de Polimorfismo","text":"<ul> <li>Polimorfismo de Sobrecarga: Refere-se \u00e0 capacidade de ter v\u00e1rias fun\u00e7\u00f5es com o mesmo nome, mas com diferentes tipos ou quantidades de par\u00e2metros.</li> <li>Polimorfismo de Substitui\u00e7\u00e3o: Quando uma subclasse pode ser usada no lugar de sua classe pai. Isso geralmente \u00e9 alcan\u00e7ado atrav\u00e9s da heran\u00e7a e da sobrescrita de m\u00e9todos.</li> </ul>"},{"location":"aulas/ctp/python/oop-polymorphism.html#exemplo-com-polimorfismo","title":"Exemplo com Polimorfismo","text":"<p>Criamos uma classe <code>Animal</code> com um m\u00e9todo <code>falar</code>. Duas subclasses, <code>Cachorro</code> e <code>Gato</code>, que sobrescrevem o m\u00e9todo falar.</p> <p>A fun\u00e7\u00e3o <code>som_do_animal</code>, repare que ela n\u00e3o pertence a nenhuma classe e pode aceitar qualquer objeto que seja um Animal e chama seu m\u00e9todo falar. </p> <p>Isso \u00e9 polimorfismo em a\u00e7\u00e3o: a fun\u00e7\u00e3o trata diferentes tipos de objetos (cachorro e gato) de maneira uniforme.</p> <pre><code>class Animal:\n    def falar(self):\n        pass\n\nclass Cachorro(Animal):\n    def falar(self):\n        return \"Au Au\"\n\nclass Gato(Animal):\n    def falar(self):\n        return \"Miau\"\n\n\ndef som_do_animal(animal):\n    print(animal.falar())\n\n# Criando inst\u00e2ncias\ncachorro = Cachorro()\ngato = Gato()\n\n# Demonstrando polimorfismo\nsom_do_animal(cachorro)  # Sa\u00edda: Au Au\nsom_do_animal(gato)      # Sa\u00edda: Miau\n</code></pre>"},{"location":"aulas/ctp/python/oop-polymorphism.html#beneficios-do-polimorfismo","title":"Benef\u00edcios do Polimorfismo","text":"<ul> <li>Flexibilidade: O polimorfismo permite escrever c\u00f3digo mais flex\u00edvel e reutiliz\u00e1vel.</li> <li>Simplicidade: Simplifica o c\u00f3digo ao permitir o uso de uma interface comum para diferentes tipos de objetos.</li> <li>Extensibilidade: Facilita a adi\u00e7\u00e3o de novas classes que se encaixam na mesma interface.</li> </ul>"},{"location":"aulas/ctp/python/oop-polymorphism.html#exercicios","title":"Exerc\u00edcios","text":"<ol> <li>Criar uma classe <code>Animal</code> com atributos <code>nome</code> e <code>especie</code>. Adicionar um m\u00e9todo <code>emitir_som()</code> que imprime um som gen\u00e9rico.</li> <li>Adicionar um m\u00e9todo <code>descrever()</code> \u00e0 classe Animal que imprime uma descri\u00e7\u00e3o do animal (nome e esp\u00e9cie).</li> <li>Criar uma subclasse <code>Cachorro</code> que herda de Animal. Adicionar um atributo adicional <code>raca</code> e um m\u00e9todo <code>latir()</code>.</li> <li>Sobrescrever o m\u00e9todo <code>emitir_som()</code> na subclasse Cachorro para imprimir um latido espec\u00edfico em vez do som gen\u00e9rico.</li> </ol>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html","title":"La\u00e7o <code>for</code> em Python","text":""},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>J\u00e1 sabemos como o la\u00e7o whille funciona, agora vamos conhecer uma nova estrutra de repeti\u00e7\u00e3o. O la\u00e7o <code>for</code> \u00e9 uma das estruturas de controle mais vers\u00e1teis em Python, permitindo iterar sobre sequ\u00eancias (cole\u00e7\u00f5es) e outros objetos iter\u00e1veis. Vamos conhecer em detalhes o funcionamento e as aplica\u00e7\u00f5es do la\u00e7o <code>for</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#conceitos-basicos","title":"Conceitos B\u00e1sicos","text":"<p>Assim como o la\u00e7o while, o for em Python \u00e9 usado para criar um loop que percorre uma sequ\u00eancia de elementos, como uma lista, uma string ou um intervalo de n\u00fameros. Ele permite executar um bloco de c\u00f3digo repetidamente para cada elemento da sequ\u00eancia.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#sintaxe","title":"Sintaxe","text":"<p>A sintaxe b\u00e1sica do la\u00e7o <code>for</code> \u00e9:</p> <p><pre><code>for variavel in sequencia:\n    # bloco de c\u00f3digo\n    # bloco de c\u00f3digo\n    # bloco de c\u00f3digo\n</code></pre> Na sintaxe do comando for, temos que:</p> <ul> <li>variavel: \u00e9 uma vari\u00e1vel que recebe cada elemento da lista em cada itera\u00e7\u00e3o do loop;</li> <li>sequencia: \u00e9 a sequ\u00eancia de elementos a ser percorrida pelo loop, como uma lista, uma string ou um intervalo.</li> </ul> <p>Question</p> <p>Qual das alternativas apresenta corretamente a sintaxe b\u00e1sica do la\u00e7o <code>for</code> em Python?</p> <ul> <li> for variavel in sequencia:           # bloco de c\u00f3digo</li> <li> for variavel; sequencia:           # bloco de c\u00f3digo</li> <li> for variavel = sequencia:           # bloco de c\u00f3digo</li> <li> for (variavel in sequencia):           # bloco de c\u00f3digo</li> </ul> <p>Answer</p> <p>A sintaxe correta do la\u00e7o <code>for</code> em Python \u00e9 <code>for variavel in sequencia:</code> seguido de um bloco de c\u00f3digo indentado.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#iterando-sobre-sequencias","title":"Iterando sobre Sequ\u00eancias","text":"<p>Durante o loop for, o bloco de c\u00f3digo \u00e9 repetido para cada item da lista. A cada itera\u00e7\u00e3o, o elemento atual \u00e9 atribu\u00eddo \u00e0 vari\u00e1vel com base nesse elemento. O la\u00e7o for pode iterar sobre qualquer objeto iter\u00e1vel em Python. As sequ\u00eancias mais comuns s\u00e3o listas, tuplas e strings.</p> <p>listas</p> <pre><code>n\u00fameros = [1, 2, 3, 4, 5]\nfor n\u00famero in n\u00fameros:\n    print(n\u00famero)\n</code></pre> <p>Strings</p> <p><pre><code>palavra = \"Python\"\nfor letra in palavra:\n    print(letra)\n</code></pre> Nesse exemplo a cada itera\u00e7\u00e3o \u00e9 exibida um caractere da String.</p> <p><pre><code>minha_lista = [\"Pensamento\", \"computacional\", \"com\", \"Python\"] \n\nfor item in minha_lista:\n    print(item)\n</code></pre> Nesse exemplo a cada itera\u00e7\u00e3o do la\u00e7o for um item da lista <code>minha_lista</code> \u00e9 printado.</p> <p>Question</p> <p>Qual das alternativas apresenta corretamente a itera\u00e7\u00e3o sobre uma string em Python?</p> <ul> <li> for letra in \"Python\": print letra</li> <li> for letra in \"Python\": print(letra)</li> <li> for \"Python\" as letra: print(letra)</li> <li> for letra print(\"Python\")</li> </ul> <p>Answer</p> <p>Para iterar sobre uma string em Python, usamos a sintaxe <code>for letra in \"Python\": print(letra)</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#funcao-range","title":"Fun\u00e7\u00e3o range()","text":"<p>A fun\u00e7\u00e3o <code>range()</code> \u00e9 uma ferramenta poderosa quando combinada com o la\u00e7o for, especialmente quando precisamos de uma sequ\u00eancia num\u00e9rica. </p> <p>Ela \u00e9 comumente usada em loops e itera\u00e7\u00f5es, permitindo especificar o in\u00edcio, o fim e o passo da sequ\u00eancia.</p> <pre><code>range(in\u00edcio, fim, passo)\n</code></pre> <p>A fun\u00e7\u00e3o recebe at\u00e9 3 par\u00e2metros de entrada</p> <ul> <li><code>start</code>: \u00e9 o n\u00famero de in\u00edcio da sequ\u00eancia (opcional). O valor padr\u00e3o \u00e9 <code>0</code>.</li> <li><code>stop</code>: \u00e9 o n\u00famero final da sequ\u00eancia (<code>obrigat\u00f3rio</code>). O valor final n\u00e3o \u00e9 inclu\u00eddo na sequ\u00eancia.</li> <li><code>step</code>: \u00e9 o valor de incremento entre os n\u00fameros da sequ\u00eancia (opcional). O valor padr\u00e3o \u00e9 1.</li> </ul> <p><pre><code>for i in range(5):\n    print(i)\n</code></pre> Neste exemplo o la\u00e7o for vai iterar sobre a fun\u00e7\u00e3o range que gera valores inteiros de 0 at\u00e9 N-1.</p> <pre><code>for x in range(10): \n    print(x) # x: 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 \n\n\nfor x in range(3,10): \n    print(x) # x: 3, 4, 5, 6, 7, 8, 9 \n\n\nfor x in range(3,10,2): \n    print(x) # x: 3, 5, 7, 9 \n</code></pre> <p>Question</p> <p>Qual das alternativas apresenta corretamente a fun\u00e7\u00e3o <code>range()</code> para gerar uma sequ\u00eancia de 0 a 4?</p> <ul> <li> range(0, 5, 2)</li> <li> range(1, 5)</li> <li> range(5)</li> <li> range(0, 4)</li> </ul> <p>Answer</p> <p>A fun\u00e7\u00e3o <code>range(5)</code> gera uma sequ\u00eancia de n\u00fameros de 0 a 4.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#diferencas-entre-while-e-for","title":"Diferen\u00e7as entre <code>while</code> e <code>for</code>","text":"<p>A principal distin\u00e7\u00e3o entre os loops while e for em Python est\u00e1 em como eles determinam as itera\u00e7\u00f5es:</p> <p>O comando while permite repetir uma sequ\u00eancia de comandos enquanto uma condi\u00e7\u00e3o espec\u00edfica for verdadeira. Por exemplo:</p> <p><pre><code>contador = 0\nwhile contador &lt; 5:\n    print(contador)\n    contador += 1\n</code></pre> Neste exemplo, o bloco dentro do while ser\u00e1 executado enquanto contador for menor que 5.</p> <p>O comando for, por outro lado, \u00e9 usado para iterar sobre elementos de um objeto iter\u00e1vel (como listas, tuplas, strings, dicion\u00e1rios, sets e outros). Por exemplo:</p> <pre><code>for i in range(5):\n    print(i)\n</code></pre> <p>Aqui, o loop for itera sobre cada n\u00famero produzido pela fun\u00e7\u00e3o range(5).</p> <p>Tip</p> <p>\u00c9 poss\u00edvel reescrever um loop for usando um loop while. Al\u00e9m disso, com criatividade e uso de fun\u00e7\u00f5es auxiliares, tamb\u00e9m \u00e9 poss\u00edvel reescrever um loop while usando um loop for. No entanto, a escolha entre eles deve ser baseada na clareza e legibilidade do c\u00f3digo.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#lacos-aninhados","title":"La\u00e7os Aninhados","text":"<p>\u00c9 poss\u00edvel ter um la\u00e7o for dentro de outro, permitindo combina\u00e7\u00f5es mais complexas e sofisticadas em seu c\u00f3digo. Ao aninhar loops, voc\u00ea pode executar um conjunto de instru\u00e7\u00f5es repetidamente dentro de outro conjunto de instru\u00e7\u00f5es repetidas.</p> <pre><code>for i in range(3):\n    for j in [\"a\", \"b\"]:\n        print(i, j)\n</code></pre> <p>O loop externo (for i in range(3)) itera sobre os valores 0, 1 e 2. Para cada valor de i, o loop interno (for j in [\"a\", \"b\"]) itera sobre as letras \"a\" e \"b\". Isso resulta em cada combina\u00e7\u00e3o de i e j sendo impressa.</p> <p>Question</p> <p>Qual das alternativas apresenta corretamente um la\u00e7o <code>for</code> aninhado?</p> <ul> <li> for i in range(3): print(i, j)</li> <li> for i in range(3) for j in [\"a\", \"b\"]: print(i)</li> <li> for i in range(3):           for j in [\"a\", \"b\"]:               print(i, j)</li> <li> for i, j in range(3), [\"a\", \"b\"]: print(i, j)</li> </ul> <p>Answer</p> <p>La\u00e7os <code>for</code> aninhados s\u00e3o representados por um la\u00e7o <code>for</code> dentro de outro, como no exemplo <code>for i in range(3): for j in [\"a\", \"b\"]: print(i, j)</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#exemplos","title":"Exemplos","text":"<p>Multiplica\u00e7\u00e3o de Matrizes. Vamos supor que voc\u00ea queira multiplicar duas matrizes 2x2.</p> <pre><code>def multiplica_matriz(A, B):\n    # Inicializando a matriz resultante com zeros\n    resultado = [[0, 0], [0, 0]]\n\n    for i in range(len(A)):\n        for j in range(len(B[0])):\n            for k in range(len(B)):\n                resultado[i][j] += A[i][k] * B[k][j]\n\n    return resultado\n\n# Definindo as matrizes 2x2\nA = [[1, 2], [3, 4]]\nB = [[2, 0], [1, 3]]\n\nC = multiplica_matriz(A, B)\nprint(C)\n</code></pre> <p>Question</p> <p>Qual das alternativas apresenta corretamente o resultado do exemplo acima?</p> <ul> <li> [[1, 2], [3, 4]]</li> <li> [[2, 0], [1, 3]]</li> <li> [[4, 6], [10, 12]]</li> <li> [[6, 4], [10, 3]]</li> </ul> <p>Answer</p> <p>[[4, 6], [10, 12]]</p> <p>Busca de Pares: Suponha que voc\u00ea tenha uma lista de n\u00fameros e queira encontrar todos os pares de n\u00fameros cuja soma seja 10:</p> <pre><code>numeros = [1, 2, 3, 7, 4, 6, 5, 5, 9]\npares = []\n\nfor i in range(len(numeros)):\n    for j in range(i+1, len(numeros)):\n        if numeros[i] + numeros[j] == 10:\n            pares.append((numeros[i], numeros[j]))\n\nprint(pares)\n</code></pre> <p>Question</p> <p>Qual das alternativas apresenta corretamente o resultado do exemplo acima?</p> <ul> <li> [[1, 9], [3, 7], [4, 6], [5, 5]]</li> <li> [1, 9, 3, 7, 4, 6, 5, 5]</li> <li> [(1, 9), (3, 7), (4, 6), (5, 5)]</li> <li> [[1, 9, 3, 7, 4, 6, 5, 5]]</li> </ul> <p>Answer</p> <p>[(1, 9), (3, 7), (4, 6), (5, 5)] # lista de tuplas</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#compreensao-de-listas","title":"Compreens\u00e3o de Listas","text":"<p>A compreens\u00e3o de listas, ou list comprehension, \u00e9 uma caracter\u00edstica poderosa e expressiva da linguagem Python que permite a cria\u00e7\u00e3o de listas de maneira concisa. Aqui est\u00e1 uma an\u00e1lise detalhada:</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#estrutura-basica","title":"Estrutura B\u00e1sica:","text":"<p>A estrutura b\u00e1sica de uma compreens\u00e3o de lista \u00e9:</p> <p><pre><code>[express\u00e3o_de_sa\u00edda for vari\u00e1vel in iteravel]\n</code></pre> onde:</p> <ul> <li><code>express\u00e3o_de_sa\u00edda</code>: A express\u00e3o que determina os valores que ser\u00e3o inseridos na lista resultante.</li> <li><code>vari\u00e1vel</code>: A vari\u00e1vel tempor\u00e1ria que assume cada valor no iter\u00e1vel.</li> <li><code>iter\u00e1vel</code>: Qualquer objeto pelo qual se pode iterar (listas, tuplas, strings, etc.).</li> </ul> <p>Exemplo</p> <p><pre><code>quadrados = [x**2 for x in range(5)]\nprint(quadrados)\n</code></pre> A compreens\u00e3o da lista est\u00e1 criando uma lista dos quadrados dos n\u00fameros de 0 a 4. A sa\u00edda seria: [0, 1, 4, 9, 16]</p> <p>Question</p> <p>Qual das alternativas apresenta corretamente uma compreens\u00e3o de lista para gerar os quadrados dos n\u00fameros de 0 a 4?</p> <ul> <li> quadrados = [x for x in range(5)]</li> <li> quadrados = [x, x**2 for x in range(5)]</li> <li> quadrados = [x**2 for x in range(5)]</li> <li> quadrados = for x in range(5): x**2</li> </ul> <p>Answer</p> <p>A compreens\u00e3o de lista correta \u00e9 <code>quadrados = [x**2 for x in range(5)]</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-for-loop.html#compreensao-de-lista-com-condicao","title":"Compreens\u00e3o de Lista com Condi\u00e7\u00e3o:","text":"<p>Uma compreens\u00e3o de lista tamb\u00e9m pode incluir uma condi\u00e7\u00e3o para filtrar quais elementos do iter\u00e1vel s\u00e3o processados:</p> <pre><code>[express\u00e3o_de_sa\u00edda for vari\u00e1vel in iteravel  if condi\u00e7\u00e3o]\n</code></pre> <p>Por exemplo, se quisermos apenas os quadrados dos n\u00fameros pares de 0 a 4:</p> <pre><code>quadrados_pares = [x**2 for x in range(5) if x % 2 == 0]\nprint(quadrados_pares)\n</code></pre> <p>a saida seria: [0, 4, 16]</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html","title":"while loop","text":""},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#estruturas-de-repeticao-com-laco-while","title":"Estruturas de Repeti\u00e7\u00e3o com La\u00e7o <code>while</code>","text":"<p>Em Python, as estruturas de repeti\u00e7\u00e3o s\u00e3o cruciais para executar um bloco de c\u00f3digo v\u00e1rias vezes at\u00e9 que uma condi\u00e7\u00e3o seja atendida (ou deixe de ser atendida). O la\u00e7o <code>while</code> \u00e9 uma dessas estruturas, permitindo repeti\u00e7\u00f5es baseadas em condi\u00e7\u00f5es.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#casos-de-uso-comuns","title":"Casos de Uso Comuns","text":"<p>O la\u00e7o while \u00e9 frequentemente usado em situa\u00e7\u00f5es em que a quantidade de itera\u00e7\u00f5es n\u00e3o \u00e9 conhecida antecipadamente. Alguns cen\u00e1rios comuns incluem:</p> <ul> <li>Leitura de arquivos at\u00e9 o final: Pode-se usar um la\u00e7o while para ler linhas de um arquivo at\u00e9 que n\u00e3o haja mais linhas a serem lidas.</li> <li>Menus interativos: Em aplicativos com interface de linha de comando, um menu pode ser continuamente apresentado ao usu\u00e1rio at\u00e9 que ele escolha sair.</li> <li>Jogos: Em jogos, um loop while pode ser usado para manter o jogo em execu\u00e7\u00e3o at\u00e9 que uma condi\u00e7\u00e3o de t\u00e9rmino seja atendida, como o jogador perder todas as vidas.</li> </ul>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#entendendo-o-laco-while","title":"Entendendo o La\u00e7o <code>while</code>","text":"<p>O la\u00e7o <code>while</code> repete um bloco de c\u00f3digo enquanto uma condi\u00e7\u00e3o \u00e9 avaliada como verdadeira (<code>True</code>). Assim que a condi\u00e7\u00e3o torna-se falsa (<code>False</code>), o la\u00e7o \u00e9 interrompido e o programa prossegue para as pr\u00f3ximas linhas de c\u00f3digo, ap\u00f3s o la\u00e7o.</p> <p>A estrutura b\u00e1sica do loop <code>while</code> \u00e9:</p> <pre><code>while condi\u00e7\u00e3o:\n    # c\u00f3digo a ser executado enquanto a condi\u00e7\u00e3o for verdadeira\n</code></pre> <p>Tip</p> <p>\u00c9 crucial garantir que a condi\u00e7\u00e3o do loop <code>while</code> se torne falsa em algum momento, caso contr\u00e1rio, o loop continuar\u00e1 infinitamente.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exemplo-basico","title":"Exemplo B\u00e1sico","text":"<pre><code>contador = 0\nwhile contador &lt; 5:\n    print(contador)\n    contador += 1\n</code></pre> <p>Neste exemplo, o c\u00f3digo imprimir\u00e1 os n\u00fameros de 0 a 4. Quando <code>contador</code> atingir o valor 5, a condi\u00e7\u00e3o <code>contador &lt; 5</code> se tornar\u00e1 falsa e o la\u00e7o ser\u00e1 interrompido.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exercicios-de-verificacao","title":"Exerc\u00edcios de Verifica\u00e7\u00e3o","text":"<p>Quest\u00e3o</p> <p>Qual ser\u00e1 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>i = 3\nwhile i &gt; 0:\n    print(i)\n    i -= 1\n</code></pre> <ul> <li> <code>3 2 1</code></li> <li> <code>0 1 2 3</code></li> <li> <code>1 2 3</code></li> <li> <code>3 2 1 0</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>3 2 1</code>. O la\u00e7o come\u00e7a com <code>i</code> sendo 3 e decrementa <code>i</code> em cada itera\u00e7\u00e3o at\u00e9 que <code>i</code> seja 0, momento em que o la\u00e7o \u00e9 interrompido.</p> <p>Quest\u00e3o</p> <p>Considerando o c\u00f3digo:</p> <pre><code>x = 10\nwhile x &gt; 0:\n    x -= 2\n\nprint x\n</code></pre> <p>Ap\u00f3s a execu\u00e7\u00e3o do c\u00f3digo, qual ser\u00e1 o valor de <code>x</code>?</p> <ul> <li> 0</li> <li> 1</li> <li> 2</li> <li> -2</li> </ul> <p>Answer</p> <p>O valor de <code>x</code> ser\u00e1 <code>0</code>. A cada itera\u00e7\u00e3o, <code>x</code> \u00e9 decrementado em 2. Quando <code>x</code> \u00e9 2, ele \u00e9 novamente decrementado em 2 na pr\u00f3xima itera\u00e7\u00e3o, resultando em <code>x</code> sendo <code>0</code>, que interrompe o la\u00e7o.</p> <p>Quest\u00e3o</p> <p>No seguinte c\u00f3digo, quantas vezes o print ser\u00e1 executado?</p> <pre><code>y = 5\nwhile y &lt; 8:\n    print(\"Executando...\")\n    y += 1\n</code></pre> <ul> <li> 2 vezes</li> <li> 3 vezes</li> <li> 4 vezes</li> <li> 5 vezes</li> </ul> <p>Answer</p> <p>O print ser\u00e1 executado 3 vezes. O la\u00e7o inicia com <code>y</code> sendo 5 e termina quando <code>y</code> \u00e9 8. Portanto, ele ser\u00e1 executado para os valores 5, 6 e 7 de <code>y</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#e-se-nao-existem-os-lacos-de-repeticao-como-seria","title":"E se n\u00e3o existem os la\u00e7os de repeti\u00e7\u00e3o, como seria?","text":"<p>Apenas por curiosidade... Se n\u00e3o existem os la\u00e7os de repeti\u00e7\u00e3o poderiamos utilizar uma t\u00e9cnica de recurs\u00e3o para conseguir fazer nossos c\u00f3digos realizar loops. Apenas como exemplo avalie o c\u00f3digo abaixo e entenda como ele funciona. Mais adiante em nosso curso vamos explorar a fundo as recuss\u00f5es. </p> <p><pre><code>def cont(contador):\n    if contador == 5:\n        return\n    print(contador)\n    contador += 1\n    cont(contador)\n\ncont(0)\n</code></pre> Neste exemplo, o c\u00f3digo imprimir\u00e1 os n\u00fameros de 0 a 4. Quando <code>contador</code> atingir o valor 5, a condi\u00e7\u00e3o <code>contador == 5</code> se tornar\u00e1 verdadeira e ser\u00e1 interrompido.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#combinacao-de-while-com-estruturas-de-decisao","title":"Combina\u00e7\u00e3o de <code>while</code> com Estruturas de Decis\u00e3o","text":"<p>Frequentemente na programa\u00e7\u00e3o, precisamos de l\u00f3gicas de repeti\u00e7\u00e3o que tamb\u00e9m incluam tomadas de decis\u00e3o. Combinando o la\u00e7o <code>while</code> com estruturas de decis\u00e3o como <code>if-else</code>, podemos criar fluxos mais din\u00e2micos e adapt\u00e1veis \u00e0s condi\u00e7\u00f5es que s\u00e3o verificadas durante a execu\u00e7\u00e3o.</p> <p>Ao integrar essas estruturas, \u00e9 poss\u00edvel, por exemplo, adaptar a\u00e7\u00f5es dentro do loop com base em determinadas condi\u00e7\u00f5es, tornando o c\u00f3digo mais flex\u00edvel e vers\u00e1til.</p> <pre><code>numero = 0\nwhile numero &lt;= 10:\n    if numero % 2 == 0:\n        print(f\"{numero} \u00e9 par\")\n    else:\n        print(f\"{numero} \u00e9 \u00edmpar\")\n    numero += 1\n</code></pre> <p>No c\u00f3digo acima, usamos o operador m\u00f3dulo (<code>%</code>) para verificar o resto da divis\u00e3o do <code>numero</code> por 2. Se o resto \u00e9 0, o n\u00famero \u00e9 par; caso contr\u00e1rio, \u00e9 \u00edmpar. A cada itera\u00e7\u00e3o, o valor de <code>numero</code> \u00e9 incrementado, e essa l\u00f3gica \u00e9 repetida at\u00e9 que <code>numero</code> seja maior que 10.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#interacao-com-o-usuario-e-laco-while","title":"Intera\u00e7\u00e3o com o Usu\u00e1rio e La\u00e7o <code>while</code>","text":"<p>Muitas vezes, em programas interativos, queremos que o c\u00f3digo execute enquanto aguardamos uma entrada do usu\u00e1rio ou at\u00e9 que o usu\u00e1rio decida encerrar. O la\u00e7o <code>while</code> \u00e9 ideal para esses cen\u00e1rios.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exemplo-com-input-do-usuario","title":"Exemplo com <code>input</code> do Usu\u00e1rio","text":"<p>Suponha que queremos que o usu\u00e1rio insira n\u00fameros e o programa os multiplique por 10, at\u00e9 que o usu\u00e1rio decida parar:</p> <pre><code>resposta = \"sim\"\nwhile resposta.lower() == \"sim\":\n    numero = float(input(\"Digite um n\u00famero: \"))\n    print(f\"{numero} multiplicado por 10 \u00e9 {numero * 10}\")\n    resposta = input(\"Deseja continuar? (sim/n\u00e3o) \")\n</code></pre> <p>Quest\u00e3o 2</p> <p>No exemplo de intera\u00e7\u00e3o com o usu\u00e1rio que multiplica n\u00fameros por 10, se o usu\u00e1rio digitar \"SIM\" ao ser questionado se deseja continuar, o que acontecer\u00e1?</p> <ul> <li> O programa solicitar\u00e1 um novo n\u00famero.</li> <li> O programa encerrar\u00e1.</li> <li> O programa mostrar\u00e1 uma mensagem de erro.</li> <li> O programa reiniciar\u00e1.</li> </ul> <p>Answer</p> <p>O programa solicitar\u00e1 um novo n\u00famero, pois a verifica\u00e7\u00e3o <code>resposta.lower() == \"sim\"</code> converte a resposta do usu\u00e1rio para min\u00fasculas antes de fazer a compara\u00e7\u00e3o.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exemplo-com-loop-continuo-ate-digitar-sair","title":"Exemplo com Loop Cont\u00ednuo at\u00e9 Digitar \"sair\"","text":"<p>Podemos criar um loop que executa continuamente at\u00e9 que o usu\u00e1rio digite uma palavra-chave, como \"sair\":</p> <pre><code>mensagem = \"\"\nwhile mensagem != \"sair\" or \"SAIR\":\n    mensagem = input(\"Digite uma mensagem ou 'sair' para encerrar: \")\n    if mensagem.lower() != \"sair\":\n        print(f\"Voc\u00ea digitou: {mensagem}\")\n</code></pre> <p>Quest\u00e3o</p> <p>Considerando o exemplo do loop cont\u00ednuo at\u00e9 digitar \"sair\", se o usu\u00e1rio digitar \"EXIT\", qual ser\u00e1 o comportamento do programa?</p> <ul> <li> O programa encerrar\u00e1.</li> <li> O programa imprimir\u00e1 \"Voc\u00ea digitou: EXIT\".</li> <li> O programa mostrar\u00e1 uma mensagem de erro.</li> <li> O programa reiniciar\u00e1.</li> </ul> <p>Answer</p> <p>O programa imprimir\u00e1 \"Voc\u00ea digitou: EXIT\" e continuar\u00e1 esperando uma nova entrada, pois a palavra-chave para encerrar \u00e9 \"sair\" e n\u00e3o \"EXIT\".</p> <p>Aqui, o programa imprimir\u00e1 as mensagens do usu\u00e1rio at\u00e9 que ele digite \"sair\".</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exercicios-de-verificacao_1","title":"Exerc\u00edcios de Verifica\u00e7\u00e3o","text":"<p>Quest\u00e3o</p> <p>Dado o seguinte c\u00f3digo:</p> <pre><code>numero = 0\nwhile numero &lt; 5:\n    if numero == 3:\n        print(f\"{numero} \u00e9 meu n\u00famero favorito!\")\n    else:\n        print(f\"{numero} \u00e9 um n\u00famero comum.\")\n    numero += 1\n</code></pre> <p>Quantas vezes a mensagem \"\u00e9 meu n\u00famero favorito!\" ser\u00e1 impressa?</p> <ul> <li> 0</li> <li> 1</li> <li> 2</li> <li> 5</li> </ul> <p>Answer</p> <p>A mensagem \"\u00e9 meu n\u00famero favorito!\" ser\u00e1 impressa uma \u00fanica vez, quando <code>numero</code> for igual a 3.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#uso-do-break-e-continue-com-while","title":"Uso do <code>break</code> e <code>continue</code> com <code>while</code>","text":"<p>Dentro dos la\u00e7os de repeti\u00e7\u00e3o em Python, temos duas instru\u00e7\u00f5es poderosas que nos permitem controlar o fluxo da execu\u00e7\u00e3o: <code>break</code> e <code>continue</code>.</p> <ul> <li> <p><code>break</code>: Esta instru\u00e7\u00e3o interrompe completamente o la\u00e7o. Quando o interpretador encontra um <code>break</code>, ele sai do la\u00e7o atual e continua a execu\u00e7\u00e3o do c\u00f3digo ap\u00f3s esse la\u00e7o.</p> </li> <li> <p><code>continue</code>: Ao contr\u00e1rio do <code>break</code>, o <code>continue</code> n\u00e3o interrompe o la\u00e7o completamente. Ele apenas interrompe a itera\u00e7\u00e3o atual e faz o la\u00e7o retornar ao seu in\u00edcio, avaliando a condi\u00e7\u00e3o novamente.</p> </li> </ul>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#uso-do-break-com-while","title":"Uso do <code>break</code> com <code>while</code>","text":"<p>Imagine que voc\u00ea esteja buscando um elemento em uma lista e queira parar a busca assim que encontr\u00e1-lo. O <code>break</code> \u00e9 perfeito para este cen\u00e1rio.</p> <pre><code>contador = 0\nwhile contador &lt; 10:\n    if contador == 5:\n        break\n    print(contador)\n    contador += 1\nprint(f\"continua fora do while com contador = {contador}\")\n</code></pre> <p>No c\u00f3digo acima, a execu\u00e7\u00e3o do la\u00e7o <code>while</code> \u00e9 interrompida assim que o <code>contador</code> alcan\u00e7a o valor 5. Como resultado, o programa imprime os n\u00fameros de 0 a 4.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#uso-do-continue-com-while","title":"Uso do <code>continue</code> com <code>while</code>","text":"<p>O <code>continue</code> \u00e9 \u00fatil quando queremos pular uma itera\u00e7\u00e3o espec\u00edfica do la\u00e7o mas continuar com as pr\u00f3ximas itera\u00e7\u00f5es.</p> <pre><code>contador = 0\nwhile contador &lt; 5:\n    contador += 1\n    if contador == 3:\n        continue\n        print(\"estou no if\") # note que esse print nunca ser\u00e1 executado\n    print(contador)\nprint(f\"fora do while com contador = {contador}\")\n</code></pre> <p>Neste exemplo, quando <code>contador</code> \u00e9 igual a 3, a instru\u00e7\u00e3o <code>continue</code> faz com que o c\u00f3digo retorne ao in\u00edcio do la\u00e7o, pulando o <code>print(contador)</code> para esse valor espec\u00edfico. Assim, o programa imprime os n\u00fameros 1, 2, 4 e 5.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exercicios-de-verificacao_2","title":"Exerc\u00edcios de Verifica\u00e7\u00e3o","text":"<p>Quest\u00e3o</p> <p>Qual ser\u00e1 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>i = 1\nwhile i &lt; 5:\n    if i == 3:\n        break\n    print(i)\n    i += 1\n</code></pre> <ul> <li> <code>1 2 3</code></li> <li> <code>1 2</code></li> <li> <code>1 2 3 4</code></li> <li> <code>2 3</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>1 2</code>. O la\u00e7o \u00e9 interrompido assim que <code>i</code> \u00e9 igual a 3 por causa da instru\u00e7\u00e3o <code>break</code>.</p> <p>Quest\u00e3o</p> <p>Qual ser\u00e1 a sa\u00edda do seguinte c\u00f3digo?</p> <pre><code>x = 0\nwhile x &lt; 5:\n    x += 1\n    if x == 3:\n        continue\n    print(x)\n</code></pre> <ul> <li> <code>1 2 3 4 5</code></li> <li> <code>0 1 2 3 4</code></li> <li> <code>1 2 4 5</code></li> <li> <code>1 2 4 5 6</code></li> </ul> <p>Answer</p> <p>A sa\u00edda ser\u00e1 <code>1 2 4 5</code>. O n\u00famero 3 \u00e9 pulado devido \u00e0 instru\u00e7\u00e3o <code>continue</code>.</p> <p>Quest\u00e3o</p> <p>No seguinte c\u00f3digo, at\u00e9 que valor a vari\u00e1vel <code>y</code> ser\u00e1 incrementada?</p> <pre><code>y = 5\nwhile y &lt; 10:\n    if y == 8:\n        break\n    y += 1\n</code></pre> <ul> <li> 7</li> <li> 8</li> <li> 9</li> <li> 10</li> </ul> <p>Answer</p> <p>A vari\u00e1vel <code>y</code> ser\u00e1 incrementada at\u00e9 o valor 8. Quando <code>y</code> \u00e9 igual a 8, a instru\u00e7\u00e3o <code>break</code> interrompe o la\u00e7o.</p> <p>Quest\u00e3o</p> <p>Qual \u00e9 a principal diferen\u00e7a entre as instru\u00e7\u00f5es <code>break</code> e <code>continue</code> em um la\u00e7o <code>while</code>?</p> <ul> <li> <code>break</code> interrompe o la\u00e7o, enquanto <code>continue</code> interrompe a itera\u00e7\u00e3o atual e retorna ao in\u00edcio do la\u00e7o.</li> <li> <code>break</code> e <code>continue</code> ambos interrompem o la\u00e7o imediatamente.</li> <li> <code>break</code> retorna ao in\u00edcio do la\u00e7o, enquanto <code>continue</code> interrompe o la\u00e7o.</li> <li> Ambos t\u00eam o mesmo comportamento.</li> </ul> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#cuidados-com-lacos-infinitos","title":"Cuidados com La\u00e7os Infinitos","text":"<p>\u00c9 importante ter cuidado ao escrever loops <code>while</code> para evitar loops infinitos. Se a condi\u00e7\u00e3o nunca se tornar falsa, o loop continuar\u00e1 executando indefinidamente. Isso pode causar travamento do programa ou consumo excessivo de recursos. Existem sita\u00e7\u00f5es especificas, como programa\u00e7\u00e3o de sistemas embarcados, onde \u00e9 necess\u00e1rio um la\u00e7o de repeti\u00e7\u00e3o infinito.  </p> <p>Tip</p> <p>Para interromper um loop infinito em um ambiente de desenvolvimento, geralmente voc\u00ea pode usar a combina\u00e7\u00e3o de teclas <code>Ctrl + C</code>.</p>"},{"location":"aulas/ctp/python/repetition-structures-while-loop.html#exercicios-praticos","title":"Exerc\u00edcios Pr\u00e1ticos","text":"<p>Pr\u00e1ticar \u00e9 o segredo do sucesso para pragrama\u00e7\u00e3o. </p> <ul> <li>Calculadora Simples: Dado um n\u00famero inteiro n &gt;= 0, calcular n!.</li> </ul>"},{"location":"aulas/ctp/resources/references.html","title":"Refer\u00eancias e Leituras Complementares","text":""},{"location":"aulas/ctp/resources/references.html#referencias-e-leituras-complementares","title":"Refer\u00eancias e Leituras Complementares","text":""},{"location":"aulas/ctp/resources/references.html#livros","title":"Livros:","text":"<p>\"Python Crash Course\" por Eric Matthes</p> <ul> <li>Um guia pr\u00e1tico e completo para iniciantes aprenderem Python rapidamente.</li> </ul> <p>\"Automate the Boring Stuff with Python\" por Al Sweigart</p> <ul> <li>Uma abordagem pr\u00e1tica para automatizar tarefas rotineiras usando Python.</li> </ul> <p>\"Introduction to Computing Using Python: An Application Development Focus\" por Ljubomir Perkovic</p> <ul> <li>Introdu\u00e7\u00e3o ao pensamento computacional e conceitos de ci\u00eancia da computa\u00e7\u00e3o usando Python.</li> </ul> <p>\"Think Python: How to Think Like a Computer Scientist\" por Allen B. Downey</p> <ul> <li>Uma introdu\u00e7\u00e3o \u00e0 programa\u00e7\u00e3o usando Python, com \u00eanfase no pensamento computacional.</li> </ul> <p>\"Data Science Handbook\" por Jake VanderPlas</p> <ul> <li>Um guia para as principais bibliotecas Python utilizadas em ci\u00eancia de dados, incluindo NumPy, Matplotlib e Pandas.</li> </ul>"},{"location":"aulas/ctp/resources/references.html#recursos-online","title":"Recursos Online:","text":"<p>\"Python.org - Documenta\u00e7\u00e3o Oficial\"</p> <ul> <li>Documenta\u00e7\u00e3o completa e detalhada do Python, incluindo tutoriais e guias.</li> </ul> <p>\"Real Python\"</p> <ul> <li>Desafios matem\u00e1ticos que requerem solu\u00e7\u00f5es de programa\u00e7\u00e3o, \u00f3timos para desenvolver habilidades de pensamento computacional.</li> </ul> <p>\"Geeks for Geeks - Python Programming Language\"</p> <ul> <li>Tutoriais e artigos abrangentes sobre v\u00e1rios aspectos da programa\u00e7\u00e3o em Python.</li> </ul> <p>\"Codewars\"</p> <ul> <li>Desafios de programa\u00e7\u00e3o em v\u00e1rios n\u00edveis de dificuldade para praticar habilidades de codifica\u00e7\u00e3o em Python.</li> </ul>"},{"location":"aulas/ctp/resources/references.html#cursos-online","title":"Cursos Online:","text":"<p>\"Coursera - Python for Everybody\"</p> <ul> <li>Especializa\u00e7\u00e3o por University of Michigan, focando em conceitos b\u00e1sicos de programa\u00e7\u00e3o usando Python.</li> </ul> <p>\"edX - Introduction to Computer Science and Programming Using Python\"</p> <ul> <li>Curso oferecido pelo MIT, cobrindo pensamento computacional e programa\u00e7\u00e3o usando Python.</li> </ul> <p>\"Udacity - Introduction to Python Programming\"</p> <ul> <li>Curso introdut\u00f3rio sobre programa\u00e7\u00e3o em Python.</li> </ul>"},{"location":"aulas/ctp/resources/references.html#bibliografia-complemnetar","title":"bibliografia complemnetar","text":"<ul> <li>How to Think Like a Computer Scientist - Learning with Python: Interactive Edition, de Brad Miller e David Ranum.</li> <li>FORBELLONE, A. L. V. L\u00f3gica de Programa\u00e7\u00e3o. 3. ed. S\u00e3o Paulo: Prentice Hall, 2005. </li> <li>PIVA, D. J. Algoritmos e programa\u00e7\u00e3o de computadores. S\u00e3o Paulo: Elsevier, 2012.</li> <li>PUGA, S.; RISSETTI, G. L\u00f3gica de Programa\u00e7\u00e3o e Estrutura de Dados. S\u00e3o Paulo: Pearson Prentice Hall, 2009.</li> <li>RAMALHO, L. Python Fluente: Programa\u00e7\u00e3o Clara, Concisa e Eficaz. S\u00e3o Paulo: Novatec, 2015.</li> <li>RHODES, B. Programa\u00e7\u00e3o de redes com Python. S\u00e3o Paulo: Novatec, 2015.</li> </ul>"},{"location":"aulas/ctp/web/intro-web-development.html","title":"Intro web development","text":""},{"location":"aulas/ctp/web/intro-web-development.html#introducao-ao-desenvolvimento-web","title":"Introdu\u00e7\u00e3o ao Desenvolvimento Web","text":"<p>A web est\u00e1 presente em nosso dia-a-dia e o seu desenvolvimento est\u00e1 relacionado ao processo de cria\u00e7\u00e3o de sites e aplica\u00e7\u00f5es para a internet. Ele envolve uma variedade de disciplinas e tecnologias que permitem a constru\u00e7\u00e3o de conte\u00fado interativo e din\u00e2mico que pode ser acessado por usu\u00e1rios atrav\u00e9s de navegadores web (chrome, safari, firefox...). </p>"},{"location":"aulas/ctp/web/intro-web-development.html#componentes-do-desenvolvimento-web","title":"Componentes do Desenvolvimento Web","text":"<p>Vamos definir alguns personagens que est\u00e3o presentes no desenvolvimento web, geralmente dividimos em duas \u00e1reas principais:</p> <p></p> <ul> <li> <p><code>Front-end</code>: Tamb\u00e9m conhecido como \"lado do cliente\", refere-se \u00e0 parte da aplica\u00e7\u00e3o web que os usu\u00e1rios veem e interagem. Ele \u00e9 constru\u00eddo usando 3 principais tecnologias que s\u00e3o executadas no navegador do usu\u00e1rio:</p> <ul> <li><code>HTML</code> (HyperText Markup Language): \u00c9 a espinha dorsal de qualquer p\u00e1gina web, respons\u00e1vel pela estrutura e pelo conte\u00fado. HTML define a estrutura b\u00e1sica de uma p\u00e1gina, como cabe\u00e7alhos, par\u00e1grafos, listas e links.</li> <li><code>CSS</code> (Cascading Style Sheets): \u00c9 usado para controlar a apresenta\u00e7\u00e3o, o layout e o design da p\u00e1gina HTML. CSS permite estilizar elementos HTML, definindo cores, fontes, espa\u00e7amentos, alinhamentos e muito mais.</li> <li><code>JavaScript</code>: \u00c9 uma linguagem de programa\u00e7\u00e3o que permite adicionar interatividade e dinamismo \u00e0s p\u00e1ginas web. Com JavaScript, \u00e9 poss\u00edvel criar efeitos de anima\u00e7\u00e3o, validar formul\u00e1rios, realizar opera\u00e7\u00f5es ass\u00edncronas com AJAX e manipular o DOM (Document Object Model).</li> </ul> </li> <li> <p><code>Back-end</code>: Conhecido como \"lado do servidor\", \u00e9 respons\u00e1vel pela l\u00f3gica de neg\u00f3cios, gerenciamento de banco de dados e servidor da aplica\u00e7\u00e3o.As tecnologias comuns usadas no back-end incluem:</p> <ul> <li><code>Linguagens de Programa\u00e7\u00e3o</code>: Como Python, Ruby, PHP, Node.js e Java. Essas linguagens s\u00e3o usadas para desenvolver a l\u00f3gica do servidor, manipular dados e interagir com o banco de dados.</li> <li><code>Frameworks</code>: Como Flask e Django para Python, Ruby on Rails para Ruby, Express para Node.js e Spring para Java. Os frameworks fornecem uma estrutura e um conjunto de ferramentas para facilitar o desenvolvimento do back-end, incluindo roteamento de URL, manipula\u00e7\u00e3o de requisi\u00e7\u00f5es e respostas, e integra\u00e7\u00e3o com bancos de dados.</li> <li><code>Servidores Web</code>: Como Apache, Nginx e IIS, que s\u00e3o respons\u00e1veis por receber as requisi\u00e7\u00f5es HTTP dos clientes, pass\u00e1-las para a aplica\u00e7\u00e3o back-end e enviar as respostas de volta ao cliente.</li> </ul> </li> <li> <p><code>Banco de dados</code>: \u00c9 o componente que armazena e gerencia os dados da aplica\u00e7\u00e3o. Ele \u00e9 fundamental para qualquer aplica\u00e7\u00e3o web que precisa persistir informa\u00e7\u00f5es, como dados de usu\u00e1rios, conte\u00fado de p\u00e1ginas ou registros de transa\u00e7\u00f5es. Os tipos comuns de bancos de dados incluem:</p> <ul> <li><code>Bancos de Dados Relacionais</code>: Como MySQL, PostgreSQL e SQLite, que organizam os dados em tabelas e usam SQL (Structured Query Language) para consulta e manipula\u00e7\u00e3o de dados.</li> <li><code>Bancos de Dados N\u00e3o Relacionais (NoSQL)</code>: Como MongoDB, Cassandra e Redis, que s\u00e3o mais flex\u00edveis em termos de estrutura de dados e s\u00e3o frequentemente usados em aplica\u00e7\u00f5es que requerem escalabilidade horizontal e manipula\u00e7\u00e3o de grandes volumes de dados.</li> </ul> </li> </ul>"},{"location":"aulas/ctp/web/intro-web-development.html#dinamica-cliente-servidor","title":"Din\u00e2mica Cliente-Servidor","text":"<p>No cora\u00e7\u00e3o do desenvolvimento web est\u00e1 o modelo cliente-servidor, uma arquitetura de rede que separa clientes (navegadores) e servidores (onde os sites s\u00e3o armazenados e executados). Quando um usu\u00e1rio acessa um site, o navegador (cliente) envia uma solicita\u00e7\u00e3o HTTP ao servidor, que ent\u00e3o processa a solicita\u00e7\u00e3o e envia de volta os dados necess\u00e1rios (geralmente em forma de HTML, CSS e JavaScript) para o navegador exibir a p\u00e1gina web.</p> <p>refs: - https://www.alura.com.br/artigos/o-que-e-front-end-e-back-end - https://realpython.com/python-sockets/ </p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/web/intro-web-development.html#pratica-um-pouco-sobre-sockets","title":"Pr\u00e1tica, um pouco sobre sockets","text":"<p>Sockets s\u00e3o uma abstra\u00e7\u00e3o de endpoints de comunica\u00e7\u00e3o que permitem a <code>troca de dados</code> entre <code>processos em uma rede</code> ou entre processos na mesma m\u00e1quina. Eles s\u00e3o a base para a constru\u00e7\u00e3o de aplica\u00e7\u00f5es de rede, como servidores web, clientes de email, jogos online, entre outros.</p>"},{"location":"aulas/ctp/web/intro-web-development.html#como-utilizar-sockets-em-python","title":"Como Utilizar Sockets em Python","text":"<p>Python oferece uma biblioteca chamada <code>socket</code> que fornece uma interface de alto n\u00edvel para trabalhar com sockets. </p> <p>Vamos dar uma olhada em algums pontos b\u00e1sicos de como criar um socket em Python:</p> <ol> <li> <p>Importar e Criar um Objeto Socket:</p> <ul> <li>Antes de usar sockets, voc\u00ea deve importar a biblioteca socket e para criar, utilizamos o m\u00e9todo <code>socket.socket()</code>, especificando o <code>tipo de endere\u00e7o</code> e o <code>protocolo de comunica\u00e7\u00e3o</code>:</li> </ul> <pre><code>import socket\n\n# Cria um socket TCP/IP\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n</code></pre> <ul> <li><code>socket.AF_INET</code>: Especifica o dom\u00ednio do endere\u00e7o do socket. <code>AF_INET</code> indica que o socket usar\u00e1 endere\u00e7os IPv4.</li> <li><code>socket.SOCK_STREAM</code>: Especifica o tipo do socket. <code>SOCK_STREAM</code> indica que o socket ser\u00e1 do tipo TCP (Transmission Control Protocol), que \u00e9 orientado a conex\u00e3o e fornece um fluxo de bytes confi\u00e1vel.</li> </ul> </li> <li> <p>Vincular o Socket a um Endere\u00e7o e Porta (Servidor)</p> <ul> <li>Para um servidor, voc\u00ea precisa vincular o socket a um <code>endere\u00e7o IP</code> e uma <code>porta</code> para escutar por conex\u00f5es de entrada:</li> </ul> <pre><code>server_address = ('localhost', 10000)  # Endere\u00e7o e porta do servidor\nsock.bind(server_address)\n</code></pre> <ul> <li><code>bind()</code>: para associar o socket a um endere\u00e7o IP e uma porta espec\u00edfico.</li> </ul> </li> <li> <p>Escutar por Conex\u00f5es de Entrada (Servidor)</p> <ul> <li>Ap\u00f3s vincular o socket, o servidor deve escutar por conex\u00f5es de entrada:</li> </ul> <pre><code>sock.listen()\n</code></pre> <ul> <li><code>listen()</code>: para colocaro socket em modo de escuta, permiti que o socket aceite conex\u00f5es.</li> </ul> </li> <li> <p>Aceitar Conex\u00f5es (Servidor)</p> <ul> <li>O servidor pode aceitar uma conex\u00e3o de um cliente usando o m\u00e9todo accept(), que bloqueia a execu\u00e7\u00e3o at\u00e9 que uma conex\u00e3o seja estabelecida:</li> </ul> <pre><code>connection, client_address = sock.accept()\n</code></pre> <ul> <li><code>accept()</code>:para aceitar uma conex\u00e3o de um cliente</li> </ul> </li> <li> <p>Estabelecer Conex\u00e3o (Cliente)</p> <ul> <li>Para um cliente, voc\u00ea deve estabelecer uma conex\u00e3o com o servidor especificando o endere\u00e7o IP e a porta do servidor:</li> </ul> <pre><code>server_address = ('localhost', 10000)  # Endere\u00e7o e porta do servidor\nsock.connect(server_address)\n</code></pre> <ul> <li><code>connect()</code>: para estabelecer uma conex\u00e3o com o servidor</li> </ul> </li> <li> <p>Enviar e Receber Dados</p> <ul> <li>Tanto o cliente quanto o servidor podem enviar e receber <code>bytes</code> usando os m\u00e9todos send() e recv():</li> <li><code>A comunica\u00e7\u00e3o sempre \u00e9 em bytes, n\u00e3o existe comunica\u00e7\u00e3o de string ou int, float... \u00e9 tudo byte!</code></li> <li>os metodos encode() e decode(): codific\u00e1 em bytes uma string e decodifica de bytes para string.</li> </ul> <pre><code># Enviar dados\nmessage = 'Ol\u00e1, mundo!'\nsock.sendall(message.encode())\n\n# Receber dados\ndata = sock.recv(1024)\nprint(f\"Recebido: {data.decode()}\")\n</code></pre> <ul> <li><code>sendall()</code>: para enviar dados </li> <li><code>recv()</code>: para receber dados. O argumento especifica o n\u00famero m\u00e1ximo de bytes a serem lidos. Retorna os dados recebidos como um objeto de bytes.</li> </ul> </li> <li> <p>Fechar o Socket</p> <ul> <li>Ap\u00f3s a comunica\u00e7\u00e3o ser conclu\u00edda, \u00e9 importante fechar o socket para liberar os recursos:</li> </ul> <pre><code>sock.close()\n</code></pre> <ul> <li><code>close()</code>: fecha a conex\u00e3o.</li> </ul> </li> </ol> <p>Agora que j\u00e1 temos uma id\u00e9ia das principais fun\u00e7\u00f5es, definir uma estrutura de comunica\u00e7\u00e3o client-server da seguinte forma:</p> <p></p> <p>Progress</p> <p>Continuar...</p> <p>Question</p> <p>Antes de continuar na aula, pense e responda:</p> <ul> <li>Considerando dois processos que precisam se comunicar usando TCP/IP ou UDP/IP, qual deve ser o primeiro passo para iniciar a comunica\u00e7\u00e3o?</li> </ul> <p>Answer</p> <p>Para iniciar a comunica\u00e7\u00e3o, um dos processos deve estar em execu\u00e7\u00e3o no modo de \"escuta\" (listening), aguardando uma solicita\u00e7\u00e3o de conex\u00e3o do outro processo. Esse processo em modo de escuta \u00e9 geralmente chamado de servidor. O outro processo, conhecido como cliente, pode iniciar a comunica\u00e7\u00e3o a qualquer momento, estabelecendo uma conex\u00e3o com o servidor.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/web/intro-web-development.html#projeto-loop-back","title":"Projeto loop-back","text":"<p>Vamos criar um projeto de <code>loopback</code> cliente-servidor, onde a comunica\u00e7\u00e3o entre o cliente e o servidor ocorrer\u00e1 no mesmo computador, utilizando o endere\u00e7o de loopback <code>127.0.0.1</code>.</p> <p></p> <p>Basicamente vai funcionar da seguinte forma: </p> <ul> <li> <p>Iniciar o Servidor:</p> <ul> <li>O servidor ser\u00e1 iniciado primeiro e ficar\u00e1 escutando em um endere\u00e7o IP de loopback (127.0.0.1) em uma porta espec\u00edfica (por exemplo, 65432).</li> <li>O servidor criar\u00e1 um socket, vincular\u00e1 esse socket ao endere\u00e7o e porta especificados e come\u00e7ar\u00e1 a escutar por conex\u00f5es de entrada.</li> </ul> </li> <li> <p>Conectar o Cliente:</p> <ul> <li>O cliente ser\u00e1 iniciado em seguida e tentar\u00e1 se conectar ao servidor usando <code>o mesmo endere\u00e7o de loopback e porta</code> em que o servidor est\u00e1 escutando.</li> <li>O cliente criar\u00e1 um socket e usar\u00e1 o m\u00e9todo <code>connect()</code> para estabelecer uma conex\u00e3o com o servidor.</li> </ul> </li> <li> <p>Comunica\u00e7\u00e3o:</p> <ul> <li>Ap\u00f3s a conex\u00e3o ser estabelecida, o cliente poder\u00e1 enviar dados ao servidor usando o m\u00e9todo <code>send()</code> ou <code>sendall()</code> do socket.</li> <li>O servidor receber\u00e1 os dados enviados pelo cliente usando o m\u00e9todo <code>recv()</code> do socket.</li> <li>O servidor vai responder ao cliente enviando dados recebidos de volta, e o cliente vai receber esses dados.</li> </ul> </li> <li> <p>Encerramento da Conex\u00e3o:</p> <ul> <li>O c\u00f3digo \u00e9 encerrado quando a comunica\u00e7\u00e3o for conclu\u00edda. </li> <li>O cliente e o servidor fecham seus respectivos sockets para encerrar a conex\u00e3o. </li> </ul> </li> </ul>"},{"location":"aulas/ctp/web/intro-web-development.html#criando-um-servidor-simples","title":"Criando um Servidor Simples","text":"<p>Para criar um <code>servidor</code> simples usando sockets, voc\u00ea precisa seguir os seguintes passos:</p> <ul> <li><code>Criar um Socket</code>: Use o m\u00e9todo socket() para criar um objeto de socket.</li> <li><code>Vincular o Socket a um Endere\u00e7o e Porta</code>: Use o m\u00e9todo bind() para associar o socket a um endere\u00e7o IP e uma porta espec\u00edficos.</li> <li><code>Colocar o Socket em Modo de Escuta</code>: Use o m\u00e9todo listen() para permitir que o socket aceite conex\u00f5es.</li> <li><code>Aceitar uma Conex\u00e3o</code>: Use o m\u00e9todo accept() para aceitar uma conex\u00e3o de um cliente.</li> <li><code>Enviar e Receber Dados</code>: Use os m\u00e9todos send() e recv() para enviar e receber dados.</li> </ul> <p>O servidor simples:</p> <pre><code>import socket\n\nHOST = '127.0.0.1'  # Endere\u00e7o IP do servidor\nPORT = 65432        # Porta que o servidor est\u00e1 ouvindo\n\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n    s.bind((HOST, PORT))\n    s.listen()\n    print(\"Servidor escutando...\")\n    conn, addr = s.accept()\n    with conn:\n        print(f\"Conectado por {addr}\")\n        while True:\n            data = conn.recv(1024)\n            if not data:\n                break\n            print(f\"Recebido: {data.decode('utf-8')}\")\n            conn.sendall(data) \n</code></pre>"},{"location":"aulas/ctp/web/intro-web-development.html#criando-um-cliente-simples","title":"Criando um Cliente Simples","text":"<p>Para criar um <code>cliente</code> simples que se conecta a um servidor usando sockets, voc\u00ea precisa seguir os seguintes passos:</p> <ul> <li><code>Criar um Socket</code>: Use o m\u00e9todo socket() para criar um objeto de socket.</li> <li><code>Conectar o Socket ao Servidor</code>: Use o m\u00e9todo connect() para estabelecer uma conex\u00e3o com o servidor.</li> <li><code>Enviar e Receber Dados</code>: Use os m\u00e9todos send() e recv() para enviar e receber dados.</li> <li><code>Fechar o Socket</code>: Use o m\u00e9todo close() para fechar a conex\u00e3o.</li> </ul> <p>O cliente simples:</p> <pre><code>import socket\n\nHOST = '127.0.0.1'  # Endere\u00e7o IP do servidor\nPORT = 65432        # Porta que o servidor est\u00e1 ouvindo\n\nwith socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:\n    s.connect((HOST, PORT))\n    # Codifique a string 'Ol\u00e1, servidor!' usando UTF-8 antes de envi\u00e1-la\n    mensagem = 'Ol\u00e1, servidor!'.encode('utf-8')\n    s.sendall(mensagem)\n    data = s.recv(1024)\n\nprint(f\"Recebido: {data.decode('utf-8')}\")\n</code></pre> <p>Question</p> <p>Teste e valide o funcionamento do client-server simples. Para isso, siga os seguintes passos:</p> <ul> <li>Crie uma nova pasta de projeto;</li> <li>Crie um arquivo python chamado servidor.py e adicione o c\u00f3digo fornecido para o servidor;</li> <li>Crie um arquivo python chamado cliente.py e adicione o c\u00f3digo fornecido para o cliente;</li> <li>Em um terminal, execute o c\u00f3digo servidor.py;</li> <li>Em um novo terminal, execute o c\u00f3digo cliente.py;</li> <li>obseve o que aconteceu  </li> </ul> <p>Responda as pergutas a seguir para validar seus conhecimentos sobre sockets</p> <p>Question</p> <p>Qual dos seguintes m\u00e9todos \u00e9 utilizado para vincular um endere\u00e7o e uma porta a um socket em Python?</p> <ul> <li> <code>connect()</code></li> <li> <code>bind()</code></li> <li> <code>listen()</code></li> <li> <code>accept()</code></li> </ul> <p>Answer</p> <p>O m\u00e9todo <code>bind()</code> \u00e9 utilizado para vincular um endere\u00e7o e uma porta a um socket em Python.</p> <p>Question</p> <p>Em uma comunica\u00e7\u00e3o cliente-servidor, qual dos seguintes m\u00e9todos \u00e9 utilizado pelo servidor para escutar por conex\u00f5es de entrada?</p> <ul> <li> <code>connect()</code></li> <li> <code>bind()</code></li> <li> <code>listen()</code></li> <li> <code>accept()</code></li> </ul> <p>Answer</p> <p>O m\u00e9todo <code>listen()</code> \u00e9 utilizado pelo servidor para escutar por conex\u00f5es de entrada.</p> <p>Question</p> <p>Qual das seguintes alternativas \u00e9 verdadeira sobre o m\u00e9todo <code>accept()</code> em um servidor de socket?</p> <ul> <li> Ele \u00e9 usado para enviar dados para um cliente.</li> <li> Ele \u00e9 usado para receber dados de um cliente.</li> <li> Ele \u00e9 usado para aceitar uma conex\u00e3o de um cliente.</li> <li> Ele \u00e9 usado para escutar por conex\u00f5es de entrada.</li> </ul> <p>Answer</p> <p>O m\u00e9todo <code>accept()</code> \u00e9 usado por um servidor de socket para aceitar uma conex\u00e3o de um cliente.</p> <p>Question</p> <p>Em uma comunica\u00e7\u00e3o de rede usando sockets, qual das seguintes afirma\u00e7\u00f5es \u00e9 verdadeira sobre o endere\u00e7o IP <code>127.0.0.1</code>?</p> <ul> <li> \u00c9 usado para se referir a um dispositivo remoto na rede.</li> <li> \u00c9 o endere\u00e7o de loopback que se refere ao pr\u00f3prio dispositivo.</li> <li> \u00c9 o endere\u00e7o IP padr\u00e3o para todos os roteadores.</li> <li> \u00c9 um endere\u00e7o IP reservado para uso futuro.</li> </ul> <p>Answer</p> <p>O endere\u00e7o IP <code>127.0.0.1</code> \u00e9 conhecido como endere\u00e7o de loopback e \u00e9 usado para se referir ao pr\u00f3prio dispositivo na rede.</p> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/web/intro-web-development.html#projeto-webchat-via-socket","title":"Projeto WebChat via socket","text":"<p>Legal, agora que j\u00e1 conhecemos e sabemos criar uma conex\u00e3o socket, vamos avan\u00e7ar criando uma aplica\u00e7\u00e3o Client-Server por meio de um chat usando sockets. Basicamente, esse novo sistema consiste de um servidor que gerencia as mensagens de multiplos clientes conectados.</p> <p></p> <p>Question</p> <ol> <li>Clone o reposit\u00f3rio.</li> </ol> <pre><code>git clone https://github.com/arnaldojr/client-server.git\ncd client-server\n</code></pre> <ol> <li>Inicie <code>primeiramente</code> o servidor, nesse caso ser\u00e1 o pc do professor ser\u00e1 o HOST:</li> </ol> <pre><code>python server.py\n</code></pre> <ol> <li>Em outro terminal, inicie um ou mais clientes. Neste caso \u00e9 importante ajustar o IP do Host:</li> </ol> <pre><code>python client.py\n</code></pre> <ol> <li>Digite seu nome de usu\u00e1rio e comece a enviar mensagens \ud83d\ude01. Para sair do programa, digite \"sair\".</li> </ol>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html","title":"Conex\u00e3o com Banco de Dados","text":"<p>O Flask pode se conectar a v\u00e1rios bancos de dados. Neste tutorial, vamos usar o SQLite para simplicidade.</p>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html#configurando-o-banco-de-dados","title":"Configurando o Banco de Dados","text":"<p>Crie um arquivo <code>config.py</code>:</p> <pre><code>import os\n\nclass Config:\n    SECRET_KEY = os.environ.get('SECRET_KEY') or 'chave_secreta'\n    SQLALCHEMY_DATABASE_URI = 'sqlite:///site.db'\n    SQLALCHEMY_TRACK_MODIFICATIONS = False\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html#inicializando-o-banco-de-dados","title":"Inicializando o Banco de Dados","text":"<p>No <code>__init__.py</code> do seu aplicativo:</p> <pre><code>from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom config import Config\n\napp = Flask(__name__)\napp.config.from_object(Config)\ndb = SQLAlchemy(app)\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html#criando-um-modelo","title":"Criando um Modelo","text":"<p>Crie um modelo para a tabela de usu\u00e1rios:</p> <pre><code>class User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(20), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(60), nullable=False)\n\n    def __repr__(self):\n        return f\"User('{self.username}', '{self.email}')\"\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html#criando-o-banco-de-dados","title":"Criando o Banco de Dados","text":"<p>Para criar o banco de dados:</p> <pre><code>from app import app, db\n\nwith app.app_context():\n    db.create_all()\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection%20%281%29.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a conectar nossa aplica\u00e7\u00e3o Flask a um banco de dados usando SQLAlchemy. No pr\u00f3ximo tutorial, veremos como usar ORM (Object-Relational Mapping).</p>"},{"location":"aulas/ctp/web/flask/database-connection.html","title":"Conex\u00e3o com Banco de Dados","text":"<p>O Flask pode se conectar a v\u00e1rios bancos de dados. Neste tutorial, vamos usar o SQLite para simplicidade.</p>"},{"location":"aulas/ctp/web/flask/database-connection.html#configurando-o-banco-de-dados","title":"Configurando o Banco de Dados","text":"<p>Crie um arquivo <code>config.py</code>:</p> <pre><code>import os\n\nclass Config:\n    SECRET_KEY = os.environ.get('SECRET_KEY') or 'chave_secreta'\n    SQLALCHEMY_DATABASE_URI = 'sqlite:///site.db'\n    SQLALCHEMY_TRACK_MODIFICATIONS = False\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection.html#inicializando-o-banco-de-dados","title":"Inicializando o Banco de Dados","text":"<p>No <code>__init__.py</code> do seu aplicativo:</p> <pre><code>from flask import Flask\nfrom flask_sqlalchemy import SQLAlchemy\nfrom config import Config\n\napp = Flask(__name__)\napp.config.from_object(Config)\ndb = SQLAlchemy(app)\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection.html#criando-um-modelo","title":"Criando um Modelo","text":"<p>Crie um modelo para a tabela de usu\u00e1rios:</p> <pre><code>class User(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    username = db.Column(db.String(20), unique=True, nullable=False)\n    email = db.Column(db.String(120), unique=True, nullable=False)\n    password = db.Column(db.String(60), nullable=False)\n\n    def __repr__(self):\n        return f\"User('{self.username}', '{self.email}')\"\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection.html#criando-o-banco-de-dados","title":"Criando o Banco de Dados","text":"<p>Para criar o banco de dados:</p> <pre><code>from app import app, db\n\nwith app.app_context():\n    db.create_all()\n</code></pre>"},{"location":"aulas/ctp/web/flask/database-connection.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a conectar nossa aplica\u00e7\u00e3o Flask a um banco de dados usando SQLAlchemy. No pr\u00f3ximo tutorial, veremos como usar ORM (Object-Relational Mapping).</p>"},{"location":"aulas/ctp/web/flask/deploy.html","title":"Deploy de Aplica\u00e7\u00f5es","text":"<p>Fazer o deploy de uma aplica\u00e7\u00e3o Flask envolve v\u00e1rias etapas, desde a configura\u00e7\u00e3o do servidor at\u00e9 a implanta\u00e7\u00e3o do c\u00f3digo.</p>"},{"location":"aulas/ctp/web/flask/deploy.html#escolhendo-um-servidor","title":"Escolhendo um Servidor","text":"<p>Voc\u00ea pode usar servidores como Gunicorn ou uWSGI para servir sua aplica\u00e7\u00e3o Flask. Aqui est\u00e1 um exemplo usando Gunicorn:</p> <pre><code>pip install gunicorn\ngunicorn -w 4 -b 0.0.0.0:8000 wsgi:app\n</code></pre>"},{"location":"aulas/ctp/web/flask/deploy.html#configurando-um-servidor-web","title":"Configurando um Servidor Web","text":"<p>Use um servidor web como Nginx para lidar com requisi\u00e7\u00f5es HTTP e encaminh\u00e1-las para sua aplica\u00e7\u00e3o Flask:</p> <pre><code>server {\n    listen 80;\n    server_name yourdomain.com;\n\n    location / {\n        proxy_pass http://127.0.0.1:8000;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n</code></pre>"},{"location":"aulas/ctp/web/flask/deploy.html#uso-de-docker","title":"Uso de Docker","text":"<p>Voc\u00ea pode usar Docker para criar um cont\u00eainer da sua aplica\u00e7\u00e3o:</p> <pre><code>FROM python:3.8-slim-buster\n\nWORKDIR /app\n\nCOPY requirements.txt requirements.txt\nRUN pip install -r requirements.txt\n\nCOPY . .\n\nCMD [\"gunicorn\", \"-w\", \"4\", \"-b\", \"0.0.0.0:8000\", \"wsgi:app\"]\n</code></pre> <p>Construa e execute o cont\u00eainer:</p> <pre><code>docker build -t myflaskapp .\ndocker run -d -p 8000:8000 myflaskapp\n</code></pre>"},{"location":"aulas/ctp/web/flask/deploy.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a fazer o deploy de uma aplica\u00e7\u00e3o Flask usando Gunicorn, Nginx e Docker. Esses s\u00e3o apenas alguns m\u00e9todos de deploy; h\u00e1 muitas outras ferramentas e t\u00e9cnicas que voc\u00ea pode explorar.</p>"},{"location":"aulas/ctp/web/flask/forms-post-requests%20%281%29.html","title":"Formul\u00e1rios e Requisi\u00e7\u00f5es POST","text":"<p>Os formul\u00e1rios permitem que os usu\u00e1rios enviem dados para o servidor. As requisi\u00e7\u00f5es POST s\u00e3o usadas para enviar esses dados.</p>"},{"location":"aulas/ctp/web/flask/forms-post-requests%20%281%29.html#criando-um-formulario-html","title":"Criando um Formul\u00e1rio HTML","text":"<p>Aqui est\u00e1 um exemplo de um formul\u00e1rio HTML:</p> <pre><code>&lt;form action=\"/submit\" method=\"post\"&gt;\n    &lt;label for=\"name\"&gt;Nome:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n    &lt;input type=\"submit\" value=\"Enviar\"&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests%20%281%29.html#lidando-com-requisicoes-post","title":"Lidando com Requisi\u00e7\u00f5es POST","text":"<p>No Flask, voc\u00ea pode lidar com requisi\u00e7\u00f5es POST usando <code>request.form</code>:</p> <pre><code>from flask import Flask, request\n\napp = Flask(__name__)\n\n@app.route('/submit', methods=['POST'])\ndef submit():\n    name = request.form['name']\n    return f\"Nome recebido: {name}\"\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests%20%281%29.html#protegendo-formularios-com-csrf","title":"Protegendo Formul\u00e1rios com CSRF","text":"<p>Para proteger seus formul\u00e1rios contra ataques CSRF, voc\u00ea pode usar a extens\u00e3o Flask-WTF:</p> <pre><code>pip install Flask-WTF\n</code></pre> <p>Exemplo de uso:</p> <pre><code>from flask_wtf import FlaskForm\nfrom wtforms import StringField, EnviarButton\nfrom wtforms.validators import DataRequired\n\nclass MyForm(FlaskForm):\n    name = StringField('Nome', validators=[DataRequired()])\n    submit = EnviarButton('Enviar')\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests%20%281%29.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a criar e lidar com formul\u00e1rios e requisi\u00e7\u00f5es POST no Flask. No pr\u00f3ximo tutorial, veremos como renderizar templates.</p>"},{"location":"aulas/ctp/web/flask/forms-post-requests.html","title":"Formul\u00e1rios e Requisi\u00e7\u00f5es POST","text":"<p>Os formul\u00e1rios permitem que os usu\u00e1rios enviem dados para o servidor. As requisi\u00e7\u00f5es POST s\u00e3o usadas para enviar esses dados.</p>"},{"location":"aulas/ctp/web/flask/forms-post-requests.html#criando-um-formulario-html","title":"Criando um Formul\u00e1rio HTML","text":"<p>Aqui est\u00e1 um exemplo de um formul\u00e1rio HTML:</p> <pre><code>&lt;form action=\"/submit\" method=\"post\"&gt;\n    &lt;label for=\"name\"&gt;Nome:&lt;/label&gt;\n    &lt;input type=\"text\" id=\"name\" name=\"name\"&gt;\n    &lt;input type=\"submit\" value=\"Enviar\"&gt;\n&lt;/form&gt;\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests.html#lidando-com-requisicoes-post","title":"Lidando com Requisi\u00e7\u00f5es POST","text":"<p>No Flask, voc\u00ea pode lidar com requisi\u00e7\u00f5es POST usando <code>request.form</code>:</p> <pre><code>from flask import Flask, request\n\napp = Flask(__name__)\n\n@app.route('/submit', methods=['POST'])\ndef submit():\n    name = request.form['name']\n    return f\"Nome recebido: {name}\"\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests.html#protegendo-formularios-com-csrf","title":"Protegendo Formul\u00e1rios com CSRF","text":"<p>Para proteger seus formul\u00e1rios contra ataques CSRF, voc\u00ea pode usar a extens\u00e3o Flask-WTF:</p> <pre><code>pip install Flask-WTF\n</code></pre> <p>Exemplo de uso:</p> <pre><code>from flask_wtf import FlaskForm\nfrom wtforms import StringField, EnviarButton\nfrom wtforms.validators import DataRequired\n\nclass MyForm(FlaskForm):\n    name = StringField('Nome', validators=[DataRequired()])\n    submit = EnviarButton('Enviar')\n</code></pre>"},{"location":"aulas/ctp/web/flask/forms-post-requests.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a criar e lidar com formul\u00e1rios e requisi\u00e7\u00f5es POST no Flask. No pr\u00f3ximo tutorial, veremos como renderizar templates.</p>"},{"location":"aulas/ctp/web/flask/intro-flask.html","title":"Intro flask","text":""},{"location":"aulas/ctp/web/flask/intro-flask.html#introducao-ao-flask","title":"Introdu\u00e7\u00e3o ao Flask","text":"<p>Flask \u00e9 um microframework para a web escrito em Python. \u00c9 leve e flex\u00edvel, tornando-se uma escolha popular para desenvolvedores que buscam uma ferramenta r\u00e1pida e eficiente para criar aplica\u00e7\u00f5es web.</p>"},{"location":"aulas/ctp/web/flask/intro-flask.html#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Para come\u00e7ar, voc\u00ea precisa instalar o Flask. Voc\u00ea pode fazer isso usando pip:</p> <pre><code>pip install Flask\n</code></pre>"},{"location":"aulas/ctp/web/flask/intro-flask.html#primeiro-aplicativo","title":"Primeiro Aplicativo \ud83d\ude01","text":"<p>Aqui est\u00e1 um exemplo simples de um aplicativo Flask:</p> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return \"Ol\u00e1, Flask!\"\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre> <p>Neste exemplo, criamos uma inst\u00e2ncia do Flask, definimos uma rota para a URL raiz (<code>/</code>) e uma fun\u00e7\u00e3o que retorna uma string quando essa rota \u00e9 acessada. Finalmente, executamos o aplicativo no modo de debug.</p>"},{"location":"aulas/ctp/web/flask/intro-flask.html#estrutura-de-um-projeto-flask","title":"Estrutura de um Projeto Flask","text":"<p>Uma estrutura t\u00edpica de projeto Flask pode se parecer com isto:</p> <pre><code>myproject/\n\u2502\n\u251c\u2500\u2500 app/\n\u2502   \u251c\u2500\u2500 __init__.py\n\u2502   \u251c\u2500\u2500 routes.py\n\u2502   \u2514\u2500\u2500 templates/\n\u2502       \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 venv/\n\u251c\u2500\u2500 .flaskenv\n\u251c\u2500\u2500 config.py\n\u2514\u2500\u2500 run.py\n</code></pre> <ul> <li><code>app/__init__.py</code>: Inicializa a aplica\u00e7\u00e3o Flask.</li> <li><code>app/routes.py</code>: Define as rotas da aplica\u00e7\u00e3o.</li> <li><code>app/templates/</code>: Cont\u00e9m os templates HTML.</li> <li><code>.flaskenv</code>: Configura\u00e7\u00f5es de ambiente.</li> <li><code>config.py</code>: Configura\u00e7\u00f5es da aplica\u00e7\u00e3o.</li> <li><code>run.py</code>: Script para rodar a aplica\u00e7\u00e3o.</li> </ul>"},{"location":"aulas/ctp/web/flask/intro-flask.html#conclusao","title":"Conclus\u00e3o","text":"<p>Essa foi uma introdu\u00e7\u00e3o ao Flask. Nos pr\u00f3ximos tutoriais, exploraremos como criar rotas, lidar com formul\u00e1rios, renderizar templates e conectar a um banco de dados.</p>"},{"location":"aulas/ctp/web/flask/orm.html","title":"ORM (Object-Relational Mapping)","text":"<p>ORM \u00e9 uma t\u00e9cnica que permite interagir com o banco de dados usando objetos Python em vez de SQL diretamente.</p>"},{"location":"aulas/ctp/web/flask/orm.html#sqlalchemy","title":"SQLAlchemy","text":"<p>No Flask, usamos SQLAlchemy para ORM. J\u00e1 configuramos o SQLAlchemy no tutorial anterior.</p>"},{"location":"aulas/ctp/web/flask/orm.html#criando-e-consultando-registros","title":"Criando e Consultando Registros","text":"<p>Vamos criar e consultar registros no banco de dados:</p> <pre><code>from app import db\nfrom app.models import User\n\n# Criando um novo usu\u00e1rio\nnew_user = User(username='johndoe', email='johndoe@example.com', password='senha123')\ndb.session.add(new_user)\ndb.session.commit()\n\n# Consultando usu\u00e1rios\nusers = User.query.all()\nprint(users)\n</code></pre>"},{"location":"aulas/ctp/web/flask/orm.html#atualizando-e-deletando-registros","title":"Atualizando e Deletando Registros","text":"<p>Voc\u00ea tamb\u00e9m pode atualizar e deletar registros:</p> <pre><code># Atualizando um usu\u00e1rio\nuser = User.query.filter_by(username='johndoe').first()\nuser.email = 'newemail@example.com'\ndb.session.commit()\n\n# Deletando um usu\u00e1rio\ndb.session.delete(user)\ndb.session.commit()\n</code></pre>"},{"location":"aulas/ctp/web/flask/orm.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a usar ORM com SQLAlchemy no Flask. No pr\u00f3ximo tutorial, veremos como garantir a seguran\u00e7a em aplica\u00e7\u00f5es web.</p>"},{"location":"aulas/ctp/web/flask/routes-get-requests.html","title":"Rotas e Requisi\u00e7\u00f5es GET","text":"<p>No Flask, as rotas s\u00e3o definidas para mapear URLs para fun\u00e7\u00f5es no seu c\u00f3digo. As requisi\u00e7\u00f5es GET s\u00e3o usadas para solicitar dados de um servidor.</p>"},{"location":"aulas/ctp/web/flask/routes-get-requests.html#definindo-rotas","title":"Definindo Rotas","text":"<p>Para definir uma rota, voc\u00ea usa o decorador <code>@app.route</code>:</p> <pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n@app.route('/')\ndef home():\n    return \"P\u00e1gina Inicial\"\n\n@app.route('/about')\ndef about():\n    return \"Sobre N\u00f3s\"\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"aulas/ctp/web/flask/routes-get-requests.html#parametros-de-url","title":"Par\u00e2metros de URL","text":"<p>Voc\u00ea pode adicionar par\u00e2metros \u00e0s suas rotas:</p> <pre><code>@app.route('/user/&lt;username&gt;')\ndef show_user(username):\n    return f\"Usu\u00e1rio: {username}\"\n</code></pre>"},{"location":"aulas/ctp/web/flask/routes-get-requests.html#requisicoes-get","title":"Requisi\u00e7\u00f5es GET","text":"<p>Para acessar dados enviados via URL, voc\u00ea pode usar <code>request.args</code>:</p> <pre><code>from flask import request\n\n@app.route('/search')\ndef search():\n    query = request.args.get('q')\n    return f\"Resultados da pesquisa para: {query}\"\n</code></pre>"},{"location":"aulas/ctp/web/flask/routes-get-requests.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, vimos como definir rotas e lidar com requisi\u00e7\u00f5es GET no Flask. No pr\u00f3ximo tutorial, exploraremos formul\u00e1rios e requisi\u00e7\u00f5es POST.</p>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html","title":"Seguran\u00e7a em Aplica\u00e7\u00f5es Web","text":"<p>A seguran\u00e7a \u00e9 uma preocupa\u00e7\u00e3o cr\u00edtica no desenvolvimento de aplica\u00e7\u00f5es web. Aqui est\u00e3o algumas pr\u00e1ticas recomendadas para proteger suas aplica\u00e7\u00f5es Flask.</p>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html#protecao-contra-csrf","title":"Prote\u00e7\u00e3o Contra CSRF","text":"<p>CSRF (Cross-Site Request Forgery) \u00e9 um ataque onde comandos n\u00e3o autorizados s\u00e3o transmitidos a partir de um usu\u00e1rio em quem a aplica\u00e7\u00e3o web confia. Use Flask-WTF para proteger seus formul\u00e1rios:</p> <pre><code>from flask_wtf import CSRFProtect\n\napp = Flask(__name__)\ncsrf = CSRFProtect(app)\n</code></pre>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html#seguranca-de-senhas","title":"Seguran\u00e7a de Senhas","text":"<p>Nunca armazene senhas em texto plano. Use uma biblioteca como <code>werkzeug.security</code> para hashear senhas:</p> <pre><code>from werkzeug.security import generate_password_hash, check_password_hash\n\nhashed_password = generate_password_hash('mypassword')\ncheck_password_hash(hashed_password, 'mypassword')  # Retorna True se a senha corresponder\n</code></pre>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html#configuracoes-de-seguranca","title":"Configura\u00e7\u00f5es de Seguran\u00e7a","text":"<p>Certifique-se de usar configura\u00e7\u00f5es de seguran\u00e7a apropriadas em produ\u00e7\u00e3o:</p> <pre><code>app.config['SESSION_COOKIE_SECURE'] = True\napp.config['REMEMBER_COOKIE_SECURE'] = True\napp.config['SESSION_COOKIE_HTTPONLY'] = True\napp.config['REMEMBER_COOKIE_HTTPONLY'] = True\n</code></pre>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html#autenticacao-e-autorizacao","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o","text":"<p>Use extens\u00f5es como Flask-Login para gerenciar a autentica\u00e7\u00e3o de usu\u00e1rios:</p> <pre><code>from flask_login import LoginManager\n\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = 'login'\n</code></pre>"},{"location":"aulas/ctp/web/flask/security%20%281%29.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, abordamos pr\u00e1ticas recomendadas de seguran\u00e7a para aplica\u00e7\u00f5es Flask. No pr\u00f3ximo tutorial, veremos como fazer o deploy de uma aplica\u00e7\u00e3o Flask.</p>"},{"location":"aulas/ctp/web/flask/security.html","title":"Seguran\u00e7a em Aplica\u00e7\u00f5es Web","text":"<p>A seguran\u00e7a \u00e9 uma preocupa\u00e7\u00e3o cr\u00edtica no desenvolvimento de aplica\u00e7\u00f5es web. Aqui est\u00e3o algumas pr\u00e1ticas recomendadas para proteger suas aplica\u00e7\u00f5es Flask.</p>"},{"location":"aulas/ctp/web/flask/security.html#protecao-contra-csrf","title":"Prote\u00e7\u00e3o Contra CSRF","text":"<p>CSRF (Cross-Site Request Forgery) \u00e9 um ataque onde comandos n\u00e3o autorizados s\u00e3o transmitidos a partir de um usu\u00e1rio em quem a aplica\u00e7\u00e3o web confia. Use Flask-WTF para proteger seus formul\u00e1rios:</p> <pre><code>from flask_wtf import CSRFProtect\n\napp = Flask(__name__)\ncsrf = CSRFProtect(app)\n</code></pre>"},{"location":"aulas/ctp/web/flask/security.html#seguranca-de-senhas","title":"Seguran\u00e7a de Senhas","text":"<p>Nunca armazene senhas em texto plano. Use uma biblioteca como <code>werkzeug.security</code> para hashear senhas:</p> <pre><code>from werkzeug.security import generate_password_hash, check_password_hash\n\nhashed_password = generate_password_hash('mypassword')\ncheck_password_hash(hashed_password, 'mypassword')  # Retorna True se a senha corresponder\n</code></pre>"},{"location":"aulas/ctp/web/flask/security.html#configuracoes-de-seguranca","title":"Configura\u00e7\u00f5es de Seguran\u00e7a","text":"<p>Certifique-se de usar configura\u00e7\u00f5es de seguran\u00e7a apropriadas em produ\u00e7\u00e3o:</p> <pre><code>app.config['SESSION_COOKIE_SECURE'] = True\napp.config['REMEMBER_COOKIE_SECURE'] = True\napp.config['SESSION_COOKIE_HTTPONLY'] = True\napp.config['REMEMBER_COOKIE_HTTPONLY'] = True\n</code></pre>"},{"location":"aulas/ctp/web/flask/security.html#autenticacao-e-autorizacao","title":"Autentica\u00e7\u00e3o e Autoriza\u00e7\u00e3o","text":"<p>Use extens\u00f5es como Flask-Login para gerenciar a autentica\u00e7\u00e3o de usu\u00e1rios:</p> <pre><code>from flask_login import LoginManager\n\nlogin_manager = LoginManager()\nlogin_manager.init_app(app)\nlogin_manager.login_view = 'login'\n</code></pre>"},{"location":"aulas/ctp/web/flask/security.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, abordamos pr\u00e1ticas recomendadas de seguran\u00e7a para aplica\u00e7\u00f5es Flask. No pr\u00f3ximo tutorial, veremos como fazer o deploy de uma aplica\u00e7\u00e3o Flask.</p>"},{"location":"aulas/ctp/web/flask/template-rendering%20%281%29.html","title":"Renderiza\u00e7\u00e3o de Templates","text":"<p>O Flask usa o mecanismo de templates Jinja2 para renderizar templates HTML. Isso permite que voc\u00ea crie p\u00e1ginas HTML din\u00e2micas.</p>"},{"location":"aulas/ctp/web/flask/template-rendering%20%281%29.html#criando-um-template","title":"Criando um Template","text":"<p>Crie um arquivo <code>index.html</code> no diret\u00f3rio <code>templates</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Home&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bem-vindo, {{ name }}!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering%20%281%29.html#renderizando-um-template","title":"Renderizando um Template","text":"<p>Use <code>render_template</code> para renderizar o template:</p> <pre><code>from flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/&lt;name&gt;')\ndef home(name):\n    return render_template('index.html', name=name)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering%20%281%29.html#templates-heredados","title":"Templates Heredados","text":"<p>Voc\u00ea pode criar layouts base e herdar de outros templates:</p> <p><code>base.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;{% block title %}{% endblock %}&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    {% block content %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>index.html</code>:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block title %}Home{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Bem-vindo, {{ name }}!&lt;/h1&gt;\n{% endblock %}\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering%20%281%29.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a renderizar templates no Flask. No pr\u00f3ximo tutorial, exploraremos como conectar sua aplica\u00e7\u00e3o a um banco de dados.</p>"},{"location":"aulas/ctp/web/flask/template-rendering.html","title":"Renderiza\u00e7\u00e3o de Templates","text":"<p>O Flask usa o mecanismo de templates Jinja2 para renderizar templates HTML. Isso permite que voc\u00ea crie p\u00e1ginas HTML din\u00e2micas.</p>"},{"location":"aulas/ctp/web/flask/template-rendering.html#criando-um-template","title":"Criando um Template","text":"<p>Crie um arquivo <code>index.html</code> no diret\u00f3rio <code>templates</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;Home&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Bem-vindo, {{ name }}!&lt;/h1&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering.html#renderizando-um-template","title":"Renderizando um Template","text":"<p>Use <code>render_template</code> para renderizar o template:</p> <pre><code>from flask import Flask, render_template\n\napp = Flask(__name__)\n\n@app.route('/&lt;name&gt;')\ndef home(name):\n    return render_template('index.html', name=name)\n\nif __name__ == '__main__':\n    app.run(debug=True)\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering.html#templates-heredados","title":"Templates Heredados","text":"<p>Voc\u00ea pode criar layouts base e herdar de outros templates:</p> <p><code>base.html</code>:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"en\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;title&gt;{% block title %}{% endblock %}&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    {% block content %}{% endblock %}\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <p><code>index.html</code>:</p> <pre><code>{% extends \"base.html\" %}\n\n{% block title %}Home{% endblock %}\n\n{% block content %}\n&lt;h1&gt;Bem-vindo, {{ name }}!&lt;/h1&gt;\n{% endblock %}\n</code></pre>"},{"location":"aulas/ctp/web/flask/template-rendering.html#conclusao","title":"Conclus\u00e3o","text":"<p>Neste tutorial, aprendemos a renderizar templates no Flask. No pr\u00f3ximo tutorial, exploraremos como conectar sua aplica\u00e7\u00e3o a um banco de dados.</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html","title":"Data scraping requests","text":""},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#acessando-a-www-com-python","title":"Acessando a WWW com Python","text":"<p>Existem v\u00e1rias bibliotecas em Python para interagir com o HTTP. <code>requests</code> e <code>urllib</code> s\u00e3o as duas bibliotecas que nos interessam por causa de seus recursos aprofundados, v\u00e1rias fun\u00e7\u00f5es para lidar com comunica\u00e7\u00e3o HTTP, documenta\u00e7\u00e3o de f\u00e1cil leitura e popularidade.</p> <p>Para come\u00e7ar a acessar a <code>WWW</code> com Python usando essas bibliotecas, vamos verificar se temos todos os recursos necess\u00e1rios instalados. Ccome\u00e7aremos a configurar as coisas, <code>criar um ambiente virtual</code>, <code>instalar bibliotecas no ambiente criado</code> e <code>acessar a web usando bibliotecas Python</code>.</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#biblioteca-requests","title":"Biblioteca Requests","text":"<p>A biblioteca requests \u00e9 uma das ferramentas mais populares em Python para realizar requisi\u00e7\u00f5es HTTP de forma simples e intuitiva. Vamos explorar os conceitos b\u00e1sicos e como realizar as principais opera\u00e7\u00f5es<code>HTTP com requests</code>.</p> <p></p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Caso seja necess\u00e1rio \u00e9 possivel realizar a instala\u00e7\u00e3o usando o gerenciador de pacotes do python, <code>pip</code>.</p> <pre><code>pip install requests\n</code></pre> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#metodos-http-com-requests","title":"M\u00e9todos HTTP com requests","text":"<p>Os <code>m\u00e9todos HTTP</code> s\u00e3o os verbos que indicam a a\u00e7\u00e3o que voc\u00ea deseja realizar em um recurso na web. Os mais comuns s\u00e3o:</p> <ul> <li><code>GET</code>: Solicita a representa\u00e7\u00e3o de um recurso.</li> <li><code>POST</code>: Envia dados para serem processados por um recurso.</li> <li><code>PUT</code>: Atualiza um recurso existente ou cria um novo se n\u00e3o existir.</li> <li><code>DELETE</code>: Remove um recurso.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#realizando-uma-requisicao-get","title":"Realizando uma <code>Requisi\u00e7\u00e3o GET</code>","text":"<p>Uma requisi\u00e7\u00e3o <code>GET</code> \u00e9 usada para solicitar dados de um recurso espec\u00edfico. Com requests, voc\u00ea pode realizar uma requisi\u00e7\u00e3o GET da seguinte maneira:</p> <pre><code>import requests\n\nresponse = requests.get('https://requests.readthedocs.io/')\nprint(response.text)\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#parametros-de-url","title":"Par\u00e2metros de URL","text":"<p>\u00c9 comum enviar par\u00e2metros na URL de uma requisi\u00e7\u00e3o GET. Com requests, voc\u00ea pode passar esses par\u00e2metros como um dicion\u00e1rio:</p> <pre><code>import requests\n\n# Definindo os par\u00e2metros da consulta\nparams = {'userId': 1}\n\n# Enviando uma requisi\u00e7\u00e3o GET para a API\nresponse = requests.get('https://jsonplaceholder.typicode.com/posts', params=params)\n\n# Imprimindo a URL com os par\u00e2metros de consulta\nprint(response.url)\n\n# Imprimindo o conte\u00fado da resposta (os primeiros 5 posts do usu\u00e1rio com ID 1)\nprint(response.json())\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#cabecalhos","title":"Cabe\u00e7alhos","text":"<p>abe\u00e7alhos HTTP s\u00e3o usados para fornecer informa\u00e7\u00f5es adicionais sobre a requisi\u00e7\u00e3o ou a resposta. Eles podem incluir detalhes como o tipo de conte\u00fado esperado, o agente do usu\u00e1rio (User-Agent), informa\u00e7\u00f5es de autentica\u00e7\u00e3o, entre outros. Com a biblioteca requests, voc\u00ea pode personalizar os cabe\u00e7alhos da sua requisi\u00e7\u00e3o de maneira simples.</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#adicionando-cabecalhos-a-requisicao","title":"Adicionando Cabe\u00e7alhos \u00e0 Requisi\u00e7\u00e3o","text":"<p>Para adicionar cabe\u00e7alhos \u00e0 sua requisi\u00e7\u00e3o, voc\u00ea pode passar um dicion\u00e1rio contendo os cabe\u00e7alhos desejados para o par\u00e2metro headers da fun\u00e7\u00e3o de requisi\u00e7\u00e3o. Veja um exemplo:</p> <pre><code>import requests\n\n# Definindo o cabe\u00e7alho da requisi\u00e7\u00e3o\nheaders = {\n    'User-Agent': 'MeuApp/1.0',\n    'Accept': 'application/json'\n}\n\n# Enviando uma requisi\u00e7\u00e3o GET para a API\nresponse = requests.get('https://jsonplaceholder.typicode.com/posts/1', headers=headers)\n\n# Imprimindo o conte\u00fado da resposta\nprint(response.json())\n</code></pre> <p>Neste exemplo, estamos enviando tr\u00eas cabe\u00e7alhos: <code>User-Agent</code>, <code>Accept</code>. O User-Agent identifica o cliente que est\u00e1 fazendo a requisi\u00e7\u00e3o, o Accept indica o tipo de conte\u00fado que o cliente espera receber. Existem outros parametros que podem ser utilizados.</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#acessando-o-conteudo-da-resposta","title":"Acessando o Conte\u00fado da Resposta","text":"<p>O conte\u00fado da resposta pode ser acessado de v\u00e1rias formas, dependendo do tipo de dados esperados:</p> <ul> <li><code>Texto</code>: Para obter o conte\u00fado da resposta como uma string, voc\u00ea pode usar o atributo <code>.text</code>.</li> <li><code>Bytes</code>: Se voc\u00ea precisa do conte\u00fado bruto da resposta em bytes, pode usar o atributo <code>.content</code>.</li> <li><code>JSON</code>: Para respostas que retornam dados em formato JSON, voc\u00ea pode usar o m\u00e9todo <code>.json()</code> para decodificar automaticamente o JSON para um objeto Python (geralmente um dicion\u00e1rio ou uma lista).</li> </ul> <pre><code>import requests\n\nresponse = requests.get('https://www.uol.com')\n\nprint(response.url)\nprint(\"\")\nprint(response.text)\nprint(\"\")\nprint(response.content)\n</code></pre> <p>A resposta de uma requisi\u00e7\u00e3o HTTP tamb\u00e9m cont\u00e9m cabe\u00e7alhos. Com a biblioteca requests, voc\u00ea pode acessar os cabe\u00e7alhos da resposta atrav\u00e9s do atributo .headers do objeto de resposta. Os cabe\u00e7alhos da resposta s\u00e3o retornados como um dicion\u00e1rio:</p> <p><pre><code>import requests\n\nresponse = requests.get('https://www.uol.com')\nprint(response.headers)\n</code></pre> Voc\u00ea pode acessar um cabe\u00e7alho espec\u00edfico da resposta da mesma forma que acessaria um valor em um dicion\u00e1rio:</p> <pre><code>content_type = response.headers['Content-Type']\nprint(content_type)\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#status-code-e-verificacao-de-erros","title":"Status Code e Verifica\u00e7\u00e3o de Erros","text":"<p>O <code>status code</code> da resposta indica o resultado da requisi\u00e7\u00e3o HTTP. Voc\u00ea pode acessar o status code atrav\u00e9s do atributo <code>.status_code</code> do objeto de resposta:</p> <pre><code>import requests\n\nresponse = requests.get('https://www.uol.com')\nprint(response.status_code)\n</code></pre> <p>\u00c9 uma boa pr\u00e1tica <code>verificar</code> se a requisi\u00e7\u00e3o foi <code>bem-sucedida</code> antes de tentar acessar o conte\u00fado da resposta. Voc\u00ea pode fazer isso verificando se o status code est\u00e1 na faixa de sucesso (200-299):</p> <pre><code>if response.status_code == 200:\n    print(\"Requisi\u00e7\u00e3o bem-sucedida!\")\n    # Processar a resposta\nelse:\n    print(\"Erro na requisi\u00e7\u00e3o:\", response.status_code)\n</code></pre> <p>Quest\u00e3o 1</p> <p>Utilize a biblioteca <code>requests</code> para fazer uma requisi\u00e7\u00e3o GET ao seguinte endpoint da API de Chuck Norris e exiba a piada recebida:</p> <ul> <li> <p>Endpoint: <code>https://api.chucknorris.io/jokes/random</code></p> </li> <li> <p>Dica: acesse o endpoint diretamente pelo browser e avalie a estrutura da resposta, verifique se \u00e9 json ou html a resposta. Nesta estrutura onde est\u00e1 a piada?</p> </li> </ul> <p>Answer</p> <p>Para resolver esta quest\u00e3o, voc\u00ea pode usar o seguinte c\u00f3digo:</p> <pre><code>import requests\n\nresponse = requests.get(\"https://api.chucknorris.io/jokes/random\")\npiada = response.json()['value']\nprint(\"Piada:\", piada)\n</code></pre> <p>Quest\u00e3o 2</p> <p>Crie uma fun\u00e7\u00e3o em Python que utilize a biblioteca <code>requests</code> para buscar informa\u00e7\u00f5es sobre um Pok\u00e9mon espec\u00edfico na Pok\u00e9API. A fun\u00e7\u00e3o deve receber o nome do Pok\u00e9mon como argumento e retornar sua altura e peso.</p> <ul> <li> <p>Exemplo de endpoint: <code>https://pokeapi.co/api/v2/pokemon/pikachu</code></p> </li> <li> <p>Dica: nesse exemplo, <code>pikachu</code> \u00e9 o nome do pokemon e deve ser um parametro da fun\u00e7\u00e3o que ser\u00e1 substituido quando a fun\u00e7\u00e3o for chamada.</p> </li> </ul> <p>Answer</p> <p>Uma poss\u00edvel solu\u00e7\u00e3o para esta quest\u00e3o \u00e9 a seguinte:</p> <pre><code>import requests\n\ndef get_pokemon_info(nome):\n    url = f\"https://pokeapi.co/api/v2/pokemon/{nome}\"\n    response = requests.get(url)\n    data = response.json()\n    altura = data['height']\n    peso = data['weight']\n    return altura, peso\n\nnome = \"pikachu\"\naltura, peso = get_pokemon_info(nome)\nprint(f\"{nome} tem altura de {altura} e peso de {peso}.\")\n</code></pre> <p>Quest\u00e3o 2 - Varia\u00e7\u00e3o</p> <p>Crie uma fun\u00e7\u00e3o em Python que utilize a biblioteca <code>requests</code> para buscar informa\u00e7\u00f5es sobre um Pok\u00e9mon espec\u00edfico na Pok\u00e9API. A fun\u00e7\u00e3o deve receber o RM (Registro do Aluno) do aluno como argumento, somar os n\u00fameros do RM, e retornar as informa\u00e7\u00f5es do Pok\u00e9mon correspondente ao resultado da soma.</p> <ul> <li>Exemplo de endpoint: <code>https://pokeapi.co/api/v2/pokemon/{id}</code></li> <li>Dica: Use o resultado da soma dos n\u00fameros do RM para substituir o <code>{id}</code> no endpoint.</li> </ul> <p>Progress</p> <p>Continuar...</p>"},{"location":"aulas/ctp/web/webscraping/data-scraping-requests.html#enviando-uma-requisicao-post","title":"Enviando uma Requisi\u00e7\u00e3o POST","text":"<p>Uma requisi\u00e7\u00e3o <code>POST</code> \u00e9 usada para enviar dados para um servidor para criar/atualizar um recurso. Em algumas requisi\u00e7\u00f5es, como POST ou PUT, voc\u00ea pode precisar enviar um corpo com os dados. Com requests, voc\u00ea pode enviar o <code>corpo da requisi\u00e7\u00e3o</code> de v\u00e1rias formas, incluindo como <code>JSON</code>:</p> <pre><code>import requests\n\ndef translate_text_libretranslate(text, target_language='pt'):\n    url = 'https://libretranslate.de/translate'\n    params = {\n        'q': text,\n        'source': 'en',\n        'target': target_language,\n        'format': 'text'\n    }\n    response = requests.post(url, data=params)\n    if response.status_code == 200:\n        translated_text = response.json()['translatedText']\n        print(f\"Texto original: {text}\")\n        print(f\"Texto traduzido: {translated_text}\")\n    else:\n        print(\"Erro na tradu\u00e7\u00e3o:\", response.status_code)\n\n# Exemplo de uso\ntranslate_text_libretranslate(\"Hello, how are you?\")\n</code></pre> <p>Quest\u00e3o</p> <p>Utilize a biblioteca <code>requests</code> para fazer uma requisi\u00e7\u00e3o GET \u00e0 API de piadas do Chuck Norris, obtendo uma piada em ingl\u00eas. Em seguida, use a API do LibreTranslate para traduzir a piada para o portugu\u00eas. Exiba a piada original e a traduzida.</p> <ul> <li>API de piadas do Chuck Norris: <code>https://api.chucknorris.io/jokes/random</code></li> <li>API do LibreTranslate: <code>https://libretranslate.de/translate</code></li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html","title":"Intro webscraping","text":""},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#introducao-ao-web-scraping","title":"Introdu\u00e7\u00e3o ao Web Scraping","text":"<p><code>Web scraping</code> \u00e9 uma t\u00e9cnica utilizada para <code>extra\u00e7\u00e3o, c\u00f3pia, triagem ou coleta de dados de websites</code>. Ela envolve fazer requisi\u00e7\u00f5es a um servidor web para obter o conte\u00fado de uma p\u00e1gina e, em seguida, extrair informa\u00e7\u00f5es espec\u00edficas dessa p\u00e1gina.  A cada dia vemos mais servi\u00e7os sendo baseados na Web, isso faz com que exista uma procura crescente de dados brutos. Os dados s\u00e3o um requisito b\u00e1sico nas \u00e1reas de <code>ci\u00eancia e tecnologia</code> e <code>gest\u00e3o</code>. Os dados coletados s\u00e3o processados, analisados, comparados com dados hist\u00f3ricos e treinados usando t\u00e9cnicas de <code>Machine Learning</code> (ML) para obter estimativas, informa\u00e7\u00f5es e adquirir mais conhecimento.</p> <p></p>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#por-que-usar-web-scraping","title":"Por que usar Web Scraping?","text":"<p>O web scraping pode ser usado por v\u00e1rias raz\u00f5es, incluindo:</p> <ul> <li>Coletar dados para an\u00e1lise de mercado ou pesquisa.</li> <li>Monitorar pre\u00e7os de produtos em diferentes sites para compara\u00e7\u00e3o.</li> <li>Extrair informa\u00e7\u00f5es de contato de empresas para fins de marketing.</li> <li>Agregar conte\u00fado de diferentes fontes para um site ou aplicativo.</li> <li>Automatizar a coleta de dados para relat\u00f3rios regulares.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#consideracoes-eticas-e-legais","title":"Considera\u00e7\u00f5es \u00c9ticas e Legais","text":"<p>Existem alguns fatores legais que tamb\u00e9m devem ser considerados antes de executar tarefas de scraping. A maioria dos sites cont\u00e9m p\u00e1ginas como <code>Pol\u00edtica de Privacidade</code>, <code>Sobre N\u00f3s</code> e <code>Termos e Condi\u00e7\u00f5es</code>, onde est\u00e3o dispon\u00edveis informa\u00e7\u00f5es sobre a\u00e7\u00f5es legais e conte\u00fado proibido, bem como informa\u00e7\u00f5es gerais. \u00c9 dever \u00e9tico do desenvolvedor cumprir estes termos e condi\u00e7\u00f5es antes de planejar qualquer atividade de scraping em um site. </p> <p>Ao fazer web scraping, \u00e9 importante considerar quest\u00f5es \u00e9ticas e legais:</p> <ul> <li>Respeite os Termos de Uso: Muitos sites t\u00eam termos de uso que pro\u00edbem explicitamente o web scraping. \u00c9 importante ler e respeitar esses termos antes de extrair dados.</li> <li>N\u00e3o sobrecarregue o servidor: Fazer muitas requisi\u00e7\u00f5es em um curto per\u00edodo de tempo pode sobrecarregar o servidor do site. \u00c9 uma boa pr\u00e1tica limitar a frequ\u00eancia das requisi\u00e7\u00f5es para n\u00e3o afetar negativamente o desempenho do site.</li> <li>Prote\u00e7\u00e3o de Dados: Esteja ciente das leis de prote\u00e7\u00e3o de dados, como o GDPR na Europa, que imp\u00f5em restri\u00e7\u00f5es sobre a coleta e o uso de dados pessoais.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#protocolo-http","title":"Protocolo HTTP","text":"<p>O protocolo HTTP (Hypertext Transfer Protocol) \u00e9 o fundamento da comunica\u00e7\u00e3o de dados na web. Ele define um conjunto de regras para a transfer\u00eancia de arquivos (textos, imagens, som, v\u00eddeo e outros dados) na internet.</p> <p>O HTTP \u00e9 um protocolo baseado em solicita\u00e7\u00e3o-resposta, onde o cliente envia uma solicita\u00e7\u00e3o ao servidor e espera uma resposta.</p> <p></p>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#requisicao-http-request","title":"Requisi\u00e7\u00e3o HTTP (Request)","text":"<p>Uma requisi\u00e7\u00e3o HTTP \u00e9 uma mensagem enviada pelo cliente ao servidor solicitando uma a\u00e7\u00e3o, como obter um recurso (uma p\u00e1gina web, por exemplo) ou enviar dados (como em um formul\u00e1rio). Uma requisi\u00e7\u00e3o HTTP consiste em:</p> <ul> <li><code>M\u00e9todo</code>: Indica a a\u00e7\u00e3o desejada (GET, POST, PUT, DELETE, etc.). O m\u00e9todo GET \u00e9 usado para solicitar um recurso, enquanto o POST \u00e9 usado para enviar dados ao servidor.</li> <li><code>URL</code>: O endere\u00e7o do recurso no servidor.</li> <li><code>Cabe\u00e7alhos</code>: Fornecem informa\u00e7\u00f5es adicionais sobre a requisi\u00e7\u00e3o, como o tipo de conte\u00fado esperado na resposta.</li> <li><code>Corpo</code>: Opcionalmente, cont\u00e9m dados enviados ao servidor (principalmente usado com o m\u00e9todo POST).</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#resposta-http-response","title":"Resposta HTTP (Response)","text":"<p>Uma resposta HTTP \u00e9 a mensagem enviada pelo servidor ao cliente em resposta a uma requisi\u00e7\u00e3o. Ela cont\u00e9m:</p> <ul> <li><code>C\u00f3digo de Status</code>: Um n\u00famero de tr\u00eas d\u00edgitos que indica o resultado da requisi\u00e7\u00e3o. Por exemplo, 200 significa sucesso, 404 indica que o recurso n\u00e3o foi encontrado, e 500 indica um erro interno do servidor.</li> <li><code>Cabe\u00e7alhos</code>: Informa\u00e7\u00f5es sobre a resposta, como o tipo de conte\u00fado e a data de cria\u00e7\u00e3o.</li> <li><code>Corpo</code>: O conte\u00fado do recurso solicitado, como o HTML de uma p\u00e1gina web.###</li> </ul> <p>Tip</p> <p>Os <code>c\u00f3digos de status HTTP</code> s\u00e3o n\u00fameros de tr\u00eas d\u00edgitos que indicam o resultado de uma requisi\u00e7\u00e3o HTTP. Eles s\u00e3o divididos em cinco categorias:</p> <ul> <li><code>1xx: Informacional</code><ul> <li>100 Continue: Indica que o servidor recebeu os cabe\u00e7alhos da requisi\u00e7\u00e3o e o cliente deve continuar enviando o corpo da requisi\u00e7\u00e3o.</li> </ul> </li> <li><code>2xx: Sucesso</code><ul> <li>200 OK: A requisi\u00e7\u00e3o foi bem-sucedida e o servidor retorna o recurso solicitado.</li> <li>201 Created: Um recurso foi criado com sucesso no servidor (por exemplo, ap\u00f3s uma requisi\u00e7\u00e3o POST).</li> <li>204 No Content: A requisi\u00e7\u00e3o foi bem-sucedida, mas o servidor n\u00e3o tem conte\u00fado para enviar na resposta.</li> </ul> </li> <li><code>3xx: Redirecionamento</code><ul> <li>301 Moved Permanently: O recurso solicitado foi movido permanentemente para uma nova URL.</li> <li>302 Found: O recurso solicitado foi temporariamente movido para uma nova URL.</li> <li>304 Not Modified: O recurso solicitado n\u00e3o foi modificado desde a \u00faltima requisi\u00e7\u00e3o.</li> </ul> </li> <li><code>4xx: Erro do Cliente</code><ul> <li>400 Bad Request: A requisi\u00e7\u00e3o n\u00e3o pode ser processada pelo servidor devido a um erro de sintaxe.</li> <li>401 Unauthorized: A autentica\u00e7\u00e3o \u00e9 necess\u00e1ria para acessar o recurso solicitado.</li> <li>403 Forbidden: O servidor entende a requisi\u00e7\u00e3o, mas se recusa a autoriz\u00e1-la.</li> <li>404 Not Found: O recurso solicitado n\u00e3o foi encontrado no servidor.</li> <li>429 Too Many Requests: O cliente enviou muitas requisi\u00e7\u00f5es em um determinado per\u00edodo de tempo.</li> </ul> </li> <li><code>5xx: Erro do Servidor</code><ul> <li>500 Internal Server Error: Ocorreu um erro gen\u00e9rico no servidor.</li> <li>501 Not Implemented: O servidor n\u00e3o suporta a funcionalidade necess\u00e1ria para atender \u00e0 requisi\u00e7\u00e3o.</li> <li>503 Service Unavailable: O servidor est\u00e1 temporariamente indispon\u00edvel, geralmente devido a manuten\u00e7\u00e3o ou sobrecarga.</li> </ul> </li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#html","title":"HTML","text":"<p><code>HTML</code> (HyperText Markup Language) \u00e9 a linguagem de marca\u00e7\u00e3o usada para estruturar e apresentar conte\u00fado na web. Ela define a estrutura de uma p\u00e1gina web usando uma s\u00e9rie de elementos, representados por <code>tags</code>. Cada tag tem um prop\u00f3sito espec\u00edfico e define uma parte do conte\u00fado ou da estrutura da p\u00e1gina.</p>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#tags-comuns-no-html","title":"Tags Comuns no HTML","text":"<p>Aqui est\u00e3o algumas das <code>tags HTML mais comumente encontradas</code> e que s\u00e3o frequentemente alvo no web scraping:</p> <ul> <li><code>&lt;html&gt;</code>: O elemento raiz que cont\u00e9m todo o conte\u00fado da p\u00e1gina.</li> <li><code>&lt;head&gt;</code>: Cont\u00e9m metadados, links para folhas de estilo e scripts.</li> <li><code>&lt;title&gt;</code>: Define o t\u00edtulo da p\u00e1gina, que \u00e9 exibido na aba do navegador.</li> <li><code>&lt;body&gt;</code>: Cont\u00e9m o conte\u00fado principal da p\u00e1gina, como texto, imagens e links.</li> <li><code>&lt;h1&gt;</code>, <code>&lt;h2&gt;</code>, ..., <code>&lt;h6&gt;</code>: Tags de cabe\u00e7alho, usadas para t\u00edtulos e subt\u00edtulos. <code>&lt;h1&gt;</code> \u00e9 o mais importante e <code>&lt;h6&gt;</code> \u00e9 o menos importante.</li> <li><code>&lt;p&gt;</code>: Define um par\u00e1grafo de texto.</li> <li><code>&lt;a&gt;</code>: Define um hiperlink. O atributo <code>href</code> especifica o URL do link.</li> <li><code>&lt;ul&gt;</code>, <code>&lt;ol&gt;</code>, <code>&lt;li&gt;</code>: Criam listas n\u00e3o ordenadas (com marcadores) e ordenadas (numeradas), respectivamente. <code>&lt;li&gt;</code> define um item da lista.</li> <li><code>&lt;div&gt;</code>: Um cont\u00eainer gen\u00e9rico para agrupar conte\u00fado e aplicar estilos.</li> <li><code>&lt;span&gt;</code>: Similar ao <code>&lt;div&gt;</code>, mas usado para agrupar elementos inline.</li> <li><code>&lt;table&gt;</code>, <code>&lt;tr&gt;</code>, <code>&lt;th&gt;</code>, <code>&lt;td&gt;</code>: Estruturam tabelas. <code>&lt;table&gt;</code> define a tabela, <code>&lt;tr&gt;</code> uma linha, <code>&lt;th&gt;</code> uma c\u00e9lula de cabe\u00e7alho e <code>&lt;td&gt;</code> uma c\u00e9lula de dados.</li> <li><code>&lt;img&gt;</code>: Incorpora uma imagem. O atributo <code>src</code> especifica o caminho da imagem.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#estrutura-basica-do-html","title":"Estrutura B\u00e1sica do HTML","text":"<p>Um documento HTML t\u00edpico tem a seguinte estrutura:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;T\u00edtulo da P\u00e1gina&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;h1&gt;Cabe\u00e7alho Principal&lt;/h1&gt;\n    &lt;p&gt;Este \u00e9 um par\u00e1grafo de exemplo.&lt;/p&gt;\n    &lt;a href=\"https://exemplo.com\"&gt;Link para Exemplo&lt;/a&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ul> <li><code>&lt;!DOCTYPE html&gt;</code>: Declara o tipo do documento (neste caso, HTML5).</li> <li><code>&lt;html&gt;</code>: Elemento raiz que envolve todo o conte\u00fado da p\u00e1gina.</li> <li><code>&lt;head&gt;</code>: Cont\u00e9m metadados e links para recursos externos (como CSS).</li> <li><code>&lt;title&gt;</code>: Define o t\u00edtulo da p\u00e1gina, que \u00e9 exibido na aba do navegador.</li> <li><code>&lt;body&gt;</code>: Cont\u00e9m o conte\u00fado principal da p\u00e1gina, como texto, imagens e links.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#seletores-html","title":"Seletores HTML","text":"<p>Para fazer web scraping, \u00e9 essencial entender como selecionar elementos espec\u00edficos do HTML. Os seletores mais comuns incluem:</p> <ul> <li><code>Seletores de Tag</code>: Selecionam elementos pelo nome da tag, como <code>p</code> para par\u00e1grafos ou <code>a</code> para links.</li> <li><code>Seletores de ID</code>: Selecionam um elemento \u00fanico com um ID espec\u00edfico, usando o s\u00edmbolo <code>#</code>. Por exemplo, <code>#meu-id</code> seleciona o elemento com <code>id=\"meu-id\"</code>.</li> <li><code>Seletores de Classe</code>: Selecionam todos os elementos com uma classe espec\u00edfica, usando o ponto <code>.</code>. Por exemplo, <code>.minha-classe</code> seleciona todos os elementos com <code>class=\"minha-classe\"</code>.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#ferramentas-do-desenvolvedor-e-web-scraping","title":"Ferramentas do Desenvolvedor e Web Scraping","text":"<p>Navegadores web s\u00e3o utilizados para intera\u00e7\u00e3o gr\u00e1fica cliente-servidor para explorar conte\u00fados da web. A barra de endere\u00e7os do navegador \u00e9 fornecida com o endere\u00e7o web ou URL, a URL solicitada \u00e9 comunicada ao servidor (host), e uma resposta \u00e9 recebida, o que significa que \u00e9 carregada pelo navegador. Esta resposta obtida ou fonte da p\u00e1gina pode ser explorada e pesquisada em formato bruto para encontrar o conte\u00fado desejado.</p> <p>Tip</p> <p>Voc\u00ea \u00e9 livre para escolher qual navegador web deseja usar. A maioria dos navegadores web exibir\u00e1 o mesmo conte\u00fado ou conte\u00fado similar.</p> <p>As Ferramentas do Desenvolvedor (DevTools) s\u00e3o recursos integrados na maioria dos navegadores modernos que desempenham um papel fundamental no desenvolvimento web e no web scraping. Elas permitem que desenvolvedores e analistas de dados inspecionem, editem e depurem o HTML, CSS e JavaScript de uma p\u00e1gina, al\u00e9m de oferecerem funcionalidades para monitorar o desempenho e analisar as requisi\u00e7\u00f5es e respostas HTTP.</p>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#acessando-o-devtools","title":"Acessando o DevTools","text":"<p>Para acessar o DevTools, voc\u00ea pode usar o menu principal do navegador ou atalhos de teclado:</p> <ul> <li>No Google Chrome e no Firefox, voc\u00ea pode abrir o DevTools clicando com o bot\u00e3o direito em qualquer parte da p\u00e1gina e selecionando \"Inspecionar\" ou pressionando <code>Ctrl + Shift + I</code> (ou <code>Cmd + Opt + I</code> no macOS).</li> <li>Outra op\u00e7\u00e3o \u00e9 acessar o menu do navegador, selecionar \"Mais ferramentas\" ou \"Ferramentas do desenvolvedor\" e clicar em \"Ferramentas do desenvolvedor\".</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#exemplo","title":"Exemplo","text":"<ol> <li>Abra https://www.google.com no seu navegador web (ou qualquer outra URL).</li> <li>Ap\u00f3s a p\u00e1gina ser carregada completamente, clique com o bot\u00e3o direito em qualquer se\u00e7\u00e3o da p\u00e1gina. Deve aparecer a op\u00e7\u00e3o \"Inspecionar\".</li> </ol>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#utilizando-o-devtools-para-web-scraping","title":"Utilizando o DevTools para Web Scraping","text":"<p>O DevTools \u00e9 especialmente \u00fatil para web scraping, pois permite que voc\u00ea:</p> <p></p> <ul> <li>Visualize a Estrutura da P\u00e1gina: Na aba \"Elementos\" (ou \"Inspector\" no Firefox), voc\u00ea pode visualizar a \u00e1rvore DOM da p\u00e1gina, o que \u00e9 \u00fatil para entender a estrutura do HTML e identificar os seletores necess\u00e1rios para extrair dados.</li> <li>Analise Requisi\u00e7\u00f5es e Respostas HTTP: Na aba \"Rede\", voc\u00ea pode ver todas as requisi\u00e7\u00f5es e respostas HTTP feitas pela p\u00e1gina, incluindo detalhes como o m\u00e9todo HTTP, c\u00f3digo de status, cabe\u00e7alhos e corpo da resposta. Isso \u00e9 crucial para entender como os dados s\u00e3o carregados e como voc\u00ea pode simular requisi\u00e7\u00f5es no seu script de scraping.</li> <li>Teste e Depure JavaScript: A aba \"Console\" permite executar c\u00f3digo JavaScript diretamente no navegador, o que pode ser \u00fatil para testar snippets de c\u00f3digo que voc\u00ea planeja usar no seu script de scraping.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/intro-webscraping.html#dicas-importantes","title":"Dicas Importantes","text":"<ul> <li>Se voc\u00ea est\u00e1 procurando por conte\u00fado espec\u00edfico na fonte da p\u00e1gina ou nos recursos carregados, utilize os campos de pesquisa e filtro dispon\u00edveis no DevTools para localizar rapidamente o que voc\u00ea precisa.</li> <li>Ao inspecionar elementos ou analisar requisi\u00e7\u00f5es de rede, esteja atento a dados din\u00e2micos ou conte\u00fado carregado via JavaScript, pois eles podem n\u00e3o estar imediatamente vis\u00edveis na fonte HTML est\u00e1tica da p\u00e1gina.</li> </ul>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html","title":"Scraping beautifulsoup","text":""},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#web-scraping-com-beautiful-soup","title":"Web Scraping com Beautiful Soup","text":""},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#introducao","title":"Introdu\u00e7\u00e3o","text":"<p>Vamo utilizar a biblioteca <code>Beautiful Soup</code> para realizar raspagem de dados (web scraping) em Python. Beautiful Soup \u00e9 uma biblioteca que facilita extrair informa\u00e7\u00f5es de p\u00e1ginas web de maneira eficiente e r\u00e1pida, ela ir\u00e1 nos ajudar em uma etapa importante de <code>parse</code> para transformar os dados recebidos pelo requests. </p>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#instalacao","title":"Instala\u00e7\u00e3o","text":"<p>Para come\u00e7ar, voc\u00ea precisa ter o Python instalado em sua m\u00e1quina. Ap\u00f3s isso, voc\u00ea pode instalar o Beautiful Soup usando pip, o gerenciador de pacotes do Python:</p> <pre><code>pip install beautifulsoup4\n</code></pre> <p>Al\u00e9m do Beautiful Soup, tamb\u00e9m precisaremos do <code>requests</code> para fazer requisi\u00e7\u00f5es HTTP:</p> <pre><code>pip install requests\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#primeiros-passos-com-beautiful-soup","title":"Primeiros Passos com Beautiful Soup","text":"<p>Primeiro, vamos importar as bibliotecas necess\u00e1rias e fazer uma requisi\u00e7\u00e3o simples para obter o HTML de uma p\u00e1gina:</p> <pre><code>import requests\nfrom bs4 import BeautifulSoup\n\nurl = 'https://exemplo.com'\nresponse = requests.get(url)\nsoup = BeautifulSoup(response.text, 'html.parser')\n</code></pre> <p>Aqui, <code>response.text</code> cont\u00e9m o HTML da p\u00e1gina, que \u00e9 ent\u00e3o analisado pelo Beautiful Soup usando <code>html.parser</code>.</p>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#extraindo-dados","title":"Extraindo Dados","text":"<p>Temos algumas maneiras de explorar essa estrutura de dados:</p> <pre><code>soup.title   # retorna a tag title do site\n\nsoup.title.string # retorna o valor da tag title \n\nsoup.p   # retorna a tag paragrafo = &lt;p class=\"title\"&gt;&lt;b&gt;The Dormouse's story&lt;/b&gt;&lt;/p&gt;\n\nsoup.p['class']   # retorna o valor do argumento class = u'title'\n\nsoup.a   # retorna o tag hiperlink = &lt;a class=\"sister\" href=\"http://example.com/elsie\" id=\"link1\"&gt;Elsie&lt;/a&gt;\n\nsoup.find_all('a')  # retorna uma lista com todos os hiperlinks\n</code></pre> <p>Na raspagem de dados, uma tarefa comum \u00e9 encontrar todos os URLs contidos nas tags <code>&lt;a&gt;</code> de uma p\u00e1gina, e pode ser realizado varrendo um la\u00e7o <code>for</code> da seguinte forma:</p> <p><pre><code>for link in soup.find_all('a'):\n   print(link.get('href'))\n</code></pre> Da mesma forma podemos querer extrair todos os cabe\u00e7alhos <code>&lt;h1&gt;</code> de uma p\u00e1gina:</p> <pre><code>headers = soup.find_all('h1')\nfor header in headers:\n    print(header.text)\n</code></pre> <p>Outra tarefa comum \u00e9 extrair todo o texto de uma p\u00e1gina:</p> <pre><code>print(soup.get_text())\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#aplicacoes-praticas","title":"Aplica\u00e7\u00f5es Pr\u00e1ticas","text":""},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#raspagem-de-noticias","title":"Raspagem de Not\u00edcias","text":"<p>Voc\u00ea pode usar Beautiful Soup para construir um agregador de not\u00edcias, raspando t\u00edtulos e links de um portal de not\u00edcias:</p> <pre><code>news_items = soup.find_all('div', class_='news_item')\nfor item in news_items:\n    title = item.find('h2').text\n    link = item.find('a')['href']\n    print(f'T\u00edtulo: {title}, Link: {link}')\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/scraping-beautifulsoup.html#monitoramento-de-precos","title":"Monitoramento de Pre\u00e7os","text":"<p>Beautiful Soup \u00e9 excelente para monitorar pre\u00e7os de produtos em e-commerce. Aqui est\u00e1 um exemplo simples:</p> <pre><code>price = soup.find('span', class_='product-price').text\nprint(f'Pre\u00e7o atual: {price}')\n</code></pre>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html","title":"Web scraping","text":"In\u00a0[7]: Copied! <pre>import requests\npage = requests.get(\"https://arnaldojr.github.io/web-scraping/\")\n\n#resposta do servidor\npage\n</pre> import requests page = requests.get(\"https://arnaldojr.github.io/web-scraping/\")  #resposta do servidor page   Out[7]: <pre>&lt;Response [200]&gt;</pre> In\u00a0[9]: Copied! <pre>#conte\u00fado da p\u00e1gina\npage.text\n</pre> #conte\u00fado da p\u00e1gina page.text Out[9]: <pre>'&lt;!DOCTYPE html&gt;\\n&lt;html&gt;\\n    &lt;head&gt;\\n        &lt;title&gt;titulo de uma pagina html&lt;/title&gt;\\n    &lt;/head&gt;\\n    &lt;body&gt;\\n        &lt;p&gt;Conte\u00fado de uma pagina.&lt;/p&gt;\\n        &lt;BODY BGCOLOR=\"FFFFFF\"&gt;\\n        &lt;HR&gt;\\n        &lt;a href=\"https://arnaldojr.github.io/web-scraping/\"&gt;Home&lt;/a&gt;\\n        Link deste site.\\n        &lt;H1&gt;Cabe\u00e7alho grande H1 &lt;/H1&gt;\\n        &lt;H2&gt;Cabe\u00e7alho m\u00e9dio H2 &lt;/H2&gt;\\n        Envie-me um e-mail para &lt;a href=\"mailto:email@semail.com\"&gt;\\n        email@email.com&lt;/a&gt;.  \\n        &lt;P&gt; Isto \u00e9 um novo par\u00e1grafo!\\n            &lt;P&gt; &lt;B&gt;Este \u00e9 um par\u00e1grafo novo!&lt;/B&gt;  \\n        &lt;HR&gt;    \\n        &lt;table&gt;\\n          &lt;tr&gt;\\n            &lt;th&gt;Nome&lt;/th&gt;\\n            &lt;th&gt;Sobrenome&lt;/th&gt;\\n            &lt;th&gt;idade&lt;/th&gt;\\n          &lt;/tr&gt;\\n          &lt;tr&gt;\\n            &lt;td&gt;Arnaldo&lt;/td&gt;\\n            &lt;td&gt;Viana&lt;/td&gt;\\n            &lt;td&gt;33&lt;/td&gt;\\n          &lt;/tr&gt;\\n          &lt;tr&gt;\\n            &lt;td&gt;Peter&lt;/td&gt;\\n            &lt;td&gt;parker&lt;/td&gt;\\n            &lt;td&gt;16&lt;/td&gt;\\n          &lt;/tr&gt;\\n        &lt;/table&gt;\\n            \\n        &lt;ol&gt;\\n          &lt;li&gt;Caf\u00e9&lt;/li&gt;\\n          &lt;li&gt;Cerveja&lt;/li&gt;\\n          &lt;li&gt;\u00e1gua&lt;/li&gt;\\n        &lt;/ol&gt;\\n        &lt;ul&gt;\\n          &lt;li&gt;suco&lt;/li&gt;\\n          &lt;li&gt;ch\u00e1&lt;/li&gt;\\n          &lt;li&gt;vodka&lt;/li&gt;\\n        &lt;/ul&gt;\\n    &lt;/body&gt;\\n&lt;/html&gt;\\n'</pre> <p>N\u00e3o est\u00e1 muito organizado, vamos melhorar isso usando a biblioteca <code>BeautifulSoup</code></p> <p>Para instalar use:</p> <pre>pip install beautifulsoup4\n</pre> In\u00a0[11]: Copied! <pre>from bs4 import BeautifulSoup\n\n# O objeto soup contem toda a pagina\nsoup = BeautifulSoup(page.content, 'html.parser')\n\nprint(soup)\n</pre> from bs4 import BeautifulSoup  # O objeto soup contem toda a pagina soup = BeautifulSoup(page.content, 'html.parser')  print(soup) <pre>&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;titulo de uma pagina html&lt;/title&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;p&gt;Conte\u00fado de uma pagina.&lt;/p&gt;\n&lt;body bgcolor=\"FFFFFF\"&gt;\n&lt;hr/&gt;\n&lt;a href=\"https://arnaldojr.github.io/web-scraping/\"&gt;Home&lt;/a&gt;\n        Link deste site.\n        &lt;h1&gt;Cabe\u00e7alho grande H1 &lt;/h1&gt;\n&lt;h2&gt;Cabe\u00e7alho m\u00e9dio H2 &lt;/h2&gt;\n        Envie-me um e-mail para &lt;a href=\"mailto:email@semail.com\"&gt;\n        email@email.com&lt;/a&gt;.  \n        &lt;p&gt; Isto \u00e9 um novo par\u00e1grafo!\n            &lt;p&gt; &lt;b&gt;Este \u00e9 um par\u00e1grafo novo!&lt;/b&gt;\n&lt;hr/&gt;\n&lt;table&gt;\n&lt;tr&gt;\n&lt;th&gt;Nome&lt;/th&gt;\n&lt;th&gt;Sobrenome&lt;/th&gt;\n&lt;th&gt;idade&lt;/th&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Arnaldo&lt;/td&gt;\n&lt;td&gt;Viana&lt;/td&gt;\n&lt;td&gt;33&lt;/td&gt;\n&lt;/tr&gt;\n&lt;tr&gt;\n&lt;td&gt;Peter&lt;/td&gt;\n&lt;td&gt;parker&lt;/td&gt;\n&lt;td&gt;16&lt;/td&gt;\n&lt;/tr&gt;\n&lt;/table&gt;\n&lt;ol&gt;\n&lt;li&gt;Caf\u00e9&lt;/li&gt;\n&lt;li&gt;Cerveja&lt;/li&gt;\n&lt;li&gt;\u00e1gua&lt;/li&gt;\n&lt;/ol&gt;\n&lt;ul&gt;\n&lt;li&gt;suco&lt;/li&gt;\n&lt;li&gt;ch\u00e1&lt;/li&gt;\n&lt;li&gt;vodka&lt;/li&gt;\n&lt;/ul&gt;\n&lt;/p&gt;&lt;/p&gt;&lt;/body&gt;\n&lt;/body&gt;&lt;/html&gt;\n\n</pre> In\u00a0[12]: Copied! <pre># visualizando de forma organizada e com identa\u00e7\u00f5es\nprint(soup.prettify())\n</pre> # visualizando de forma organizada e com identa\u00e7\u00f5es print(soup.prettify()) <pre>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n &lt;head&gt;\n  &lt;title&gt;\n   titulo de uma pagina html\n  &lt;/title&gt;\n &lt;/head&gt;\n &lt;body&gt;\n  &lt;p&gt;\n   Conte\u00fado de uma pagina.\n  &lt;/p&gt;\n  &lt;body bgcolor=\"FFFFFF\"&gt;\n   &lt;hr/&gt;\n   &lt;a href=\"https://arnaldojr.github.io/web-scraping/\"&gt;\n    Home\n   &lt;/a&gt;\n   Link deste site.\n   &lt;h1&gt;\n    Cabe\u00e7alho grande H1\n   &lt;/h1&gt;\n   &lt;h2&gt;\n    Cabe\u00e7alho m\u00e9dio H2\n   &lt;/h2&gt;\n   Envie-me um e-mail para\n   &lt;a href=\"mailto:email@semail.com\"&gt;\n    email@email.com\n   &lt;/a&gt;\n   .\n   &lt;p&gt;\n    Isto \u00e9 um novo par\u00e1grafo!\n    &lt;p&gt;\n     &lt;b&gt;\n      Este \u00e9 um par\u00e1grafo novo!\n     &lt;/b&gt;\n     &lt;hr/&gt;\n     &lt;table&gt;\n      &lt;tr&gt;\n       &lt;th&gt;\n        Nome\n       &lt;/th&gt;\n       &lt;th&gt;\n        Sobrenome\n       &lt;/th&gt;\n       &lt;th&gt;\n        idade\n       &lt;/th&gt;\n      &lt;/tr&gt;\n      &lt;tr&gt;\n       &lt;td&gt;\n        Arnaldo\n       &lt;/td&gt;\n       &lt;td&gt;\n        Viana\n       &lt;/td&gt;\n       &lt;td&gt;\n        33\n       &lt;/td&gt;\n      &lt;/tr&gt;\n      &lt;tr&gt;\n       &lt;td&gt;\n        Peter\n       &lt;/td&gt;\n       &lt;td&gt;\n        parker\n       &lt;/td&gt;\n       &lt;td&gt;\n        16\n       &lt;/td&gt;\n      &lt;/tr&gt;\n     &lt;/table&gt;\n     &lt;ol&gt;\n      &lt;li&gt;\n       Caf\u00e9\n      &lt;/li&gt;\n      &lt;li&gt;\n       Cerveja\n      &lt;/li&gt;\n      &lt;li&gt;\n       \u00e1gua\n      &lt;/li&gt;\n     &lt;/ol&gt;\n     &lt;ul&gt;\n      &lt;li&gt;\n       suco\n      &lt;/li&gt;\n      &lt;li&gt;\n       ch\u00e1\n      &lt;/li&gt;\n      &lt;li&gt;\n       vodka\n      &lt;/li&gt;\n     &lt;/ul&gt;\n    &lt;/p&gt;\n   &lt;/p&gt;\n  &lt;/body&gt;\n &lt;/body&gt;\n&lt;/html&gt;\n\n</pre> In\u00a0[14]: Copied! <pre>#visualizando os item\n\nprint(list(soup.li))\n\n\nprint(soup.head)\nprint(list(soup.p))\nprint(list(soup.title))\n</pre> #visualizando os item  print(list(soup.li))   print(soup.head) print(list(soup.p)) print(list(soup.title))  <pre>['Caf\u00e9']\n&lt;head&gt;\n&lt;title&gt;titulo de uma pagina html&lt;/title&gt;\n&lt;/head&gt;\n['Conte\u00fado de uma pagina.']\n['titulo de uma pagina html']\n</pre> In\u00a0[15]: Copied! <pre>#buscando itens de forma errada\nfor item in list(soup.li):\n    print(item)\n</pre> #buscando itens de forma errada for item in list(soup.li):     print(item) <pre>Caf\u00e9\n</pre> In\u00a0[16]: Copied! <pre>#buscando itens de forma correta\nlista = soup.find_all('li')\n\n\nprint(lista)\n\n\nfor li in lista:\n    print(li.text)\n</pre> #buscando itens de forma correta lista = soup.find_all('li')   print(lista)   for li in lista:     print(li.text) <pre>[&lt;li&gt;Caf\u00e9&lt;/li&gt;, &lt;li&gt;Cerveja&lt;/li&gt;, &lt;li&gt;\u00e1gua&lt;/li&gt;, &lt;li&gt;suco&lt;/li&gt;, &lt;li&gt;ch\u00e1&lt;/li&gt;, &lt;li&gt;vodka&lt;/li&gt;]\nCaf\u00e9\nCerveja\n\u00e1gua\nsuco\nch\u00e1\nvodka\n</pre> In\u00a0[20]: Copied! <pre># busca todos os links\nlinks = soup.find_all('a')\nprint(links, \"\\n\")\nfor link in links:\n    print(link.get('href'))\n</pre> # busca todos os links links = soup.find_all('a') print(links, \"\\n\") for link in links:     print(link.get('href')) <pre>[&lt;a href=\"https://arnaldojr.github.io/web-scraping/\"&gt;Home&lt;/a&gt;, &lt;a href=\"mailto:email@semail.com\"&gt;\n        email@email.com&lt;/a&gt;] \n\nhttps://arnaldojr.github.io/web-scraping/\nmailto:email@semail.com\n</pre> In\u00a0[9]: Copied! <pre>import requests\nfrom bs4 import BeautifulSoup\n\n# URL\nurl = 'https://economia.uol.com.br/noticias/redacao/2022/03/10/petrobras-anuncia-aumento-nos-precos-de-gasolina-diesel-e-gas-de-cozinha.htm'\n\npage = requests.get(url)\n\nsoup = BeautifulSoup(page.content, 'html.parser')\n\n# sempre que buscar um elemento em uma class, \u00e9 necess\u00e1rio usar o underline `class_`.\n# pois class \u00e9 uma palavra reservada do python, e o underline \u00e9 usado para diferenciar a palavra reservada do atributo class do html \nnoticia = soup.find('div', class_=\"image-content-pad\")\n\n\n# outra forma de usar `class`` \u00e9 usar o dicion\u00e1rio\n# noticia = soup.find('div', {'class': 'image-content-pad'})\n\n\n\n\n# pode conter mais de um paragrafo, por isso find_all e n\u00e3o find. \n# find_all retorna uma lista com todos os paragrafos\n# com o for, podemos percorrer cada paragrafo e exibir o texto\nparagrafos = noticia.find_all('p')\nfor paragrafo in paragrafos:\n  print (paragrafo.text)\n</pre> import requests from bs4 import BeautifulSoup  # URL url = 'https://economia.uol.com.br/noticias/redacao/2022/03/10/petrobras-anuncia-aumento-nos-precos-de-gasolina-diesel-e-gas-de-cozinha.htm'  page = requests.get(url)  soup = BeautifulSoup(page.content, 'html.parser')  # sempre que buscar um elemento em uma class, \u00e9 necess\u00e1rio usar o underline `class_`. # pois class \u00e9 uma palavra reservada do python, e o underline \u00e9 usado para diferenciar a palavra reservada do atributo class do html  noticia = soup.find('div', class_=\"image-content-pad\")   # outra forma de usar `class`` \u00e9 usar o dicion\u00e1rio # noticia = soup.find('div', {'class': 'image-content-pad'})     # pode conter mais de um paragrafo, por isso find_all e n\u00e3o find.  # find_all retorna uma lista com todos os paragrafos # com o for, podemos percorrer cada paragrafo e exibir o texto paragrafos = noticia.find_all('p') for paragrafo in paragrafos:   print (paragrafo.text) <pre>Do UOL, em S\u00e3o Paulo\n10/03/2022 10h20Atualizada em 10/03/2022 18h05 \nA Petrobras anunciou hoje reajustes nos pre\u00e7os da gasolina, diesel e GLP, o g\u00e1s de cozinha. O aumento vale para as distribuidoras e entra em vigor a partir de amanh\u00e3. O repasse para o consumidor final, afetando diretamente os pre\u00e7os das bombas e do botij\u00e3o de g\u00e1s, ainda n\u00e3o est\u00e1 definido se e quando ir\u00e1 ocorrer, porque depende de cada revendedor.\nNas distribuidoras, o pre\u00e7o m\u00e9dio da gasolina passar\u00e1 de R$ 3,25 para R$ 3,86 o litro, um aumento de 18,77%. Para o diesel, o valor ir\u00e1 de R$ 3,61 a R$ 4,51, alta de 24,9%. O g\u00e1s de cozinha passar\u00e1 de R$ 3,86 para R$ 4,48 por quilo, um reajuste de 16%. A \u00faltima altera\u00e7\u00e3o no pre\u00e7o dos combust\u00edveis foi h\u00e1 quase dois meses, em 11 de janeiro. J\u00e1 o GLP foi reajustado em outubro do ano passado, h\u00e1 152 dias.\nCom isso, a estimativa \u00e9 que o pre\u00e7o m\u00e9dio da gasolina nas bombas passe de R$ 6,57 o litro para R$ 7,02. J\u00e1 o diesel pode ir dos atuais R$ 5,60 para R$ 6,48 o litro. O c\u00e1lculo \u00e9 da Fecombust\u00edveis (Federa\u00e7\u00e3o Nacional do Com\u00e9rcio de Combust\u00edveis e Fertilizantes) e leva em conta o Levantamento de Pre\u00e7os da ANP (Ag\u00eancia Nacional do Petr\u00f3leo, G\u00e1s Natural e Biocombust\u00edveis).\nEm nota, a Petrobras diz que os valores \"refletem parte da eleva\u00e7\u00e3o dos patamares internacionais de pre\u00e7os de petr\u00f3leo, impactados pela oferta limitada frente a demanda mundial por energia\".\n\"Ap\u00f3s serem observados pre\u00e7os em patamares consistentemente elevados, tornou-se necess\u00e1rio que a Petrobras promova ajustes nos seus pre\u00e7os de venda \u00e0s distribuidoras para que o mercado brasileiro continue sendo suprido, sem riscos de desabastecimento\", comunicou.\nO barril de petr\u00f3leo no mercado internacional ultrapassou a marca de US$ 130 (R$ 656, na cota\u00e7\u00e3o de hoje) nos \u00faltimos dias, com o conflito entre a R\u00fassia e a Ucr\u00e2nia. Quando a companhia anunciou o \u00faltimo aumento, em 11 de janeiro, o produto era cotado a cerca de US$ 83 (R$ 419).\n   \nA\u00e7\u00f5es da Petrobras tinham as maiores altas da Bolsa de Valores brasileira (B3), por volta das 10h40 (hor\u00e1rio de Bras\u00edlia). As a\u00e7\u00f5es preferenciais subiam 3,9%, a R$ 33,83, enquanto as ordin\u00e1rias valorizavam 2,85%, a R$ 35,68.\nNa semana passada, c\u00e1lculos da Abicom (Associa\u00e7\u00e3o Brasileira dos Importadores de Petr\u00f3leo) apontaram que os valores m\u00e9dios do diesel e da gasolina da Petrobras nas refinarias era 25% menor do que o cobrado no exterior, uma defasagem n\u00e3o vista h\u00e1 cerca de 10 anos.\nO chamado pre\u00e7o de paridade de importa\u00e7\u00e3o (PPI) \u00e9 o custo do produto importado trazido ao pa\u00eds. A atual pol\u00edtica de pre\u00e7os da Petrobras busca seguir o PPI, para evitar preju\u00edzos, considerando indicadores como o valor do barril do petr\u00f3leo e o d\u00f3lar. No entanto, a empresa tem demorado a fazer reajustes, alegando que assim evita repassar volatilidades internacionais ao mercado interno.\n*Com informa\u00e7\u00f5es da Reuters\n ID: {{comments.info.id}}URL: {{comments.info.url}}\nPor favor, tente novamente mais tarde.\n\nN\u00e3o \u00e9 possivel enviar novos coment\u00e1rios.\nEssa \u00e1rea \u00e9 exclusiva para voc\u00ea, assinante, ler e comentar.\nAinda n\u00e3o \u00e9 assinante? Assine j\u00e1.\nSe voc\u00ea j\u00e1 \u00e9 assinante do UOL, fa\u00e7a seu login.\nO autor da mensagem, e n\u00e3o o UOL, \u00e9 o respons\u00e1vel pelo coment\u00e1rio. Reserve um tempo para ler as Regras de Uso para coment\u00e1rios.\n\n\n</pre> In\u00a0[10]: Copied! <pre>import requests\nfrom bs4 import BeautifulSoup \n\n# URL\nurl = 'https://www.uol.com.br/carros/avaliacao/avaliacao-audi-q8-e-tron.htm'\n\npage = requests.get(url)\nsoup = BeautifulSoup(page.content, 'html.parser')\n\n\n# noticia = soup.find('div', class_=\"mt-100 container grid\")\n\nnoticia = soup.find('div', class_=\"col-xs-8 col-sm-21 col-md-21\")\n\nparagrafos = noticia.find_all('p')\n\nfor paragrafo in paragrafos:\n  print (paragrafo.text)\n</pre> import requests from bs4 import BeautifulSoup   # URL url = 'https://www.uol.com.br/carros/avaliacao/avaliacao-audi-q8-e-tron.htm'  page = requests.get(url) soup = BeautifulSoup(page.content, 'html.parser')   # noticia = soup.find('div', class_=\"mt-100 container grid\")  noticia = soup.find('div', class_=\"col-xs-8 col-sm-21 col-md-21\")  paragrafos = noticia.find_all('p')  for paragrafo in paragrafos:   print (paragrafo.text) <pre>Daniel Neves\nDo UOL, em S\u00e3o Paulo\n12/04/2024 04h00 \nEle mudou de nome, mas n\u00e3o de ess\u00eancia. O Audi e-tron, que inaugurou a linha de el\u00e9tricos da montadora alem\u00e3, agora se chama Q8 e-tron e ganhou discretas altera\u00e7\u00f5es em sua nova linha. A principal novidade est\u00e1 na bateria, que apresenta uma melhora na efici\u00eancia que garante maior autonomia ao SUV.\nCom pre\u00e7os que variam entre R$ 699.990 (Performance Black) a R$ 711.990 (Launch Edition - testada pela reportagem), o utilit\u00e1rio-esportivo ainda \u00e9 uma boa op\u00e7\u00e3o para quem tem esse valor para gastar? \u00c9 o que o UOL Carros mostra na avalia\u00e7\u00e3o abaixo.\nDesign: discreta atualiza\u00e7\u00e3o no visual futurista trouxe novo para-choque, com grade mais destacada e luz indireta na parte superior. Ele tamb\u00e9m estreia o novo logotipo da Audi, sem relevos. O que chama mais aten\u00e7\u00e3o, por\u00e9m, s\u00e3o as c\u00e2meras no lugar do retrovisor - opcional de R$ 15 mil que demanda certa adapta\u00e7\u00e3o do motorista. Porta-malas \u00e9 generoso, oferecendo 569 litros.\nEquipamentos: destaque para painel de instrumentos configur\u00e1vel de 12,3 polegadas, central multim\u00eddia com espelhamento sem fios, piloto autom\u00e1tico adaptativo, ar-condicionado de quatro zonas, carregador de celulares por indu\u00e7\u00e3o, teto solar panor\u00e2mico e c\u00e2mera 360\u00ba, al\u00e9m de bancos com aquecimento e massagem.\nSeguran\u00e7a: pacote com indicador de pontos cegos, frenagem aut\u00f4noma de emerg\u00eancia, alerta de tr\u00e1fego cruzado traseiro.\nVida a bordo: espa\u00e7o \u00e9 bastante confort\u00e1vel, tanto para os ocupantes da frente quanto para duas pessoas que viajam atr\u00e1s, que tamb\u00e9m contam com comando e sa\u00edda de ar-condicionado. Terceiro assento no banco traseiro pode ser substitu\u00eddo por porta-copos embutido. Sil\u00eancio na cabine impressiona e \u00e9 outro ponto positivo.\nDesempenho: novidade \u00e9 o motor traseiro projetado para maior efici\u00eancia, gerando mesmo torque com menos energia. O resultado final ainda \u00e9 o mesmo, com 408 cv de pot\u00eancia e 67,7 kgfm de torque. Apesar das dimens\u00f5es generosas, as respostas ao volante s\u00e3o suaves e o SUV esbanja vitalidade nas acelera\u00e7\u00f5es.\nConsumo: conjunto de baterias cresceu de 95 kWh para 114 kWh, o que contribui para que o SUV atinja autonomia de at\u00e9 357 km (Inmetro).\n5,0\n\n4,0\n\n3,0\n\n5,0\n\n5,0\n\n4,0\n\n5,0\n\nCom novo nome, o agora Q8 e-tron mudou muito pouco, mas ainda \u00e9 uma \u00f3tima op\u00e7\u00e3o para quem busca - e tem bala na agulha - ter um SUV el\u00e9trico de grande porte para levar a fam\u00edlia. A dirigibilidade e o conforto \u00e9 o que se espera de um Audi, que ainda melhorou a autonomia. O 'ame ou deixe' continua sendo a c\u00e2mera no lugar do retrovisor, que exige certa adapta\u00e7\u00e3o e pode fazer muitos torcerem o nariz.\nMotoriza\u00e7\u00e3o \n   El\u00e9trico (2 motores)   \nPot\u00eancia (cv)\n   408   \nTorque (kgf.m)\n   67,7   \nAcelera\u00e7\u00e3o de 0 a 100 (segundos) (km/h)\n   5,6   \nVelocidade m\u00e1xima (km/h)\n   200   \nC\u00e2mbio\n   Autom\u00e1tico   \nTra\u00e7\u00e3o\n   Integral   \nDire\u00e7\u00e3o\n   El\u00e9trica   \nSuspens\u00e3o Dianteira\n   Independente, multibra\u00e7o   \nSuspens\u00e3o Traseira\n   Independente, multibra\u00e7o   \nFreios Dianteiros\n   Disco ventilado   \nFreios Traseiros\n   Disco ventilado   \nPneus\n   265/40   \nRodas\n   22   \nAltura (mm)\n   1633   \nComprimento (mm)\n   4915   \nEntre-eixos (mm)\n   2.928   \nLargura (mm)\n   1.655   \nOcupantes\n   5   \nPeso (kg)\n   2.730   \nPorta-malas (L)\n   569   \nAirbags Motorista\n  \nAirbags Passageiro\n  \nAirbags Laterais\n  \nAirbags do tipo Cortina\n  \nControle de Estabilidade\n  \nControle de Tra\u00e7\u00e3o\n  \nFreios ABS\n  \nDistribui\u00e7\u00e3o Eletr\u00f4nica de Frenagem\n  \nAr-Condicionado\n  \nTravas El\u00e9tricas\n  \nAr Quente\n  \nPiloto Autom\u00e1tico\n  \nVolante com Regulagem de Altura\n  \nVidros El\u00e9tricos Dianteiros\n  \nVidros El\u00e9tricos Traseiros\n  \nCentral Multim\u00eddia\n  \nR\u00e1dio FM/AM\n  \nEntrada USB\n  \nEntrada Auxiliar\n  \nBanco do motorista com ajuste de altura\n  \nBancos com ajustes el\u00e9tricos\n  \nDesemba\u00e7ador Traseiro\n  \nTeto Solar\n  \nComputador de Bordo\n  \nAcendimento autom\u00e1tico dos far\u00f3is\n  \nFar\u00f3is de neblina\n  \nFrenagem aut\u00f4noma de emerg\u00eancia\n  \nAlerta de perman\u00eancia em faixa\n  \nSensor de pontos cegos\n  \nAlerta de colis\u00e3o\n  \nAbertura el\u00e9trica do porta-malas\n  \n ID: {{comments.info.id}}URL: {{comments.info.url}}\nPor favor, tente novamente mais tarde.\n\nN\u00e3o \u00e9 possivel enviar novos coment\u00e1rios.\nEssa \u00e1rea \u00e9 exclusiva para voc\u00ea, assinante, ler e comentar.\nAinda n\u00e3o \u00e9 assinante? Assine j\u00e1.\nSe voc\u00ea j\u00e1 \u00e9 assinante do UOL, fa\u00e7a seu login.\nO autor da mensagem, e n\u00e3o o UOL, \u00e9 o respons\u00e1vel pelo coment\u00e1rio. Reserve um tempo para ler as Regras de Uso para coment\u00e1rios.\n\n\n</pre> In\u00a0[21]: Copied! <pre>import requests\nfrom bs4 import BeautifulSoup \n\n# URL\nurl = 'https://www.uol.com.br/carros/avaliacao/avaliacao-audi-q8-e-tron.htm'\n\npage = requests.get(url)\nsoup = BeautifulSoup(page.content, 'html.parser')\n\n\n# Encontrar todos os 'ul' que cont\u00eam as especifica\u00e7\u00f5es do carro\nspec_list = soup.find_all('ul', class_='table-line')\n\n# Iterar sobre cada 'ul' e extrair os pares de label e descri\u00e7\u00e3o\nfor spec in spec_list:\n    label = spec.find('li', class_='label-spec').text.strip()\n    descricao = spec.find('li', class_='desc-spec') or spec.find('li', class_='desc-spec check')\n    \n    # Verificar se o item \u00e9 um check\n    if 'check' in descricao['class']:\n        descricao = \"Sim\"\n    else:\n        descricao = descricao.text.strip()\n    print(f'{label}: {descricao}')\n</pre> import requests from bs4 import BeautifulSoup   # URL url = 'https://www.uol.com.br/carros/avaliacao/avaliacao-audi-q8-e-tron.htm'  page = requests.get(url) soup = BeautifulSoup(page.content, 'html.parser')   # Encontrar todos os 'ul' que cont\u00eam as especifica\u00e7\u00f5es do carro spec_list = soup.find_all('ul', class_='table-line')  # Iterar sobre cada 'ul' e extrair os pares de label e descri\u00e7\u00e3o for spec in spec_list:     label = spec.find('li', class_='label-spec').text.strip()     descricao = spec.find('li', class_='desc-spec') or spec.find('li', class_='desc-spec check')          # Verificar se o item \u00e9 um check     if 'check' in descricao['class']:         descricao = \"Sim\"     else:         descricao = descricao.text.strip()     print(f'{label}: {descricao}') <pre>Motoriza\u00e7\u00e3o: El\u00e9trico (2 motores)\nPot\u00eancia (cv): 408\nTorque (kgf.m): 67,7\nAcelera\u00e7\u00e3o de 0 a 100 (segundos) (km/h): 5,6\nVelocidade m\u00e1xima (km/h): 200\nC\u00e2mbio: Autom\u00e1tico\nTra\u00e7\u00e3o: Integral\nDire\u00e7\u00e3o: El\u00e9trica\nSuspens\u00e3o Dianteira: Independente, multibra\u00e7o\nSuspens\u00e3o Traseira: Independente, multibra\u00e7o\nFreios Dianteiros: Disco ventilado\nFreios Traseiros: Disco ventilado\nPneus: 265/40\nRodas: 22\nAltura (mm): 1633\nComprimento (mm): 4915\nEntre-eixos (mm): 2.928\nLargura (mm): 1.655\nOcupantes: 5\nPeso (kg): 2.730\nPorta-malas (L): 569\nAirbags Motorista: Sim\nAirbags Passageiro: Sim\nAirbags Laterais: Sim\nAirbags do tipo Cortina: Sim\nControle de Estabilidade: Sim\nControle de Tra\u00e7\u00e3o: Sim\nFreios ABS: Sim\nDistribui\u00e7\u00e3o Eletr\u00f4nica de Frenagem: Sim\nAr-Condicionado: Sim\nTravas El\u00e9tricas: Sim\nAr Quente: Sim\nPiloto Autom\u00e1tico: Sim\nVolante com Regulagem de Altura: Sim\nVidros El\u00e9tricos Dianteiros: Sim\nVidros El\u00e9tricos Traseiros: Sim\nCentral Multim\u00eddia: Sim\nR\u00e1dio FM/AM: Sim\nEntrada USB: Sim\nEntrada Auxiliar: Sim\nBanco do motorista com ajuste de altura: Sim\nBancos com ajustes el\u00e9tricos: Sim\nDesemba\u00e7ador Traseiro: Sim\nTeto Solar: Sim\nComputador de Bordo: Sim\nAcendimento autom\u00e1tico dos far\u00f3is: Sim\nFar\u00f3is de neblina: Sim\nFrenagem aut\u00f4noma de emerg\u00eancia: Sim\nAlerta de perman\u00eancia em faixa: Sim\nSensor de pontos cegos: Sim\nAlerta de colis\u00e3o: Sim\nAbertura el\u00e9trica do porta-malas: Sim\n</pre> In\u00a0[\u00a0]: Copied! <pre># Vou come\u00e7ar e voc\u00ea continua....\n\nimport requests\nfrom bs4 import BeautifulSoup\n\n# URL\nurl = '&lt;SUA URL AQUI&gt;'\n\npage = requests.get(url)\nsoup = BeautifulSoup(page.content, 'html.parser')\n\n# Visualizar o conte\u00fado da p\u00e1gina\nprint(soup.prettify())\n\n\n# sua vez, seu c\u00f3digo aqui....\n</pre> # Vou come\u00e7ar e voc\u00ea continua....  import requests from bs4 import BeautifulSoup  # URL url = ''  page = requests.get(url) soup = BeautifulSoup(page.content, 'html.parser')  # Visualizar o conte\u00fado da p\u00e1gina print(soup.prettify())   # sua vez, seu c\u00f3digo aqui....             In\u00a0[22]: Copied! <pre>import requests\nfrom bs4 import BeautifulSoup\n\n# user-agent contra banners\nheader = {\n    \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\"\n}\n\nurl = \"https://www.cinemark.com.br/sao-paulo/filmes/em-cartaz\"\n\npage = requests.get(url, headers = header)\n\nsoup = BeautifulSoup(page.text)\n\nlistas = soup.find_all('div', class_=\"col-sm-6 col-md-3\")\n\n\nfor lista in listas:\n    texto_titulo = lista.find(class_=\"movie-title\").text.strip()\n   \n    print(texto_titulo)\n</pre> import requests from bs4 import BeautifulSoup  # user-agent contra banners header = {     \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36\" }  url = \"https://www.cinemark.com.br/sao-paulo/filmes/em-cartaz\"  page = requests.get(url, headers = header)  soup = BeautifulSoup(page.text)  listas = soup.find_all('div', class_=\"col-sm-6 col-md-3\")   for lista in listas:     texto_titulo = lista.find(class_=\"movie-title\").text.strip()         print(texto_titulo)  <pre>A Paix\u00e3o Segundo GH\nDepois da Morte\nEvid\u00eancias do Amor\nGhostbusters: Apocalipse de Gelo\nGhostbusters: Apocalipse de...\nO Sabor da Vida\nPearl Jam - Dark Matter\nUm Gato de Sorte\nA Primeira Profecia\nO Homem dos Sonhos\nUma Fam\u00edlia Feliz\nUma Prova de Coragem\nDois \u00e9 Demais em Orlando\n</pre> In\u00a0[23]: Copied! <pre>### Esse c\u00f3digo encontrei na internet, fiz apenas algumas adapta\u00e7oes para o nosso contexto de aula.\n### Basicamente ele pega as perguntas do stackoverflow e exibe na tela. \n### A ideia \u00e9 que voc\u00eas possam entender o c\u00f3digo e fazer um similar para pegar as not\u00edcias do UOL ou do G1 por exemplo.\n\n\n\"\"\"\nOBJETIVO:\n  - Extraer las preguntas de la p\u00e1gina principal de Stackoverflow\n  - Aprender a utilizar Beautiful Soup para parsear el \u00e1rbol HTML\nCREADO POR: LEONARDO KUFFO\n\u00daLTIMA VEZ EDITADO: 12 ABRIL 2020\n\"\"\"\nimport requests\nfrom bs4 import BeautifulSoup  # pip install beautifulsoup4\n\n# Definici\u00f3n de los headers para simular un navegador y evitar bloqueos por parte del servidor\nheaders = {\n    \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/71.0.3578.80 Chrome/71.0.3578.80 Safari/537.36\"\n}\n\n# URL de la p\u00e1gina de preguntas de StackOverflow\nurl = 'https://stackoverflow.com/questions'\n\n# Realizar la solicitud al servidor\nresponse = requests.get(url, headers=headers)\n\n# Verificar si la solicitud fue exitosa\nif response.status_code == 200:\n    # Parsear el HTML de la p\u00e1gina usando Beautiful Soup\n    soup = BeautifulSoup(response.text, 'html.parser')\n    question_container = soup.find(id=\"questions\")  # Encontrar el contenedor de preguntas por ID\n\n    if question_container:\n        question_list = question_container.find_all('div', class_=\"s-post-summary js-post-summary\")  # Encontrar todas las preguntas\n\n        for question in question_list:  # Iterar sobre cada pregunta\n            # Extraer el texto de la pregunta\n            question_title = question.find('h3').text.strip()\n            # Extraer la descripci\u00f3n de la pregunta\n            question_desc = question.find('div', class_=\"s-post-summary--content-excerpt\").text.strip()\n            question_desc = ' '.join(question_desc.split())  # Limpiar espacios extra\n\n            print(question_title)\n            print(question_desc)\n            print()\n    else:\n        print(\"No se encontr\u00f3 el contenedor de preguntas.\")\nelse:\n    print(\"Error en la solicitud:\", response.status_code)\n</pre>  ### Esse c\u00f3digo encontrei na internet, fiz apenas algumas adapta\u00e7oes para o nosso contexto de aula. ### Basicamente ele pega as perguntas do stackoverflow e exibe na tela.  ### A ideia \u00e9 que voc\u00eas possam entender o c\u00f3digo e fazer um similar para pegar as not\u00edcias do UOL ou do G1 por exemplo.   \"\"\" OBJETIVO:   - Extraer las preguntas de la p\u00e1gina principal de Stackoverflow   - Aprender a utilizar Beautiful Soup para parsear el \u00e1rbol HTML CREADO POR: LEONARDO KUFFO \u00daLTIMA VEZ EDITADO: 12 ABRIL 2020 \"\"\" import requests from bs4 import BeautifulSoup  # pip install beautifulsoup4  # Definici\u00f3n de los headers para simular un navegador y evitar bloqueos por parte del servidor headers = {     \"User-Agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/71.0.3578.80 Chrome/71.0.3578.80 Safari/537.36\" }  # URL de la p\u00e1gina de preguntas de StackOverflow url = 'https://stackoverflow.com/questions'  # Realizar la solicitud al servidor response = requests.get(url, headers=headers)  # Verificar si la solicitud fue exitosa if response.status_code == 200:     # Parsear el HTML de la p\u00e1gina usando Beautiful Soup     soup = BeautifulSoup(response.text, 'html.parser')     question_container = soup.find(id=\"questions\")  # Encontrar el contenedor de preguntas por ID      if question_container:         question_list = question_container.find_all('div', class_=\"s-post-summary js-post-summary\")  # Encontrar todas las preguntas          for question in question_list:  # Iterar sobre cada pregunta             # Extraer el texto de la pregunta             question_title = question.find('h3').text.strip()             # Extraer la descripci\u00f3n de la pregunta             question_desc = question.find('div', class_=\"s-post-summary--content-excerpt\").text.strip()             question_desc = ' '.join(question_desc.split())  # Limpiar espacios extra              print(question_title)             print(question_desc)             print()     else:         print(\"No se encontr\u00f3 el contenedor de preguntas.\") else:     print(\"Error en la solicitud:\", response.status_code)  <pre>Unable to fetch file from google drive , through gdown\nI am trying to access a zip folder through my google drive but after importing all the libraries i am still unable to retrieve the folder correctly . This is my code and i keep on trying but no ...\n\nI am trying to connect my Angular Frontend and C# Backend in my local\nI'm developing my final project for online school. Using angular in front and C# in backend. When I try to post some data in front side Im getting same error consistently. I think i miss the right way ...\n\nauthentik: how to change the authentik default certificate to self-signed certification created by mkcert\nI'm setting up a selfhosted SSO with authentik. Followed the steps on Authentik Docker Compose installation guide. After everything setup, when I access the authentik from the browser, the browser ...\n\nNext14 Server action is not executed from a form submission\nAs of NextJs doc: Behind the scenes, actions use the POST method, and only this HTTP method can invoke them. When I submit my form with: &lt;form action={customOnFormData} &gt; my code: const ...\n\nHow to join table with lastest value from time series table\nI have two tables in postgres. CREATE TABLE data ( name VARCHAR(10) PRIMARY KEY ); CREATE TABLE timeseries ( name VARCHAR(10) NOT NULL REFERENCES data(name), time TIMESTAMP NOT NULL, ...\n\nGoogle MyMaps And Google Sheets\nI would like to add more than 10 layers to my google maps. Also have my google mymaps and google sheets communicate when making changes in either one. There must be a way using API or coding to add ...\n\nerror MSB4019: The imported project \"D:\\Microsoft.Cpp.Default.props\" was not found\nSo I've seen several topic on the subject but so far could not find any clear answer as what the problem is, why it appeared and how to solve it. I am not using npm, have Visual Studio 2022 installed, ...\n\nError in `.rowNamesDF&lt;-`(x, value = value) : duplicate 'row.names' are not allowed after applying make.unique ()\nI need to make 4 different matrices using the same data frame before running a LassoGLMM with the code I have. It is a large microbiome data set. I created my first matrix with no issues. However, ...\n\nSet opacity proportional to width\nIs there an idiomatic way to accomplish this (and have it be smooth rather than discrete)? @container (aspect-ratio &lt; 1) { .title { opacity: 0.1; } } @container (aspect-ratio &lt; 0.9) { ...\n\nWhy i can found \"Cancel\"?\nSo i want make Click Icon Show another UI with UI Cancel but if i click Cancel instead Icon, i need to click Icon Double time. enter image description here local ACHIEVEMENTS = script.Parent.Parent....\n\nweasyprint generates blurry/opaque image\nI am using the weasyprint library to export a pdf based on html and css code. However, it generates very inconsistent images. Sometimes the images look like they are opaque. In this code I generate an ...\n\nHow can I add socket connexion with my kubernetes ingress\nI have an api running in a kubernetes cluster. I have an http api on port 4000 and a websocket api on port 6010. I can't connect to my api via socket but via http yes. I can't solve it. My deployment:...\n\nHow to reset radio buttons on reactive forms in angular 14\nIn my application, I need to reset input type radio button on cancel button click in reactive forms. &lt;form [formGroup]=\"form1\"&gt; &lt;button click=\"save()\"&gt;save&lt;/button&amp;...\n\nStrange unreadable error on go database record creation?\nUsing GORM with GO. When I try and create a record, I get a strange error message which seems impossible to interpret. 2024/04/16 15:20:24 Failed to create player data; &amp;{{{0 0} 0 0 {{} 0} {{} 0}}...\n\nHow to set headers for RESTful webservice ? which is the data source for my report\nI have a jasper report which retrieves data from Webservice (data source), this webservice response returns as XML format which doesn't work with jasper report. So in order to make the response ...\n\n</pre> In\u00a0[24]: Copied! <pre>import pandas as pd\nfrom bs4 import BeautifulSoup\nimport requests\n\ndef get_page(url):\n    headers = {\n        \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/71.0.3578.80 Chrome/71.0.3578.80 Safari/537.36\"\n    }\n    response = requests.get(url, headers=headers)\n    response.raise_for_status()  # Garante que a resposta da requisi\u00e7\u00e3o foi bem-sucedida\n    return response.text\n\ndef parse_data(html):\n    soup = BeautifulSoup(html, 'html.parser')\n    \n    dados = [] # Lista para armazenar os dados\n    \n    cabecalho_tabela = [\"S\u00edmbolo\", \"Nome da Empresa\", \"\u00daltimo Pre\u00e7o\", \"Alterar\", \"Varia\u00e7\u00e3o\", \"Volume\"] # Cabe\u00e7alho da tabela\n    \n    # pegar os dados da tabela\n    # a classe da tabela \u00e9 \"BdT Bdc($seperatorColor) Ta(end) Fz(s)\"\n    linhas_tabela = soup.find_all('tr', class_=\"BdT Bdc($seperatorColor) Ta(end) Fz(s)\")\n\n    for linha in linhas_tabela:\n        valores = [] # Lista para armazenar os valores de cada linha\n\n        # cada coluna \u00e9 um td na linha da tabela \n        coluna = linha.find_all('td') # Encontrar todas as colunas da linha\n    \n        for valor in coluna:\n            valor = valor.text.strip() # Limpar o texto\n            valores.append(valor) # Adicionar o valor na lista de valores\n\n        #-----ja temos os valores da linha, agora vamos criar um dicion\u00e1rio com os valores e o cabe\u00e7alho da tabela---    \n\n        try:\n            info = dict(zip(cabecalho_tabela, valores)) # Criar um dicion\u00e1rio `info` com os valores e o cabe\u00e7alho da tabela\n            dados.append(info) # Adicionar o dicion\u00e1rio na lista de dados\n        except Exception as e:\n            error_msg = f'Erro {e} na captura de dados para a linha: {info}'\n            print(error_msg)\n            dados.append({'error': error_msg})\n    return dados\n\n\ndef save_to_csv(data, filename=\"output.csv\"):\n    df = pd.DataFrame(data)\n    df.to_csv(filename, index=False)\n    print(f'Dados salvos em {filename}')\n    return df\n\ndef main():\n    url = 'https://br.financas.yahoo.com/quote/%5EBVSP/components/'\n    html = get_page(url)\n    data = parse_data(html)\n    df = save_to_csv(data, \"dados_bovespa.csv\")\n    print(df)\n\nif __name__ == \"__main__\":\n    main()\n</pre> import pandas as pd from bs4 import BeautifulSoup import requests  def get_page(url):     headers = {         \"user-agent\": \"Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Ubuntu Chromium/71.0.3578.80 Chrome/71.0.3578.80 Safari/537.36\"     }     response = requests.get(url, headers=headers)     response.raise_for_status()  # Garante que a resposta da requisi\u00e7\u00e3o foi bem-sucedida     return response.text  def parse_data(html):     soup = BeautifulSoup(html, 'html.parser')          dados = [] # Lista para armazenar os dados          cabecalho_tabela = [\"S\u00edmbolo\", \"Nome da Empresa\", \"\u00daltimo Pre\u00e7o\", \"Alterar\", \"Varia\u00e7\u00e3o\", \"Volume\"] # Cabe\u00e7alho da tabela          # pegar os dados da tabela     # a classe da tabela \u00e9 \"BdT Bdc($seperatorColor) Ta(end) Fz(s)\"     linhas_tabela = soup.find_all('tr', class_=\"BdT Bdc($seperatorColor) Ta(end) Fz(s)\")      for linha in linhas_tabela:         valores = [] # Lista para armazenar os valores de cada linha          # cada coluna \u00e9 um td na linha da tabela          coluna = linha.find_all('td') # Encontrar todas as colunas da linha              for valor in coluna:             valor = valor.text.strip() # Limpar o texto             valores.append(valor) # Adicionar o valor na lista de valores          #-----ja temos os valores da linha, agora vamos criar um dicion\u00e1rio com os valores e o cabe\u00e7alho da tabela---              try:             info = dict(zip(cabecalho_tabela, valores)) # Criar um dicion\u00e1rio `info` com os valores e o cabe\u00e7alho da tabela             dados.append(info) # Adicionar o dicion\u00e1rio na lista de dados         except Exception as e:             error_msg = f'Erro {e} na captura de dados para a linha: {info}'             print(error_msg)             dados.append({'error': error_msg})     return dados   def save_to_csv(data, filename=\"output.csv\"):     df = pd.DataFrame(data)     df.to_csv(filename, index=False)     print(f'Dados salvos em {filename}')     return df  def main():     url = 'https://br.financas.yahoo.com/quote/%5EBVSP/components/'     html = get_page(url)     data = parse_data(html)     df = save_to_csv(data, \"dados_bovespa.csv\")     print(df)  if __name__ == \"__main__\":     main()  <pre>Dados salvos em dados_bovespa.csv\n     S\u00edmbolo                                    Nome da Empresa \u00daltimo Pre\u00e7o  \\\n0   EMBR3.SA                                       Embraer S.A.        31,02   \n1   CTIP3.SA                                           CTIP3.SA                \n2   ENBR3.SA                                           ENBR3.SA                \n3   CESP6.SA                                           CESP6.SA                \n4   BRPR3.SA                                 BR Properties S.A.       131,17   \n5   ABEV3.SA                                         Ambev S.A.        12,05   \n6   BRFS3.SA                                           BRF S.A.        17,94   \n7   EQTL3.SA                            Equatorial Energia S.A.        31,39   \n8   BBSE3.SA                   BB Seguridade Participa\u00e7\u00f5es S.A.        32,88   \n9   BBDC4.SA                                Banco Bradesco S.A.        13,92   \n10  ELET3.SA   Centrais El\u00e9tricas Brasileiras S.A. - Eletrobr\u00e1s        38,24   \n11  CIEL3.SA                                         Cielo S.A.         5,42   \n12  CPLE6.SA            Companhia Paranaense de Energia - COPEL         9,13   \n13  CMIG4.SA       Companhia Energ\u00e9tica de Minas Gerais - CEMIG        12,84   \n14  BBDC3.SA                                Banco Bradesco S.A.        12,30   \n15  CPFE3.SA                                  CPFL Energia S.A.        34,76   \n16  BBAS3.SA                               Banco do Brasil S.A.        27,90   \n17  ECOR3.SA        EcoRodovias Infraestrutura e Log\u00edstica S.A.         7,56   \n18  CSAN3.SA                                         Cosan S.A.        14,21   \n19  BRKM5.SA                                       Braskem S.A.        22,88   \n20  BRAP4.SA                                     Bradespar S.A.        20,49   \n21  CCRO3.SA                                           CCR S.A.        12,72   \n22  ESTC3.SA                                           ESTC3.SA                \n23  GGBR4.SA                                        Gerdau S.A.        22,63   \n24  CYRE3.SA  Cyrela Brazil Realty S.A. Empreendimentos e Pa...        20,86   \n25  CSNA3.SA                     Companhia Sider\u00fargica Nacional        14,02   \n26  BVMF3.SA                                           BVMF3.SA                \n27    656690                                             656690                \n28  BRML3.SA                                           BRML3.SA                \n29  FIBR3.SA                               Fibria Celulose S.A.                \n\n   Alterar Varia\u00e7\u00e3o     Volume  \n0    -0,40   -1,27%  1.268.300  \n1                               \n2                               \n3                               \n4     0,00    0,00%          0  \n5    -0,02   -0,17%  4.424.600  \n6     0,04   +0,22%  2.080.600  \n7    -0,10   -0,32%  1.200.100  \n8    -0,13   -0,39%    529.200  \n9    -0,08   -0,57%  8.888.400  \n10   -0,25   -0,65%  1.056.300  \n11   -0,04   -0,73%  2.870.800  \n12   -0,09   -0,98%  3.403.500  \n13   -0,13   -1,00%  1.945.100  \n14   -0,13   -1,05%  1.005.300  \n15   -0,39   -1,11%    436.000  \n16   -0,33   -1,17%  5.602.100  \n17   -0,09   -1,18%  1.047.100  \n18   -0,19   -1,32%  1.979.900  \n19   -0,42   -1,80%    365.000  \n20   -0,39   -1,87%  1.551.000  \n21   -0,28   -2,15%  2.958.100  \n22                              \n23   -0,46   -1,99%  2.431.600  \n24   -0,49   -2,30%  2.250.400  \n25   -0,37   -2,57%  1.485.300  \n26                              \n27                              \n28                              \n29                              \n</pre> In\u00a0[25]: Copied! <pre>import pandas as pd\n\ndf = pd.read_csv(\"dados_bovespa.csv\")\ndf.head()\n</pre> import pandas as pd  df = pd.read_csv(\"dados_bovespa.csv\") df.head()  Out[25]: S\u00edmbolo Nome da Empresa \u00daltimo Pre\u00e7o Alterar Varia\u00e7\u00e3o Volume 0 EMBR3.SA Embraer S.A. 31,02 -0,40 -1,27% 1.268.300 1 CTIP3.SA CTIP3.SA NaN NaN NaN NaN 2 ENBR3.SA ENBR3.SA NaN NaN NaN NaN 3 CESP6.SA CESP6.SA NaN NaN NaN NaN 4 BRPR3.SA BR Properties S.A. 131,17 0,00 0,00% 0"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#web-scraping-com-beautifulsoup","title":"Web Scraping com BeautifulSoup\u00b6","text":"<p>Raspando os dados da internet para projetos de ci\u00eancia de dados.</p>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#capturando-texto-de-um-site-de-noticias","title":"Capturando texto de um site de not\u00edcias\u00b6","text":"<p>Vamos fazer a requisi\u00e7\u00e3o da url:</p> <p><code>https://economia.uol.com.br/noticias/redacao/2022/03/10/petrobras-anuncia-aumento-nos-precos-de-gasolina-diesel-e-gas-de-cozinha.htm</code></p> <p>Na inspe\u00e7\u00e3o da pagina, note onde est\u00e1 a tag que contem o conte\u00fado.</p> <p>Encontrada o conte\u00fado <code>div:image-content-pad</code></p> <p></p>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#vamos-tentar-com-uma-pagina-diferente","title":"Vamos tentar com uma pagina diferente\u00b6","text":"<p>url: <code>https://www.uol.com.br/carros/avaliacao/avaliacao-audi-q8-e-tron.htm</code></p> <p>o conteudo pode estar em: <code>div:col-xs-8 col-sm-21 col-md-21</code></p>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#podemos-melhorar-um-pouco-mais-essa-captura-de-conteudo","title":"podemos melhorar um pouco mais essa captura de conte\u00fado\u00b6","text":"<p>Vamos inspecionar e tentar capturar apenas os dados da tabela.</p> <p></p> <p>Perceba que:</p> <ul> <li><p>Podemos buscar todos os elementos <code>ul</code> com a classe <code>table-line</code>, que cont\u00eam os dados.</p> <ul> <li><p>Para cada <code>ul</code>, localizar os elementos <code>li</code> para <code>label-spec</code> e <code>desc-spec</code> ou <code>desc-spec check</code>.</p> </li> <li><p>Extrair o texto de cada <code>li</code>, remover espa\u00e7os extras com <code>strip()</code>, e imprime em formato de chave-valor.</p> </li> </ul> </li> </ul>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#desafio","title":"Desafio\u00b6","text":"<p>Hora de pr\u00e1ticar! Fa\u00e7a uma raspagem simples. Para isso:</p> <ul> <li>Escolha um site e uma not\u00edcia especifica, de sua preferencia;</li> <li>Fa\u00e7aa inspe\u00e7\u00e3o do site e utilize <code>requests</code> para capturar o conte\u00fado HTML.</li> <li>Use <code>BeautfulSoup</code> para realizar o parce das informa\u00e7\u00f5es.</li> <li>Organize o conte\u00fado capturado de forma conveniente, fa\u00e7a adapta\u00e7\u00f5es no c\u00f3digo para organizar o conte\u00fado em tabelas e etc...</li> </ul>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#informacoes-de-filmes-em-cartaz","title":"Informa\u00e7\u00f5es de filmes em cartaz\u00b6","text":"<p>Vamos realizar a captura dos filmes que est\u00e3o em cartaz.</p>"},{"location":"aulas/ctp/web/webscraping/web_scraping.html#estruturando-o-codigo-capiturando-dados-de-acoes-e-visualizando-com-pandas-dataframe","title":"Estruturando o c\u00f3digo, Capiturando dados de a\u00e7\u00f5es e visualizando com Pandas dataframe\u00b6","text":"<p>As boas pr\u00e1ticas continuam, e podemos organizar nosso c\u00f3digo em fun\u00e7\u00f5es para facilitar a manuten\u00e7\u00e3o e legibilidade.</p> <p>Vamos fazer raspagem de dados do site de finan\u00e7as Yahoo para obter informa\u00e7\u00f5es sobre os componentes do \u00edndice Bovespa (BVSP).</p> <p>O objetivo \u00e9 capturar dados sobre 30 principais empresas listadas neste \u00edndice, incluindo s\u00edmbolo, nome da empresa, \u00faltimo pre\u00e7o, varia\u00e7\u00e3o e volume, e depois armazen\u00e1-los em um DataFrame do Pandas</p>"},{"location":"sobre/sobre.html","title":"Sobre o curso","text":""},{"location":"sobre/sobre.html#aulas","title":"Aulas","text":"<p>Nossos encontros ocorrem:</p> <pre><code>- Ter\u00e7a-feira: das 07h40 \u00e0s 09h40 (Remoto via Teams)\n- Sexta-feira: das 07h40 \u00e0s 09h40 (Presencial FIAP LINS)\n</code></pre>"},{"location":"sobre/sobre.html#avaliacao","title":"Avalia\u00e7\u00e3o","text":"<p>Avalia\u00e7\u00f5es composta por: </p> <pre><code>- Listas de exercicios\n- Mini-projetos\n- Checkpoints\n</code></pre>"},{"location":"sobre/sobre.html#conteudo-programatico","title":"Conte\u00fado Program\u00e1tico","text":"<ul> <li> <p>Introdu\u00e7\u00e3o \u00e0 Programa\u00e7\u00e3o</p> <p>Apresenta\u00e7\u00e3o e objetivos do curso O que \u00e9 programa\u00e7\u00e3o e por que aprender Python Instala\u00e7\u00e3o e configura\u00e7\u00e3o do ambiente Python Primeiro programa: \"Ol\u00e1, Mundo!\"</p> </li> <li> <p>Fundamentos da Linguagem</p> <p>Conceito de algoritmos: Fluxograma e Pseudoc\u00f3digo Tipos de dados: Inteiros, Reais, Texto, L\u00f3gico Vari\u00e1veis e operadores aritm\u00e9ticos Comandos de entrada e sa\u00edda: print() e input()</p> </li> <li> <p>Estruturas de Decis\u00e3o</p> <p>Operadores relacionais e l\u00f3gicos Estruturas condicionais: if, if-else, if-elif-else Introdu\u00e7\u00e3o ao comando match-case</p> </li> <li> <p>Estruturas de Repeti\u00e7\u00e3o</p> <p>Loop while: conceitos e pr\u00e1tica Loop for: trabalhando com sequ\u00eancias e itera\u00e7\u00f5es Break, continue e pass: controlando o fluxo de repeti\u00e7\u00e3o</p> </li> <li> <p>Fun\u00e7\u00f5es e Modulariza\u00e7\u00e3o</p> <p>Introdu\u00e7\u00e3o a fun\u00e7\u00f5es: defini\u00e7\u00e3o e chamada Par\u00e2metros, argumentos e valores de retorno Fun\u00e7\u00f5es embutidas e m\u00f3dulos em Python</p> </li> <li> <p>Estruturas de Dados B\u00e1sicas</p> <p>Strings: manipula\u00e7\u00e3o e m\u00e9todos \u00fateis Listas: cria\u00e7\u00e3o, acesso e m\u00e9todos Tuplas e Dicion\u00e1rios: conceitos e pr\u00e1tica</p> </li> <li> <p>Programa\u00e7\u00e3o Avan\u00e7ada</p> <p>Fun\u00e7\u00f5es avan\u00e7adas: *args, **kwargs e lambdas Compreens\u00f5es de lista e dicion\u00e1rio Trabalhando com arquivos: leitura e escrita</p> </li> <li> <p>Algoritmos de Busca e Ordena\u00e7\u00e3o</p> <p>Algoritmos b\u00e1sicos de busca: linear e bin\u00e1ria Algoritmos de ordena\u00e7\u00e3o: bolha, sele\u00e7\u00e3o e inser\u00e7\u00e3o</p> </li> <li> <p>T\u00f3picos Avan\u00e7ados</p> <p>Introdu\u00e7\u00e3o a classes e objetos (OOP) Exce\u00e7\u00f5es e tratamento de erros Bibliotecas e pacotes em Python Desenvolvimento Web Banco de dados </p> </li> </ul>"}]}